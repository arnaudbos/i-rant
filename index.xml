<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arnaud Bos</title>
    <link>http://i-rant.arnaudbos.com/index.xml</link>
    <description>Recent content on Arnaud Bos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 03 Jul 2018 23:17:15 +0100</lastBuildDate>
    <atom:link href="http://i-rant.arnaudbos.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>J On The Beach 2018 — Review</title>
      <link>http://i-rant.arnaudbos.com/j-on-the-beach-malaga-2018-review/</link>
      <pubDate>Tue, 03 Jul 2018 23:17:15 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/j-on-the-beach-malaga-2018-review/</guid>
      <description>


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/plaza_del_obispo.jpg&#34; alt=&#34;360° picture of Plaza del Obispo&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;360 Photo — Plaza del Obispo&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://jonthebeach.com&#34;&gt;J On The Beach&lt;/a&gt; (JOTB) is &lt;em&gt;&amp;ldquo;A Big Data
Conference On The Beach&amp;rdquo;&lt;/em&gt; happening in Malaga (Spain) and this year (2018)
was its third edition.&lt;/p&gt;

&lt;h1 id=&#34;tl-dr&#34;&gt;tl;dr&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The staff was great, the speakers awesome and the talks interesting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I felt very comfortable and almost at home during the three days. The
atmosphere felt like being at a local conference or meetup but with famous and
renowned speakers from around the world.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Everyone I met - speakers/attendees/staff - was accessible and really, really
affable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;YES, I totally did copy/paste the three points above from
&lt;a href=&#34;../j-on-the-beach-malaga-2017-review&#34;&gt;last year&amp;rsquo;s review&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Less great than last year: no diner included, &amp;ldquo;just&amp;rdquo; breakfast and lunch so
I had to eat outside, like, in tapas bars or restaurants by the beach, yeah
poor me&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Awesome line-up, great diversity, good job there &lt;span class=&#34;emoji&#34;&gt;:thumbsup:&lt;/span&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Met a few people from last year and a few new people, cool!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Unfortunately I couldn&amp;rsquo;t attend the party but I&amp;rsquo;m sure it was as great as last
year&amp;rsquo;s.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;preamble&#34;&gt;Preamble&lt;/h1&gt;

&lt;p&gt;I wasn&amp;rsquo;t sure I would attend JOTB 2018 because I had more or less decided to
attend only one big conference this year, like &lt;a href=&#34;https://www.thestrangeloop.com/&#34;&gt;Strange Loop&lt;/a&gt;
or the &lt;a href=&#34;http://clojure-conj.org/&#34;&gt;Clojure/conj&lt;/a&gt;.&lt;br /&gt;
And then I saw &lt;a href=&#34;https://jonthebeach.com/speakers&#34;&gt;the speakers&lt;/a&gt; announcements
on Twitter, one after the other, and couldn&amp;rsquo;t resist.&lt;br /&gt;
So here&amp;rsquo;s my review of J On The Beach 2018!&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Hopefully shorter than last year&amp;rsquo;s&lt;/small&gt;&lt;/p&gt;

&lt;h1 id=&#34;tabla-de-contenido&#34;&gt;Tabla de contenido&lt;/h1&gt;

&lt;div id=&#34;toc&#34; class=&#34;well col-md-12&#34;&gt;
  &lt;!-- toc --&gt;
&lt;/div&gt;

&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/termica_landscape.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/termica_landscape.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;100%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    La Termica
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/jungle_landscape.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/jungle_landscape.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Parque de Málaga
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/joeerl.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/joeerl.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Joe Armstrong Interview
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/venue_panoramic.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;6306x1902&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/venue_panoramic.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;100%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Garden
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;



&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The title of the conference &lt;em&gt;&amp;ldquo;A Big Data Conference On The Beach&amp;rdquo;&lt;/em&gt; is still not a
scam: the beach is right there, 200 meters away from the conference venue
&lt;a href=&#34;http://www.latermicamalaga.com/&#34;&gt;La Termica&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The location was easy to find because it is a cultural center. It is not in
the city center, more halfway between the airport and the center and can
be reached in 40 minutes walk by the beach. There are hotels around and a
bus stop 50m from the entrance, as well as city bikes spots.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The place in itself is nice, the hallways and rooms are large and bright.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The staff was really welcoming, everyone speaking English and
willing to assist the speakers and attendees.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;YES, I totally did copy/paste the four points above from
&lt;a href=&#34;../j-on-the-beach-malaga-2017-review&#34;&gt;last year&amp;rsquo;s review&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The registration was sooo smooth. Compared to last year, they&amp;rsquo;ve split the
stream of incoming attendees into two groups by alphabetical order which was
a good move.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I&amp;rsquo;ll skip the goodies part for this year, they were OK: couple of notepads,
stickers, sunglasses, sunscreen ^^&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;day1-erlang-workshop&#34;&gt;Day1: Erlang Workshop&lt;/h1&gt;

&lt;p&gt;New year, new workshop!&lt;br /&gt;
And this year I&amp;rsquo;ve had the chance to get a taste of &lt;a href=&#34;https://www.erlang.org/&#34;&gt;erlang&lt;/a&gt;
instructed by no one else than: &lt;a href=&#34;https://twitter.com/joeerl&#34;&gt;Joe Armstrong&lt;/a&gt;!&lt;/p&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/erlang.png&#34; alt=&#34;erlang: let it crash&#34;
            width=&#34;50%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;The workshop started with a crash course on Erlang&amp;rsquo;s syntax and 101 concepts:
Joe Armstrong made us all &lt;strong&gt;open a REPL and experiment&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We discovered Erlang&amp;rsquo;s advanced pattern matching, data structures, destructuring,
case statements, function definitions, actors, etc.&lt;br /&gt;
A very good introduction but as Joe remarked, all of this
we could learn by ourselves, so after 1 or 2 hours of this he pointed us
toward &lt;a href=&#34;https://github.com/joearms/courses/tree/master/1_day&#34;&gt;this one day course&lt;/a&gt;
and to other resources such as his own book or this &lt;a href=&#34;http://learnyousomeerlang.com/content&#34;&gt;Learn You Some Erlang for Great Good&lt;/a&gt; book.&lt;/p&gt;

&lt;p&gt;The rest of the workshop was pieces of wisdom and stories told by a man who&amp;rsquo;s
earned his gray hair and seen a lot of things in his career, it was fascinating.&lt;/p&gt;

&lt;p&gt;Of course we heard many anecdotes about Erlang and Ericsson but we also
learned a lot about &amp;ldquo;the 4 erlangs&amp;rdquo;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sequential Erlang&lt;/li&gt;
&lt;li&gt;Concurrent Erlang&lt;/li&gt;
&lt;li&gt;Fault-tolerant Erlang&lt;/li&gt;
&lt;li&gt;Distributed Erlang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I especially like the presentation of Erlang as layers and how they stack up
to create a language that is really suited to today&amp;rsquo;s massively parallel and
distributed environments.&lt;/p&gt;

&lt;p&gt;Let me plagiarize the &lt;a href=&#34;https://github.com/joearms/courses/blob/master/1_day/one_day_erlang.pdf&#34;&gt;chapter 15 of the PDF course&lt;/a&gt;
I liked above:&lt;/p&gt;

&lt;p&gt;Sequential Erlang:&lt;/p&gt;

&lt;p&gt;• Simple functional language&lt;br /&gt;
• Lists, tuples, atoms, bignums, floats, &amp;hellip;&lt;br /&gt;
• Function selection is by pattern matching&lt;br /&gt;
• Data selection is by pattern matching • Variables are immutable&lt;/p&gt;

&lt;p&gt;Concurrent Erlang:&lt;/p&gt;

&lt;p&gt;• Adds spawn, send and receive to sequential Erlang.&lt;br /&gt;
• register [unregister] can be used to associate a name with a process&lt;/p&gt;

&lt;p&gt;Fault-tolerant Erlang:&lt;/p&gt;

&lt;p&gt;• catch .. throw and try &amp;hellip; catch &amp;hellip; end added to sequential Erlang&lt;br /&gt;
• link, process_flag(trap_exit, true) added to concurrent Erlang&lt;/p&gt;

&lt;p&gt;Distributed Erlang:&lt;/p&gt;

&lt;p&gt;• Add +spawn(Node, Mod, Func, Args) to concurrent Erlang&lt;br /&gt;
• Or use explicit term passing over sockets&lt;/p&gt;

&lt;p&gt;Et Voilà! You get a &amp;ldquo;multi-core ready, fault-tolerant distributed programming&amp;rdquo;
language with a proven track record of successful projects for 30 years and
counting.&lt;/p&gt;

&lt;h1 id=&#34;day-2-talks&#34;&gt;Day 2: Talks&lt;/h1&gt;

&lt;h2 id=&#34;vlad-mihalcea-transactions-and-concurrency-control-patterns&#34;&gt;Vlad Mihalcea — Transactions and Concurrency Control Patterns&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;ve read &lt;a href=&#34;../j-on-the-beach-jepsen-workshop&#34;&gt;my review from last year&amp;rsquo;s Jepsen workshop&lt;/a&gt;,
you&amp;rsquo;ve probably noticed that I like to understand things that fail.&lt;/p&gt;

&lt;p&gt;Even if we don&amp;rsquo;t go as far as Kyle Kingsbury, pushing the boundaries (and
&lt;a href=&#34;http://jepsen.io/analyses&#34;&gt;writing fantastic analyses&lt;/a&gt;), we all implicitly
know that distributed systems are complicated pieces of software.&lt;br /&gt;
We tend to code for the happy path, hope everything works well and in case it
doesn&amp;rsquo;t, well, what could go wrong?&lt;/p&gt;

&lt;p&gt;After all, we&amp;rsquo;ve used relational databases for years, and ORMs, and we all know
that when we use transactions, everything is fine and &lt;code&gt;ACID&lt;/code&gt;: our tool and SQL
will deal with the complexity&amp;hellip;&lt;/p&gt;

&lt;p&gt;Of course this isn&amp;rsquo;t true, and &lt;a href=&#34;https://twitter.com/vlad_mihalcea&#34;&gt;Vlad Mihalcea&lt;/a&gt;
is here to raise awareness: we &lt;strong&gt;have&lt;/strong&gt; to understand those concepts.&lt;/p&gt;

&lt;p&gt;Different relational databases have different concurrency control mechanism
available with different guarantees, each with their own tweaks and tradeoffs.
And we must understand those technical details in order to choose a database
and write correct software.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s mention a few concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Serializability&lt;/li&gt;
&lt;li&gt;Linearizability&lt;/li&gt;
&lt;li&gt;Two-Phase-Locking&lt;/li&gt;
&lt;li&gt;MVCC&lt;/li&gt;
&lt;li&gt;Snapshot isolation&lt;/li&gt;
&lt;li&gt;Dirty read&lt;/li&gt;
&lt;li&gt;Stale read&lt;/li&gt;
&lt;li&gt;Phantom read&lt;/li&gt;
&lt;li&gt;Read skew&lt;/li&gt;
&lt;li&gt;Write skew&lt;/li&gt;
&lt;li&gt;Lost update&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I really really make a parallel between his talk and Kyle Kingsbury&amp;rsquo;s &lt;a href=&#34;http://jepsen.io/talks&#34;&gt;Jepsen series of talks&lt;/a&gt;, because they deal with similar
concepts but a different scale (my personal favorite: &lt;a href=&#34;https://youtu.be/QdkS6ZjeR7Q&#34;&gt;Jepsen II: Linearizable Boogaloo&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve talk at length with Vlad during the conference, my feeling was that this
talk shouldn&amp;rsquo;t be rated as &amp;ldquo;intermediate&amp;rdquo; but as &amp;ldquo;expert&amp;rdquo; because of the
concepts involved, but he made me change my mind.&lt;/p&gt;

&lt;p&gt;This level is indeed &amp;ldquo;intermediate&amp;rdquo; given the topic: transactions and
concurrency. Every developer with more than 5 years of experience and working
with databases should know and understand those concepts.&lt;/p&gt;

&lt;p&gt;Of course this is not the case, and this is why talks like Vlad&amp;rsquo;s are important.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/4qiV_QhPyIk&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;venkat-subramaniam-exploring-java-9&#34;&gt;Venkat Subramaniam — Exploring Java 9&lt;/h2&gt;

&lt;p&gt;One does not simply &amp;ldquo;Explore Java 9&amp;rdquo; with &lt;a href=&#34;https://twitter.com/venkat_s&#34;&gt;Venkat Subramaniam&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With Java 10 around the corner you might wonder why bothering with Java 9?&lt;/p&gt;

&lt;p&gt;Well, Java 9 brings a few changes and additions to Java that are worth knowing
to keep up with the language so it&amp;rsquo;s better not to skip it.&lt;/p&gt;

&lt;p&gt;Again, this is not new stuff so I won&amp;rsquo;t enumerate the updates here but I can
mention the new try-with-resources properties, a couple of new operators on
&lt;code&gt;Stream&lt;/code&gt;, &lt;code&gt;IntStream&lt;/code&gt; and &lt;code&gt;Optional&lt;/code&gt;, the new immutable collections factories
&lt;code&gt;List.of(&amp;quot;One&amp;quot;, &amp;quot;Two&amp;quot;, &amp;quot;Three&amp;quot;);&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;Most important in my opinion are the Java modules, and also the feature that
will probably be the most ignored feature, but my personal favorite: &lt;code&gt;jshell&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Of course Venkat Subramaniam is an awesome speaker and because these days a
talk on Java wouldn&amp;rsquo;t be a good talk on Java without making fun of Java (?),
so go have fun watching him.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/OWOkB80p2DY&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;martin-kelppmann-automerge-making-servers-optional-for-real-time-collaboration&#34;&gt;Martin Kelppmann - Automerge: Making servers optional for real-time collaboration&lt;/h2&gt;

&lt;p&gt;I really enjoy learning and reading about distributed systems, database in
particular, I find them fascinating.&lt;/p&gt;

&lt;p&gt;In this field, &lt;a href=&#34;https://twitter.com/martinkl&#34;&gt;Martin Kelppmann&lt;/a&gt;&amp;rsquo;s book,
&lt;a href=&#34;https://dataintensive.net/&#34;&gt;Designing Data-Intensive Applications&lt;/a&gt;, is a really
valuable resource to learn about reliability, consistency and scalability issues
and find more specialized resources and papers to study the field later on.&lt;/p&gt;

&lt;p&gt;In this talk, Martin presents the difference between &lt;strong&gt;consensus&lt;/strong&gt; and &lt;strong&gt;convergence&lt;/strong&gt;
and, using really simple words, analogies and examples, slowly makes its way
to a very interesting topic: &lt;a href=&#34;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&#34;&gt;&lt;em&gt;Conflict-Free Replicated Data Type&lt;/em&gt; (CRDTs)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/automerge/automerge&#34;&gt;Automerge&lt;/a&gt; is a work in progress and
the result of studies on CRDTs, their representation and algorithms to
automatically resolve concurrent modifications without losing updates and
progressing toward replicas state &lt;em&gt;convergence&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Another great aspect is that Automerge does not presuppose of a specific
network protocol, it is network-agnostic.&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s even more interesting, is that &lt;a href=&#34;https://github.com/automerge/automerge&#34;&gt;Automerge&lt;/a&gt;,
although a research topic, already has a practical implementation and a library
available as an npm package, and it also has a few example applications available
on the github page of the project using different network protocols.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m very eager to see what kind of application I could build using CRDTs in the
future.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href=&#34;https://arxiv.org/abs/1608.03960&#34;&gt;A Conflict-Free Replicated JSON Datatype&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/PHz17gwiOc8&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;sergey-bykov-distributed-transactions-are-dead-long-live-distributed-transaction&#34;&gt;Sergey Bykov — Distributed Transactions are dead, long live distributed transaction!&lt;/h2&gt;

&lt;p&gt;Last year I&amp;rsquo;ve been really impressed by &lt;a href=&#34;http://i-rant.arnaudbos.com/j-on-the-beach-malaga-2017-review/#dharma-shukla-lessons-learnt-from-building-a-globally-distributed-database-service-from-the-ground-up&#34;&gt;Dharma Shukla&amp;rsquo;s talk about CosmosDB&lt;/a&gt; and the
engineering effort put by Microsoft.&lt;/p&gt;

&lt;p&gt;In this talk, &lt;a href=&#34;https://twitter.com/sergeybykov&#34;&gt;Sergey Bykov&lt;/a&gt; gives an
introductory presentation of &lt;a href=&#34;https://dotnet.github.io/orleans/&#34;&gt;Microsoft Orleans&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s really interesting to see big companies, move back from full eventual
consistency models and tackle the problem of distributed transactions.&lt;/p&gt;

&lt;p&gt;In a nutshell, Orleans is an actor model (encapsulated state, message passing, &amp;hellip;)
based framework for the .NET ecosystem with support for transactions (beta).&lt;/p&gt;

&lt;p&gt;And this is really exciting even if you&amp;rsquo;re not a .NET aficionado,
because it has extensive documentation for you to study if you like
to read about distributed systems.&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://adrianmarriott.net/logosroot/papers/LifeBeyondTxns.pdf&#34;&gt;Life Beyond Distributed Transactions: An Apostate’s Opinion – Pat Helland, 2007&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.acolyer.org/2014/11/20/life-beyond-distributed-transactions/&#34;&gt;The Morning Paper on the above publication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/2ylIl_QToq4&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;jonas-boner-designing-event-first-microservices&#34;&gt;Jonas Boner — Designing Event-First Microservices&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;Designing Event-First Microservices&amp;rdquo;, is a talk about event sourcing by
&lt;a href=&#34;https://twitter.com/jboner&#34;&gt;Mr Jonas Bonér&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://martinfowler.com/eaaDev/EventSourcing.html&#34;&gt;Event sourcing&lt;/a&gt; is one very
interesting answer to the kind of problems encountered in microservices,
illustrated by the &lt;a href=&#34;https://www.google.fr/search?q=death+star+microservices&amp;amp;tbm=isch&#34;&gt;Death Star diagram&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By emitting events, services can be more naturally decoupled and made reactive
to their environment. And we know being &lt;a href=&#34;https://www.reactivemanifesto.org/&#34;&gt;reactive&lt;/a&gt;
is a concept dear to the heart of Jonas Bonér.&lt;/p&gt;

&lt;p&gt;In this talk we also get to hear about &lt;a href=&#34;http://ziobrando.blogspot.com/2013/11/introducing-event-storming.html&#34;&gt;Event storming&lt;/a&gt;
and &lt;a href=&#34;http://dddcommunity.org/&#34;&gt;Domain Driven Design (DDD)&lt;/a&gt;, and a few
illustrations on how to handle state and side-effects.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re already familiar with this topic or these concepts, or you&amp;rsquo;ve already
watched a couple of talks by &lt;a href=&#34;https://twitter.com/gregyoung&#34;&gt;Greg Young&lt;/a&gt; or
read a couple of articles by &lt;a href=&#34;https://twitter.com/martinfowler&#34;&gt;Martin Fowler&lt;/a&gt;,
you probably won&amp;rsquo;t learn a lot by watching this talk, but if you don&amp;rsquo;t, by all
means please watch this and reconsider your way of building services, it&amp;rsquo;s
mind blowing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/iDey1GoAJy0&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;day-3-talks&#34;&gt;Day 3: Talks&lt;/h1&gt;

&lt;h2 id=&#34;joe-armstrong-good-ideas-that-we-forgot&#34;&gt;Joe Armstrong — Good ideas that we forgot.&lt;/h2&gt;

&lt;p&gt;It is hard for me to write a summary of a talk by
&lt;a href=&#34;https://twitter.com/joeerl&#34;&gt;Joe Armstrong&lt;/a&gt;.&lt;br /&gt;
When he&amp;rsquo;s telling, you&amp;rsquo;re listening.&lt;/p&gt;

&lt;p&gt;In this keynote he talked about our relatively young industry&amp;rsquo;s fascinating
ability to forget about stuff that was invented just a few decades ago.&lt;/p&gt;

&lt;p&gt;A few days ago, &lt;a href=&#34;https://twitter.com/_andreidan&#34;&gt;Andrei Dan&lt;/a&gt; (whom I met last
year &lt;a href=&#34;../j-on-the-beach-malaga-2017-review&#34;&gt;at JOTB 2017&lt;/a&gt;) and fellow &amp;ldquo;craties&amp;rdquo;
wrote a review of a bunch of talks they attended at JOTB18, among which is a
review of this keynote.&lt;/p&gt;

&lt;p&gt;I encourage you to read &lt;a href=&#34;https://crate.io/a/craties-go-to-j-on-the-beach/&#34;&gt;their review&lt;/a&gt;.&lt;br /&gt;
They also cover talks I didn&amp;rsquo;t attend so you&amp;rsquo;ll find other interesting
feedbacks.&lt;/p&gt;

&lt;p&gt;Anyways, go watch any of his talk, you&amp;rsquo;ll learn something or listen to a good story,
or both.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/YuBi7Qs555U&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;don-syme-the-f-path-to-relaxation&#34;&gt;Don Syme — The F# Path to Relaxation&lt;/h2&gt;

&lt;p&gt;This is the story of building a language to bridge the gap between
functional programming purism and pragmatism, leveraging OO and .NET benefits,
and gaining momentum and building a community.&lt;/p&gt;

&lt;p&gt;If I were into .NET I&amp;rsquo;d sure as heck would give it a try.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/dsyme&#34;&gt;Don Syme&lt;/a&gt; goods a really detailed explanation
of the probles/disputes Microsoft was trying to solve by building a language
that would be the synthesis of FP and OO, here are some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Functional VS .NET interoperability&lt;/li&gt;
&lt;li&gt;Functional VS Object Oriented&lt;/li&gt;
&lt;li&gt;Functional VS Practical&lt;/li&gt;
&lt;li&gt;Code VS Data&lt;/li&gt;
&lt;li&gt;Pattern Matching VS Abstraction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think the tradeoffs are really sound in what they adopted, what they
deprecated and what they kept and decided &amp;ldquo;tolerate&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I was particularly interested in the community aspect and adoption of the
language and what they used to achieve it: openness (remember, Microsoft&amp;hellip;),
keep it neutral, accepting contributions, etc.&lt;/p&gt;

&lt;p&gt;If I were to be snarky however, I&amp;rsquo;d say that between the plethora of functional
languages available on the JVM today and C# kinda sorta functional abilities,
developers on the .NET platform didn&amp;rsquo;t have much choice but to embrace this new
language for functional programming.&lt;/p&gt;

&lt;p&gt;Please don&amp;rsquo;t let this last remark get to you, have a look at the talk, it&amp;rsquo;s
really interesting from a language geek point of view.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/CLuHokcr63k&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;martin-thompson-cluster-consensus-when-aeron-met-raft&#34;&gt;Martin Thompson — Cluster Consensus: when Aeron met Raft&lt;/h2&gt;

&lt;p&gt;This time again, I encourage you to read &lt;a href=&#34;https://crate.io/a/craties-go-to-j-on-the-beach/&#34;&gt;CrateDB people&amp;rsquo;s review&lt;/a&gt;
of this talk by the one and only
&lt;a href=&#34;https://twitter.com/mjpt777&#34;&gt;Martin Thompson&lt;/a&gt; rather than reading what I could
have wrote about it.&lt;/p&gt;

&lt;p&gt;They give very interesting links but I really want to point you to the very
first paper Martin did talk about in his talk:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.usenix.org/system/files/conference/osdi14/osdi14-paper-yuan.pdf&#34;&gt;Simple testing can prevent most critical failures: an analysis of production failures in distributed data-intensive systems Yuan et al. OSDI 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.acolyer.org/2016/10/06/simple-testing-can-prevent-most-critical-failures/&#34;&gt;The Morning Paper on the above publication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/8Q1qbgAcOv8&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;shagufta-gurmukhdas-real-time-object-detection-coz-yolo&#34;&gt;Shagufta Gurmukhdas — Real-time object detection coz YOLO!&lt;/h2&gt;

&lt;p&gt;Machine learning and deep learning have been really hot topics for the past
couple of years. Take projects such as &lt;a href=&#34;https://en.wikipedia.org/wiki/AlphaGo&#34;&gt;AlphaGo&lt;/a&gt;
for instance: The program&amp;rsquo;s victory over human the world&amp;rsquo;s best Go players and
its the next versions (AlphaGo Zero and AlphaZero) achievements are pretty darn
impressive.&lt;/p&gt;

&lt;p&gt;The future is bright for computerized human assistance and engineers willing to
get their feet wet can now find industry-grate libraries and tons of learning
resources online.&lt;/p&gt;

&lt;p&gt;I know near nothing about deep learning and neural networks myself but I&amp;rsquo;m
currently working at a clients which is the world&amp;rsquo;s largest supplier of Earth
observation systems so even if I&amp;rsquo;m not working on image analysis per say I&amp;rsquo;m one
way on another into this atmosphere (no pun intended).&lt;/p&gt;

&lt;p&gt;Anyways, I was really interested to go to this talk by
&lt;a href=&#34;https://twitter.com/shaguftamethwan&#34;&gt;Shagufta Gurmukhdas&lt;/a&gt; to discover
&lt;a href=&#34;https://pjreddie.com/darknet/yolo/&#34;&gt;YOLO (You Only Look Once)&lt;/a&gt;, a &amp;ldquo;real-time
object detection system&amp;rdquo; by &lt;a href=&#34;https://twitter.com/pjreddie&#34;&gt;Joe Redmon&lt;/a&gt;.&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/yolo.png&#34; alt=&#34;YOLO&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;Shagufta gave a really nice talk composed of a lightweight introduction to
&lt;a href=&#34;https://en.wikipedia.org/wiki/Artificial_neural_network&#34;&gt;neural nets&lt;/a&gt;, a
presentation of YOLO and then a very entertaining demo of an object detection
application first from an image source, then from a video recording and finally
from a live webcam stream using Python, &lt;a href=&#34;https://www.tensorflow.org/&#34;&gt;TensorFlow&lt;/a&gt;
and &lt;a href=&#34;https://opencv.org/&#34;&gt;OpenCV&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kudos for the live-demo, this was great!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve played with motion detection using OpenCV last summer, for my
client, where I was building a stream processing prototype using
&lt;a href=&#34;http://storm.apache.org/&#34;&gt;Apache Storm&lt;/a&gt; and needed a dummy algorithm to put
in there for the algorithmic part.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t put a lot of thoughts into it but adding object detection would be an
fun use-case and this presentation definitely made it more interesting.&lt;br /&gt;
I&amp;rsquo;ve used the latest version at the time which was 3.3 and support for YOLO
has now been added in version
&lt;a href=&#34;https://github.com/opencv/opencv/wiki/ChangeLog#version331&#34;&gt;3.3.1&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The partial Darknet parser, enough to parse YOLO models, as well as the
layers to support a few variations of YOLO object detection networks have been
integrated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ll definitely try to write something about this in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ShaguftaMethwani/yolo-jotb&#34;&gt;The code is available on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/ej9wFtHZu4c&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;mario-fusco-lazy-java&#34;&gt;Mario Fusco — Lazy Java&lt;/h2&gt;

&lt;p&gt;Lazy lazy lazy. Kids are lazy when it comes to chores and homework, or not!&lt;br /&gt;
According to &lt;a href=&#34;https://twitter.com/mariofusco&#34;&gt;Mario Fusco&lt;/a&gt; they just do
optimizations to minimize the effort they must provide, and this is what we
should make our programs do.&lt;/p&gt;

&lt;p&gt;Java is not a lazy language by default, it evaluates right away. It has
short-circuit evaluation to simulate this in the case of &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and other
operators but it is fundamentally eagerly evaluated.&lt;/p&gt;

&lt;p&gt;Then comes the &lt;code&gt;Stream&lt;/code&gt; API in Java 8 which provides a specification for data
manipulation instructions but which is not fully lazy.&lt;/p&gt;

&lt;p&gt;Mario presents several examples of problems (primes, big palindromes) that can
be made efficient with laziness and how to implement them using Java with
recursion, which leads to stack overflows and from tail call optimization (or
lack thereof in Java) to trampolines.&lt;/p&gt;

&lt;p&gt;Fantastic speaker, of course.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://youtu.be/iIEd12Q_umo&#34;&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hadi-hariri-asynchronous-programming-with-kotlin&#34;&gt;Hadi Hariri — Asynchronous Programming with Kotlin&lt;/h2&gt;

&lt;p&gt;It won&amp;rsquo;t come as a surprise to people who know me to read that I have strongly
mixed feelings about Kotlin itself, but I wanted to hear about Kotlin coroutines
from the source (JetBrains).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/hhariri&#34;&gt;Hadi Hariri&lt;/a&gt; is a local from Malaga and as he
joked himself: he might have been the most affordable speaker for the
conference organizers this year.&lt;/p&gt;

&lt;p&gt;His talk about Kotlin coroutines was really well put with a lot of code examples
for various scenarios and running code samples.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve never heard of the concept of green threads, fibers or
coroutines (minus the implementation details) in other languages, or
if you are interested in to use this feature in Kotlin, don&amp;rsquo;t miss this talk.&lt;br /&gt;
Hadi Hariri is a great speaker.&lt;/p&gt;

&lt;p&gt;The video is not yet available on Youtube, so I&amp;rsquo;ve found
&lt;a href=&#34;https://youtu.be/krfGMLuhB8M&#34;&gt;this recent recording&lt;/a&gt; from a few months ago.&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Much like the previous year, J On The Beach 2018 has been a really interesting
conference and joyful experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks a lot to the organizers, speakers and other attendees for the great
event.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Who knows, I might even come back next year for the third time in a row ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Virtual handshake to &lt;a href=&#34;https://twitter.com/rosacastilloPhD&#34;&gt;Rosa Castillo&lt;/a&gt; and
&lt;a href=&#34;https://twitter.com/vlad_mihalcea&#34;&gt;Vlad Mihalcea&lt;/a&gt; for the Hallway Track and
fun time during the breaks.&lt;/li&gt;
&lt;li&gt;Also to &lt;a href=&#34;https://twitter.com/rocketarium&#34;&gt;Andrei Dan&lt;/a&gt; and
&lt;a href=&#34;https://jonthebeach.com/speakers/40/Max+Novelli&#34;&gt;Max Novelli&lt;/a&gt;, it was great
to see you again after JOTB17&lt;/li&gt;
&lt;li&gt;Final thank you note to &lt;a href=&#34;http://www.monkeypatch.io/&#34;&gt;MonkeyPatch&lt;/a&gt; (my
employer) for allowing the budget to attend a conference in Malaga
&lt;strong&gt;once again&lt;/strong&gt;!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Water Pouring Problem in Clojure</title>
      <link>http://i-rant.arnaudbos.com/water-pouring-in-clojure/</link>
      <pubDate>Tue, 28 Nov 2017 06:23:11 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/water-pouring-in-clojure/</guid>
      <description>
&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/die-hard-3-water-puzzle.jpg&#34; alt=&#34;Caption of the water puzzle scene in Die Hard with a Vengeance&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Die Hard with a Vengeance — Water puzzle scene&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;p&gt;This post is the first or a series where I explore Clojure features
and start a discussion with my colleague &lt;a href=&#34;https://twitter.com/ilaborie&#34;&gt;Igor&lt;/a&gt; about &lt;a href=&#34;https://clojure.org/&#34;&gt;Clojure&lt;/a&gt;
and &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This summer, &lt;a href=&#34;https://twitter.com/ilaborie&#34;&gt;Igor&lt;/a&gt; offered to make a live Kotlin demo of a nice problem
he&amp;rsquo;s been &lt;a href=&#34;https://github.com/ilaborie/kotlin-pouring&#34;&gt;working on&lt;/a&gt; that can serve as a fine exercise to
discover and experiment a programming language: the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Water_pouring_puzzle&#34;&gt;Water pouring puzzle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this article I talk about the &lt;strong&gt;&lt;em&gt;programming style&lt;/em&gt;&lt;/strong&gt; I&amp;rsquo;ve
used to find my solution: a data oriented, bottom-up approach, at the
REPL.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Igor&amp;rsquo;s &lt;a href=&#34;https://github.com/ilaborie/kotlin-pouring#guideline-try-to-implements-with-immutable-data-structure&#34;&gt;guideline&lt;/a&gt; offers a good starting point
on how OO and/or static typing (including myself when I switch to Java for
instance) would solve this problem: model the world.&lt;br /&gt;
Notice how, by following this recipe, you don&amp;rsquo;t get to handle or transform
any data until point 15 of about 30.&lt;/p&gt;

&lt;p&gt;Although I understand how this is more usual, familiar and maybe the most
straightforward way to do things for a majority of developers, to me this is a
major drawback. It means that half of the time you are spending laying out
things, hoping the Lego blocks will fall into place, thinking about types and
safety when all you should be thinking about should be (IMO) how do I solve
this particular problem.&lt;/p&gt;

&lt;p&gt;After a few years of &lt;a href=&#34;http://vvvvalvalval.github.io/posts/what-makes-a-good-repl.html&#34;&gt;REPL&lt;/a&gt; &lt;a href=&#34;https://vimeo.com/223309989&#34;&gt;driven development&lt;/a&gt; I
know that I have a good tool to functionally, expressively and
incrementally solve a problem.&lt;/p&gt;

&lt;p&gt;This post is basically a transcript of my thought process as I was writing
a solver to the Water pouring puzzle at the REPL.&lt;br /&gt;
It was interesting to take the time to reflect and watch myself work as
I was proceeding, it took more time but it was definitely an interesting
experiment.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I setup the boilerplate first. (leiningen, dependencies, etc) and a
namespace to work in:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(ns clojure-pouring.repl)

&lt;/div&gt;


&lt;p&gt;At the REPL, the fundamental principle is: &lt;strong&gt;&lt;em&gt;exploratory programming&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;
I don&amp;rsquo;t know how to find the solution to this problem (yet!),
all I have at this point is a namespace.&lt;/p&gt;

&lt;p&gt;I must begin somewhere, so let&amp;rsquo;s start with some data: a glass has a total
capacity and a current state (&lt;code&gt;0&lt;/code&gt; by default), I need a collection of those.&lt;/p&gt;

&lt;p&gt;I start at the REPL by declaring &lt;code&gt;inital-state&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(def initial-state
  [{:capacity 5
    :current 0}
   {:capacity 3
    :current 0}
   ])

initial-state

&lt;/div&gt;


&lt;p&gt;Then &lt;code&gt;final-state&lt;/code&gt; to illustrate the target:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(def final-state
  [{:capacity 5
    :current 4}
   {:capacity 3
    :current 0}
   ])

final-state

&lt;/div&gt;


&lt;p&gt;Pretty easy: each glass is a &lt;code&gt;map&lt;/code&gt; and I put two of those in a &lt;code&gt;vector&lt;/code&gt;.&lt;br /&gt;
Just thinking about the amount of code I would have to write in Java or Kotlin
just to get a short sample of data like this gives me goosebumps.&lt;/p&gt;

&lt;p&gt;Kotlin &lt;a href=&#34;https://discuss.kotlinlang.org/t/plans-for-collection-literals/2049&#34;&gt;might&lt;/a&gt;,
at &lt;a href=&#34;https://blog.jetbrains.com/kotlin/2017/06/kotlin-future-features-survey-results/&#34;&gt;some point&lt;/a&gt;,
have collection literals similar to those, or not.&lt;br /&gt;
There seems to be a debate inside the community whether this is a desired
feature or not, despite the clear winner of the community survey.&lt;/p&gt;

&lt;p&gt;Communicating intent is an important part of a language and Kotlin&amp;rsquo;s debate
around collection literals seems to fall in the category of convenient syntax
vs intent. Why?&lt;br /&gt;
Because Kotlin&amp;rsquo;s designers have made the choice to support both mutable and
immutable collections as first class citizens. So how do you define what &lt;code&gt;{}&lt;/code&gt;
is or &lt;code&gt;[]&lt;/code&gt; is? Is it mutable or immutable?&lt;br /&gt;
The debate also seem to include considerations such as ordered/unordered and the
choice of syntax between lists and sets. Good luck figuring that out.&lt;/p&gt;

&lt;p&gt;Clojure is based on first-class persistent data-structures so mutation is not
and option, and its collection literals are easily identified:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;()&lt;/code&gt; for lists (PersistentList)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt; for vectors (PersistentVector)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{}&lt;/code&gt; for a maps (PersistentHashMap)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{}&lt;/code&gt; for sets (PersistentHashSet)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want ordered/unordered variants? array-maps? queues? Sure, just use the
appropriate constructor, the collections you will use the most are available
as literals and it&amp;rsquo;s a burden not put on you, the developer.&lt;br /&gt;
View it as &lt;em&gt;&amp;ldquo;only convenient&amp;rdquo;&lt;/em&gt; if you want to ditch the argument and discussion
altogether, but with mutation out of the way a whole class of problems are gone
once again, and the benefit of being able to just copy and paste
around printed representations of data-structures (in REPL or in logs) and
use them verbatim as code is priceless.&lt;/p&gt;

&lt;p&gt;Alright, so the actions allowed to be performed on a glass are either to &lt;em&gt;pour&lt;/em&gt;
some quantity out of it, or to &lt;em&gt;fill&lt;/em&gt; it with some quantity.&lt;/p&gt;

&lt;p&gt;So I implement a &lt;code&gt;pour&lt;/code&gt; function first:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn pour
  ([glass]
   (assoc glass :current 0))
  ([glass quantity]
   (let [{:keys [current]} glass]
     (assoc glass :current (- current
                              (min current quantity))))))

&lt;/div&gt;


&lt;p&gt;This is a multi-arity function:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first implementation takes a glass as its only parameter and returns a
&lt;a name=&#34;anew&#34;&gt;&lt;/a&gt;new&lt;sup&gt;&lt;a href=&#34;#new&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; empty glass of the same capacity.&lt;/li&gt;
&lt;li&gt;The second implementation takes a glass as its first parameter and a quantity
as its second parameter and returns a new glass &lt;em&gt;poured out of&lt;/em&gt; the given
quantity or &lt;em&gt;poured out empty&lt;/em&gt; if it contains less than the given quantity.&lt;/li&gt;
&lt;li&gt;In the second arity, I &lt;em&gt;destructure&lt;/em&gt; the first parameter (the glass) which
is a map, in order to get its &lt;code&gt;current&lt;/code&gt; key only, as I don&amp;rsquo;t care about its
&lt;code&gt;capacity&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;assoc&lt;/code&gt; is (&lt;a href=&#34;https://clojuredocs.org/clojure.core/assoc&#34;&gt;for short&lt;/a&gt;)
a standard library function that returns a new map containing the new
&lt;code&gt;key/value&lt;/code&gt; mapping.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don&amp;rsquo;t worry about the prefix notation, it&amp;rsquo;s not difficult, it&amp;rsquo;s just different,
you&amp;rsquo;re not
&lt;em&gt;&lt;a href=&#34;https://www.infoq.com/presentations/Simple-Made-Easy&#34;&gt;familiar&lt;/a&gt;&lt;/em&gt; with it, and
you&amp;rsquo;ll get used to it.&lt;/p&gt;

&lt;p&gt;Test &lt;code&gt;pour&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println (pour {:capacity 5 :current 4}))
(println (pour {:capacity 8 :current 4} 2))
(println (pour {:capacity 8 :current 4} 5))

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Pouring out empty a glass of capacity &lt;code&gt;5&lt;/code&gt; returns an empty glass of capacity
&lt;code&gt;5&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Pouring out &lt;code&gt;2&lt;/code&gt; from a glass of capacity &lt;code&gt;8&lt;/code&gt; containing &lt;code&gt;4&lt;/code&gt; returns
a glass of capacity &lt;code&gt;8&lt;/code&gt; containing &lt;code&gt;2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;And pouring out &lt;code&gt;5&lt;/code&gt; from a glass of capacity &lt;code&gt;8&lt;/code&gt; containing &lt;code&gt;4&lt;/code&gt; just returns
and empty glass, not &lt;code&gt;-1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ignore the last &lt;code&gt;nil&lt;/code&gt; in the results, it&amp;rsquo;s just the live code evaluation
plugin that prints it out as the result of the last &lt;code&gt;println&lt;/code&gt; call.&lt;br /&gt;
Go ahead and play with it a little, even change the implementation above
if you will.&lt;/p&gt;

&lt;p&gt;Now the &lt;code&gt;fill&lt;/code&gt; function:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn fill
  ([glass]
   (assoc glass :current (:capacity glass)))
  ([glass quantity]
   (let [{:keys [capacity current]} glass]
     (assoc glass :current (+ current
                              (min (- capacity current) quantity))))))

&lt;/div&gt;


&lt;p&gt;This is also a multi-arity function:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first implementation fills a glass up to its maximum capacity.&lt;/li&gt;
&lt;li&gt;The second implementation fills a glass &lt;em&gt;up to&lt;/em&gt; its maximum capacity given
a quantity to fill it with.&lt;/li&gt;
&lt;li&gt;Both return a new glass of course (not a copy!!!), we&amp;rsquo;re in &lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;
land here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Test &lt;code&gt;fill&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println (fill {:capacity 5 :current 0}))
(println (fill {:capacity 8 :current 4} 1))
(println (fill {:capacity 8 :current 7} 2))

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Filling an empty glass returns a glass full.&lt;/li&gt;
&lt;li&gt;Filling &lt;code&gt;1&lt;/code&gt; into a glass of capacity &lt;code&gt;8&lt;/code&gt; that already contains &lt;code&gt;4&lt;/code&gt; returns a
glass of capacity &lt;code&gt;8&lt;/code&gt; containing &lt;code&gt;5&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;And filling &lt;code&gt;2&lt;/code&gt; into a glass of capacity &lt;code&gt;8&lt;/code&gt; that already contains &lt;code&gt;7&lt;/code&gt; returns
a glass of capacity &lt;code&gt;8&lt;/code&gt; that is full, not &lt;code&gt;9&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/jug2.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;728x485&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/jug2.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;390px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/jug3.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;728x485&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/jug3.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;390px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;



&lt;/div&gt;


&lt;p&gt;Let&amp;rsquo;s take a break here.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;One of the major benefits of a good REPL (and Clojure&amp;rsquo;s REPL is a good one),
is the ability to explore: write one function at a time, execute it
&lt;strong&gt;right away&lt;/strong&gt; with a small amount of data, creating a really short
&lt;strong&gt;feedback loop&lt;/strong&gt; in order to &lt;strong&gt;explore&lt;/strong&gt; multiple solutions.&lt;/p&gt;

&lt;p&gt;In this blog post I use &lt;a href=&#34;https://github.com/viebel/klipse&#34;&gt;Klipse&lt;/a&gt; in order to present my iterative
process and &lt;strong&gt;let you play with the code&lt;/strong&gt;.&lt;br /&gt;
This is nice for you to get a feel and try different inputs to my functions,
or write different implementations if you want to.&lt;/p&gt;

&lt;p&gt;A good REPL is superior to TDD because it lets you write (or better: keep)
tests that matter, get the result out of a function call and use it again as
data that can populate your &lt;em&gt;real&lt;/em&gt; tests.&lt;/p&gt;

&lt;p&gt;But if you&amp;rsquo;ve tried other REPLs (ruby, python, node, etc.), you may be
thinking that a REPL is not practical, because it forces you to copy/paste
code all the time, go back and forth in you REPL&amp;rsquo;s history in order to
retrieve past results and implementations just to change a few characters.&lt;/p&gt;

&lt;p&gt;And this is where tooling is important.&lt;/p&gt;

&lt;p&gt;Lots of Clojure developers use emacs (or cursive, an Intellij plugin) and
benefit from its integration with the REPL.&lt;br /&gt;
I, personnally, have been enjoying &lt;a href=&#34;http://lighttable.com/&#34;&gt;Light Table&lt;/a&gt; since 2013, and
this is a screenshot of my laptop while I&amp;rsquo;m working at the REPL:&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/screenshot.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1440x900&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/water-pouring-in-clojure/screenshot.png&#34; itemprop=&#34;thumbnail&#34;
        
        title=&#34;Light Table instaREPL&#34;
        width=&#34;100%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Light Table instaREPL&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Do you see the &amp;ldquo;blue&amp;rdquo; data? This is the result of evaluating a Clojure
expression in the editor itself.&lt;br /&gt;
This alone has made it difficult for me to switch to another editor ever since.&lt;/p&gt;

&lt;p&gt;At the REPL, I type in &lt;strong&gt;data&lt;/strong&gt;, I pass it to &lt;strong&gt;functions&lt;/strong&gt; and I get the
&lt;strong&gt;result&lt;/strong&gt; (which I use later as new input/expected output for other tests)
in front of my eyes.&lt;br /&gt;
I define &lt;strong&gt;new functions&lt;/strong&gt; and make extensive use of &lt;em&gt;&amp;ldquo;variable shadowing&amp;rdquo;&lt;/em&gt; to
&lt;strong&gt;modify the implementation of existing functions&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No classes, no types, no FactoryFactoryAbstractDelegateProxyPattern:
just data and functions&amp;hellip;&lt;br /&gt;
I can hear you, static typing addict: &lt;strong&gt;BUT IT IS NOT SAFE!&lt;/strong&gt;&lt;br /&gt;
Yes, I know, I just don&amp;rsquo;t care at this point! I told you, I&amp;rsquo;m &lt;strong&gt;exploring&lt;/strong&gt;.
I want to go fast, iterate quickly, not model the whole universe and bang my
head against the type checker.&lt;/p&gt;

&lt;p&gt;I can just rely on my tests for now and use simple assertions or
&lt;a href=&#34;https://clojure.org/about/spec&#34;&gt;specifications&lt;/a&gt; later (or now, but right now
I&amp;rsquo;m not, obviously) to refine.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve never had a shortest feedback loop in any other language I&amp;rsquo;ve used, this is
pure gold.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let&amp;rsquo;s continue our problem solving.&lt;/p&gt;

&lt;p&gt;I have a pouring and a filling function.&lt;br /&gt;
Now I&amp;rsquo;d need a function that takes a collection of glasses (state),
apply an action (commonly called a &amp;lsquo;move&amp;rsquo; in the current domain language)
and return a new, updated collection of glasses (new state).&lt;/p&gt;

&lt;p&gt;What characterizes a move? It&amp;rsquo;s either an &lt;code&gt;empty&lt;/code&gt;, &lt;code&gt;pour&lt;/code&gt; or &lt;code&gt;fill&lt;/code&gt; action
associated with glass indices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;empty &lt;code&gt;from&lt;/code&gt; the nth glass&lt;/li&gt;
&lt;li&gt;fill &lt;code&gt;to&lt;/code&gt; the nth glass&lt;/li&gt;
&lt;li&gt;pour &lt;code&gt;from&lt;/code&gt; the mth glass &lt;code&gt;to&lt;/code&gt; the nth glass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Expressivity matters, so maybe a move would be best represented by a map.&lt;br /&gt;
A map with a type that characterizes the move (&lt;code&gt;empty&lt;/code&gt;, &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;pour&lt;/code&gt;) and
subjects that indicate the source / target / both of the move (&lt;code&gt;from&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println &#34;Empty glass 0:&#34; {:type :empty :from 0})
(println &#34;Fill glass 1:&#34; {:type :fill :to 1})
(println &#34;Pour glass 1 into glass 0:&#34; {:type :pour :from 1 :to 0})

&lt;/div&gt;


&lt;p&gt;I&amp;rsquo;m beginning to think that a bit of &lt;em&gt;Ad-hoc polymorphism&lt;/em&gt; would
be great in order to dispatch on the type of move: let&amp;rsquo;s use
&lt;em&gt;multimethods&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defmulti -&gt;move
  &#34;Apply a move to the given state and return the new state.&#34;
  (fn [state move] (:type move)))

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;defmulti&lt;/code&gt; macro defines a new multimethod with the associated
&lt;code&gt;dispatch function&lt;/code&gt;.&lt;br /&gt;
Which means that the &lt;code&gt;-&amp;gt;move&lt;/code&gt; function will take two parameters, and the
dispatch function will &lt;em&gt;choose&lt;/em&gt; the appropriate implementation.&lt;/p&gt;

&lt;p&gt;In this case I dispatch based on the value associated to the &lt;code&gt;:type&lt;/code&gt; key in the
&lt;code&gt;move&lt;/code&gt; parameter.&lt;br /&gt;
A &lt;code&gt;:empty&lt;/code&gt; move will dispatch to the &lt;code&gt;-&amp;gt;move :empty&lt;/code&gt; multimethod.&lt;br /&gt;
A &lt;code&gt;:fill&lt;/code&gt; move will dispatch to the &lt;code&gt;-&amp;gt;move :fill&lt;/code&gt; multimethod.&lt;br /&gt;
A &lt;code&gt;:pour&lt;/code&gt; move will dispatch to the &lt;code&gt;-&amp;gt;move :pour&lt;/code&gt; multimethod.&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
; Empty the glass at index from
(defmethod -&gt;move :empty
  [state {:keys [from]}]
  (update-in state [from] pour))

; Fill the glass at index to
(defmethod -&gt;move :fill
  [state {:keys [to]}]
  (update-in state [to] fill))

; Pour the glass at index from into the glass at index to
(defmethod -&gt;move :pour
  [state {:keys [from to]}]
  (let [quantity (min (get-in state [from :current])
                      (- (get-in state [to :capacity])
                         (get-in state [to :current])))]
    (-&gt; state
        (update-in [from] pour quantity)
        (update-in [to] fill quantity))))

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;update-in&lt;/code&gt; is a &lt;a href=&#34;https://clojuredocs.org/clojure.core/update-in&#34;&gt;standard library&lt;/a&gt;
function that takes a data structure as a first parameter and &amp;ldquo;updates&amp;rdquo;
(immutable, remember?) the value nested at the path given by the second
parameter by applying to it the function supplied as the third parameter&amp;hellip;&lt;br /&gt;
Don&amp;rsquo;t pretend you didn&amp;rsquo;t understand, just reread carefully.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take our &lt;code&gt;-&amp;gt;move :empty&lt;/code&gt; multimethod as an example.&lt;br /&gt;
Since our move is an &lt;code&gt;:empty&lt;/code&gt;, we destructure this parameter to get the
value at the &lt;code&gt;:from&lt;/code&gt; key: the index of the glass in &lt;code&gt;state&lt;/code&gt; that we want to
empty.&lt;br /&gt;
Once the glass has been fetched, &lt;code&gt;update-in&lt;/code&gt; will evaluate the &lt;code&gt;pour&lt;/code&gt; function
with the glass as its sole parameter.&lt;br /&gt;
Since I&amp;rsquo;ve implemented the 1-arity of the &lt;code&gt;pour&lt;/code&gt; function so that it just
returns a new empty glass of same capacity, this result will &lt;em&gt;replace&lt;/em&gt;
the glass in the &lt;code&gt;state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s test &lt;code&gt;-&amp;gt;move&lt;/code&gt; to &amp;ldquo;manually&amp;rdquo; go from &lt;code&gt;initial-state&lt;/code&gt; to &lt;code&gt;final-state&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(-&gt; initial-state
    (-&gt;move {:type :fill :to 1})
    (-&gt;move {:type :pour :from 1 :to 0})
    (-&gt;move {:type :fill :to 1})
    (-&gt;move {:type :pour :from 1 :to 0})
    (-&gt;move {:type :empty :from 0})
    (-&gt;move {:type :pour :from 1 :to 0})
    (-&gt;move {:type :fill :to 1})
    (-&gt;move {:type :pour :from 1 :to 0})
    )

&lt;/div&gt;


&lt;p&gt;It works!&lt;/p&gt;

&lt;p&gt;I must now implement a function that, when given a collection of glasses,
returns a collection of possible moves that can be applied to this state in
order to produce a &lt;em&gt;meaningful&lt;/em&gt; new collection of glasses.&lt;/p&gt;

&lt;p&gt;Meaningful as in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;not emptying an empty glass,&lt;/li&gt;
&lt;li&gt;not filling a glass that is full, and&lt;/li&gt;
&lt;li&gt;not pouring into &amp;lsquo;itself&amp;rsquo;, which gets us nowhere&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn glasses-&gt;index
  &#34;Filter the glasses by the filter-fn function and
  return the index the filtered item had in the
  glasses collection.&#34;
  [glasses filter-fn]
  (-&gt;&gt; glasses
       (map-indexed #(vector %1 %2))
       (filter (fn [[idx value]] (filter-fn value)))
       (map first)))

&lt;/div&gt;


&lt;p&gt;I&amp;rsquo;m not going to explain everything, just look at the input and output in this
test of &lt;code&gt;glasses-&amp;gt;index&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println &#34;Indices of non-empty glasses:&#34;
         (glasses-&gt;index final-state (comp pos? :current)))
(println &#34;Indices of glasses of capacity 3:&#34;
         (glasses-&gt;index final-state (comp #(= 3 %) :capacity)))

&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;&amp;ldquo;indexing&amp;rdquo;&lt;/em&gt; works, now the function for listing moves:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn available-moves
  &#34;Return the list of valid moves from current state of glasses.&#34;
  [glasses]
  (let [non-empty (glasses-&gt;index glasses (comp pos? :current))
        non-full (glasses-&gt;index glasses #(&lt; (:current %) (:capacity %)))]
    (concat
      (map #(hash-map :type :empty :from %) non-empty)
      (map #(hash-map :type :fill  :to   %) non-full)
      ; I really like this one
      (for [from non-empty to non-full :when (not= from to)]
        {:type :pour :from from :to to}))))

&lt;/div&gt;


&lt;p&gt;Concatenate the list of moves able to empty the non-empty glasses, fill the
non-full glasses and pour the non-empty glasses into the distinct non-full
glasses.&lt;/p&gt;

&lt;p&gt;Test &lt;code&gt;available-moves&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println (available-moves initial-state))
(println (available-moves final-state))

&lt;/div&gt;


&lt;p&gt;I can get the list of moves that are practicable, now let&amp;rsquo;s
explore the next glasses available from the current glasses.&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn explore
  [glasses moves]
  (map (partial -&gt;move glasses) moves))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;explore&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(explore initial-state (available-moves initial-state))

&lt;/div&gt;


&lt;p&gt;Given a list of glasses (a state), returns the list of glasses I could get to
(next states) by applying the moves that are available from my current state.&lt;/p&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#explore&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[Exploration]&lt;/a&gt;
&lt;div id=&#34;explore&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;p&gt;I won&amp;rsquo;t need this function because in order to find the list of moves
leading from a state to another I must keep the previous moves in memory when
exploring further&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;explore&lt;/code&gt; is not enough, but at least I know how to explore the spectrum
of all the possible next states for a given state and list of moves.&lt;/p&gt;

&lt;p&gt;See? I&amp;rsquo;ve &lt;em&gt;explored&lt;/em&gt;, I&amp;rsquo;ve made an experiment with a function mapped over
some data. And it didn&amp;rsquo;t cost much because my feedback loop is really short.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve realized this path is not going to help, so I can just discard it and
refine my understanding of the steps I need to take to reach my goal.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Given a &lt;code&gt;node&lt;/code&gt; containing glasses and the sequence of moves leading to
them, return a list of successor nodes.&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn expand
  [{:keys [glasses moves] :as node}]
  (let [next-moves (available-moves glasses)]
    (map #(hash-map :glasses (-&gt;move glasses %)
                    :moves (conj moves %))
         next-moves)))

&lt;/div&gt;


&lt;p&gt;I evaluate the moves available from the current node&amp;rsquo;s glasses and for each
one of them I return a new node consisting of the next state of glasses and
the augmented list of move leading to it.&lt;/p&gt;

&lt;p&gt;Test &lt;code&gt;expand&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println
  (expand
    {:glasses [{:capacity 5 :current 5} {:capacity 3 :current 0}]
     :moves [{:type :fill :to 0}]}))

&lt;/div&gt;


&lt;p&gt;Nice, given glasses and the &lt;code&gt;history&lt;/code&gt; of moves that led from an initial
state to these glasses, I can get the list of next states that are
&lt;em&gt;possible&lt;/em&gt;, with their respective history of moves.&lt;/p&gt;

&lt;p&gt;But at some point I might reach a state that I have already visited in the
past&amp;hellip; So it would be interesting to keep an index of the states that I
have already visited in order to query it and avoid useless computation.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s &lt;em&gt;&amp;ldquo;backtract&amp;rdquo;&lt;/em&gt; the already visited nodes:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn backtrack
  &#34;Returns true if a node has been visited.&#34;
  [visited {:keys [glasses]}]
  (not (contains? visited glasses)))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;backtrack&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(backtrack #{[{:capacity 5 :current 0} {:capacity 3 :current 0}]}
           {:glasses [{:capacity 5 :current 5} {:capacity 3 :current 0}]
            :moves [{:type :fill :to 0}]})

&lt;/div&gt;


&lt;p&gt;The first parameter of &lt;code&gt;backtrack&lt;/code&gt; is a set, so &lt;code&gt;contains?&lt;/code&gt; is &lt;code&gt;O(1)&lt;/code&gt;, not
&lt;code&gt;O(n)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m almost there, right?&lt;br /&gt;
But I must stop searching at some point, so let&amp;rsquo;s identify a solution among
a set of candidates:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn has-solution?
  [target successors]
  (some #(when (= target (:glasses %)) (:moves %))
        successors))

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;some&lt;/code&gt; is a &lt;a href=&#34;https://clojuredocs.org/clojure.core/some&#34;&gt;standard library&lt;/a&gt;
function that returns the first logical true value of the predicate function
result.&lt;br /&gt;
My predicate function returns the list of moves leading to the current node
when the glasses of the node match the target glasses state, so if the
&lt;code&gt;successors&lt;/code&gt; collection contains the solution, the list of moves to get
there is returned.&lt;/p&gt;

&lt;p&gt;Test &lt;code&gt;has-solution?&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(println &#34;Does not have solution:&#34;
  (has-solution?
    [{:capacity 5 :current 4} {:capacity 3 :current 0}]
    []))

(println &#34;The solution (list of moves) is:&#34;
  (has-solution?
    [{:capacity 5 :current 4} {:capacity 3 :current 0}]
    [{:glasses [{:capacity 5 :current 0}] :moves []}
     {:glasses [{:capacity 5 :current 4} {:capacity 3 :current 0}] :moves [:foo :bar]}]))

&lt;/div&gt;


&lt;p&gt;And now the final part: I must compose the functions I have written so far
in order to implement a solver.&lt;/p&gt;

&lt;p&gt;This is &lt;em&gt;bottom-up&lt;/em&gt;. I know I have all the parts of my solver in place and
I have tested most of them along the way.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s loop over glasses nodes, keeping track of the already visited ones,
searching for a solution leading to the target state:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(require &#39;[clojure.set :as set])

(defn solver
  &#34;Given a target state, returns a function that will solve the water pouring
  problem for an initial state&#34;
  [target]
  (let [has-solution-fn? (partial has-solution? target)]
    (fn [glasses]
      ; Start with an empty set of visited states and an empty list of moves
      (loop [visited #{} nodes [{:glasses glasses :moves []}]]
        (if-let [solution (has-solution-fn? nodes)]
          solution
          (let [successors (mapcat #(expand %) nodes)
                valid-successors (filter (partial backtrack visited) successors)
                newly-visited (into #{} (map :glasses valid-successors))]
            (recur (clojure.set/union visited newly-visited)
                   valid-successors)))))))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;solver&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(def simple-solver
  (solver [{:capacity 5 :current 4}
           {:capacity 3 :current 0}]))

(simple-solver [{:capacity 5 :current 0}
                {:capacity 3 :current 0}])

&lt;/div&gt;


&lt;p&gt;Test it again with a (seemingly) more complicated use case:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(def less-simple-solver
  (solver [{:capacity 8 :current 4}
           {:capacity 5 :current 0}
           {:capacity 3 :current 0}]))

(less-simple-solver [{:capacity 8 :current 0}
                     {:capacity 5 :current 0}
                     {:capacity 3 :current 0}])

&lt;/div&gt;


&lt;hr /&gt;

&lt;p&gt;Functionally I could stop here because the problem is solved. But there are
some points that bother me, some &lt;code&gt;vars&lt;/code&gt; names that don&amp;rsquo;t reflect what
piece of information they carry or some functions that could be broken into
smaller ones.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s refactor a little:&lt;/p&gt;

&lt;p&gt;Refactor &lt;code&gt;-&amp;gt;move&lt;/code&gt; to better reflect domain:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defmulti -&gt;move
  &#34;Apply a move to the given state and return the new state.&#34;
  (fn [glasses move] (:type move)))

(defmethod -&gt;move :empty
  [glasses {:keys [from]}]
  (update-in glasses [from] pour))

(defmethod -&gt;move :fill
  [glasses {:keys [to]}]
  (update-in glasses [to] fill))

(defmethod -&gt;move :pour
  [glasses {:keys [from to]}]
  (let [quantity (min (get-in glasses [from :current])
                      (- (get-in glasses [to :capacity])
                         (get-in glasses [to :current])))]
    (-&gt; glasses
        (update-in [from] pour quantity)
        (update-in [to] fill quantity))))

&lt;/div&gt;


&lt;p&gt;Refactor &lt;code&gt;expand&lt;/code&gt; by extracting the node builder:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn make-node
  [glasses moves]
  {:glasses glasses
   :moves moves})

(defn expand-node
  [{:keys [glasses moves]}]
  (let [next-moves (available-moves glasses)]
    (-&gt;&gt; next-moves
         (map #(make-node (-&gt;move glasses %) (conj moves %))))))

&lt;/div&gt;


&lt;p&gt;Refactor &lt;code&gt;solver&lt;/code&gt; by decomposing functions:&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s create a &lt;code&gt;make-glass&lt;/code&gt; utility function:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn make-glass
  ([capacity]
   (make-glass capacity 0))
  ([capacity current]
   {:capacity capacity :current current}))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;make-glass&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(make-glass 5)

&lt;/div&gt;


&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(make-glass 8 3)

&lt;/div&gt;


&lt;p&gt;Now a &lt;code&gt;initialize&lt;/code&gt; function to create a vector of glasses from capacities or
capacities + quantities:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn initialize
  ([capacities]
   (vec (map make-glass capacities)))
  ([capacities quantities]
   (vec (map make-glass capacities quantities))))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;initialize&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(initialize [8 5 3])

&lt;/div&gt;


&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(initialize [8 5 3] [4 0 0])

&lt;/div&gt;


&lt;p&gt;Let&amp;rsquo;s extract the part of the solver that find the successors of a collection
of nodes into &lt;code&gt;find-successors&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn find-successors
  [nodes]
  (mapcat #(expand-node %) nodes))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;find-successors&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(find-successors [{:glasses [{:capacity 5 :current 0} {:capacity 3 :current 0}] :moves []}])

&lt;/div&gt;


&lt;p&gt;Let&amp;rsquo;s extract the part of the solver that filters out the successors that have
already been visited into &lt;code&gt;filter-successors&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn filter-successors
  [successors visited]
  (filter (partial backtrack visited) successors))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;filter-successors&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(filter-successors
  [{:moves [{:type :fill :to 0}] :glasses [{:capacity 5, :current 5} {:capacity 3, :current 0}]}
   {:moves [{:type :fill, :to 1}], :glasses [{:capacity 5, :current 0} {:capacity 3, :current 3}]}]
  #{[{:capacity 5, :current 5} {:capacity 3, :current 0}]})

&lt;/div&gt;


&lt;p&gt;We&amp;rsquo;re almost done. Let&amp;rsquo;s create a function to only keep a distinct set of
successors from a collection of candidates with &lt;code&gt;get-unique-glasses&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn distinct-glasses
  [successors]
  (into #{} (map :glasses successors)))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;distinct-glasses&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(distinct-glasses
  [{:moves [{:type :fill :to 0}] :glasses [{:capacity 5, :current 5} {:capacity 3, :current 0}]}
   {:moves [{:type :fill, :to 1}], :glasses [{:capacity 5, :current 5} {:capacity 3, :current 0}]}])

&lt;/div&gt;


&lt;p&gt;And now we can rewrite &lt;code&gt;solver&lt;/code&gt; with these new pieces.&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn solver
  [capacities quantities]
  (let [initial (initialize capacities)
        target (initialize capacities quantities)
        has-solution-fn? (partial has-solution? target)]
    (fn []
      (let [first-node (make-node initial [])]
        (loop [visited #{initial} nodes [first-node]]
          (if-let [solution (has-solution-fn? nodes)]
            solution
            (let [successors (find-successors nodes)
                  valid-successors (filter-successors successors visited)
                  unique-glasses (distinct-glasses valid-successors)]
              (recur (clojure.set/union visited unique-glasses)
                     valid-successors))))))))

&lt;/div&gt;


&lt;p&gt;Test &lt;code&gt;solver&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(def simple-solver (solver [5 3] [4 0]))
(println (simple-solver))

&lt;/div&gt;


&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(def less-simple-solver (solver [8 5 3] [4 0 0]))
(println (less-simple-solver))

&lt;/div&gt;


&lt;p&gt;Implement &lt;code&gt;-main&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  
(defn -main
  [&amp; args]
  (assert (even? (count args)))
  (let [input (map #(Integer. (re-find  #&#34;\d+&#34; %)) args)
        solver-fn (apply solver (split-at (/ (count input) 2) input))]
    (println (solver-fn))))

&lt;/div&gt;


&lt;hr /&gt;

&lt;p&gt;It&amp;rsquo;s been a pretty long article in the end. Together we&amp;rsquo;ve implemented a
function to solve the water pouring problem for an arbitrary list of glasses
of some quantity in Clojure.&lt;/p&gt;

&lt;p&gt;You can find the file I&amp;rsquo;ve used to write this exploratory work
&lt;a href=&#34;https://github.com/arnaudbos/clj-water-pouring/blob/master/src/clj_water_pouring/repl.clj&#34;&gt;here&lt;/a&gt;, and the final version of the solver without
all the evaluations &lt;a href=&#34;https://github.com/arnaudbos/clj-water-pouring/blob/master/src/clj_water_pouring/core.clj&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The thing that is the most interesting to me here is not the number of lines,
the safety or the provability of correctness.&lt;br /&gt;
What I want to stress out is the development at the REPL.&lt;/p&gt;

&lt;p&gt;You can see in the repository that I didn&amp;rsquo;t even bother to write tests, because
I don&amp;rsquo;t plan to share this work, publish it or maintain it. Nonetheless it has
been tested.&lt;br /&gt;
I has been tested all the way from the beginning, at each function definition,
with data. You see, I didn&amp;rsquo;t need to use TDD, and I didn&amp;rsquo;t have to write some
temporary &lt;code&gt;main&lt;/code&gt; function to pass inputs to the command line, and I didn&amp;rsquo;t need
to wait until I&amp;rsquo;ve assembled all the code together to try it fingers crossed.&lt;/p&gt;

&lt;p&gt;Through the use of immutability, pure functions and first-class data literals
I feel like I can achieve more and iterate more quickly than with any other
language I&amp;rsquo;ve used.&lt;br /&gt;
I also argue that the Lisp syntax, although different, is an asset, because
there&amp;rsquo;s no cognitive load associated with it: no magical keywords, no mix of
parents, braces or brackets for structure: just lists as functions and data.&lt;/p&gt;

&lt;p&gt;Footnote:&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;new&#34;&gt;1&lt;/a&gt;: This it is not exactly a new glass as in &amp;lsquo;a copy&amp;rsquo; but a
new pointer to a persistent data structure, a concept also know as
&lt;em&gt;structural sharing&lt;/em&gt; (&lt;a href=&#34;#anew&#34;&gt;go back&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Feedback on giving a talk</title>
      <link>http://i-rant.arnaudbos.com/feedback-on-giving-a-talk/</link>
      <pubDate>Mon, 20 Nov 2017 03:09:02 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/feedback-on-giving-a-talk/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;OMW to my first ever local meetup talk. I will be presenting &lt;a href=&#34;https://twitter.com/hashtag/Clojure?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Clojure&lt;/a&gt;.&lt;br&gt;/me nervous as fuck &lt;a href=&#34;https://t.co/sFqpDa0Iqz&#34;&gt;pic.twitter.com/sFqpDa0Iqz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Arnaud Bos (@arnaud_bos) &lt;a href=&#34;https://twitter.com/arnaud_bos/status/928664706222575616?ref_src=twsrc%5Etfw&#34;&gt;November 9, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;Last week I gave a talk at a local meetup, the Toulouse Java User Group,
where I presented Lisp and Clojure.&lt;/p&gt;

&lt;p&gt;Apart from mandatory workgroup presentations or master thesis defense, I&amp;rsquo;ve
never volunteered to talk in front of people.&lt;/p&gt;

&lt;p&gt;In the beginning of May 2017, I sent a &amp;ldquo;Call for paper&amp;rdquo; to one of our local
&lt;a href=&#34;https://devfesttoulouse.fr/&#34;&gt;GDG DevFest&lt;/a&gt; and got rejected ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&lt;/p&gt;

&lt;p&gt;My presentation title wasn&amp;rsquo;t entertaining, the content was pretty boring and
I also left my speaker bio empty because I forgot to submit it.&lt;br /&gt;
Honestly, now that I think about it I would have rejected myself. But at
the time it was disappointing, and also relieving.&lt;/p&gt;

&lt;p&gt;And then, during the summer I listened to
&lt;a href=&#34;https://www.functionalgeekery.com/episode-82-mohit-thatte/&#34;&gt;this episode of Functional Geekery&lt;/a&gt; in which
&lt;a href=&#34;https://twitter.com/mohitthatte&#34;&gt;Mohit Thatte&lt;/a&gt; explains how he has created a
&lt;a href=&#34;http://inclojure.org&#34;&gt;Clojure conference in India&lt;/a&gt; and essentially says that you get
the community you deserve and if no-one has created a meetup yet, you can
just start with that, it doesn&amp;rsquo;t have to be someone else to do it.&lt;/p&gt;

&lt;p&gt;But creating a meetup first and then try to spread the word about it and
convince people to come is not something I could do, so I made a new
proposal to a talk about Clojure at our local Java User Group.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.toulousejug.org/&#34;&gt;Toulouse Java User Group&lt;/a&gt; has a good aura and is one of the
most frequently and well organized user group in town, so I decided to
reword my presentation proposal and found a provocative title:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The greatest single programming language ever designed: Lisp on the JVM&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a quote by &lt;a href=&#34;https://en.wikipedia.org/wiki/Alan_Kay&#34;&gt;Alan Kay&lt;/a&gt; and I was expecting a lot of trolls,
obviously.&lt;/p&gt;

&lt;p&gt;Preparing the talk has been exhausting because I was terrified at the idea
of not being able to express my ideas or answering questions about my topic.&lt;br /&gt;
This is why I read &lt;a href=&#34;https://www.manning.com/books/clojure-in-action-second-edition&#34;&gt;two&lt;/a&gt; &lt;a href=&#34;https://www.manning.com/books/the-joy-of-clojure-second-edition&#34;&gt;books&lt;/a&gt;, watched and read
several dozens of talks and articles about Clojure but also about a dozen of
articles about the concepts of &lt;a href=&#34;https://en.wikipedia.org/wiki/Identity_and_change&#34;&gt;Identity and change&lt;/a&gt;, plus a
mini series of really interesting (French) &lt;a href=&#34;https://www.franceinter.fr/emissions/sur-les-epaules-de-darwin&#34;&gt;podcast&lt;/a&gt; (episodes more or
less related to the concept of &amp;ldquo;time&amp;rdquo;, from Sept. 2, 2017 to Oct. 21, 2017).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve read so much that I didn&amp;rsquo;t take the time necessary to review and memorize
my talk&amp;hellip;&lt;br /&gt;
I you take &lt;a href=&#34;https://waitbutwhy.com/2016/03/doing-a-ted-talk-the-full-story.html&#34;&gt;Tim Urban&amp;rsquo;s &amp;ldquo;Methods&amp;rdquo;&lt;/a&gt;, I was at level &amp;ldquo;3B&amp;rdquo; which,
according to him, is the worst place to be:&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/feedback-on-giving-a-talk/method.png&#34; alt=&#34;Tim Urban Public Speaking Methods Pros and Cons&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;The night before the talk I was polishing my slides and &lt;strong&gt;practicing in front of
my fridge, at 2am, in my pyjamas, while my wife and children where peacefully
asleep&lt;/strong&gt;. I was so &lt;em&gt;frightened&lt;/em&gt; that I considered dozens of excuses and possible
ways to &lt;em&gt;avoid giving the talk&lt;/em&gt;.&lt;br /&gt;
After a short night I did realize not getting enough sleep was a terrible idea.&lt;/p&gt;

&lt;p&gt;The rest of the day has been a cycle going from totally relaxed, to nervous
as fuck, until it was my time to talk to the audience.&lt;/p&gt;

&lt;p&gt;As soon as I begun to talk I felt like the stress was &lt;em&gt;melting away&lt;/em&gt;. I was
still nervous of course, but a big part of it was gone just by going on stage
and doing the actual thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Giving the talk was a tremendous experience and the distress preceding it
was immediately replaced by a feeling of completeness, gratitude and love.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Despite my &amp;ldquo;3B public speaking method&amp;rdquo; I don&amp;rsquo;t actually think the talk was
boring as most of the people were active during my presentation, answering
questions and laughing (when expected to).&lt;/p&gt;

&lt;p&gt;But as a first time speaker I&amp;rsquo;ve made a lot of mistakes both before and during
the presentation. &lt;em&gt;I know it, because I watched the video&lt;/em&gt; later on. And
&lt;strong&gt;watching myself was horrible experience&lt;/strong&gt;&amp;hellip;&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/feedback-on-giving-a-talk/left.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;2048x1324&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/feedback-on-giving-a-talk/left.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/feedback-on-giving-a-talk/right.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;2048x1324&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/feedback-on-giving-a-talk/right.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Presenting Clojure at the Java User Group&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Seriously, it&amp;rsquo;s a lot worse than just hearing the sound of your voice and being
like:&lt;br /&gt;
&lt;em&gt;&amp;ldquo;I sound like a duck.&amp;rdquo;&lt;/em&gt;&lt;br /&gt;
The video adds a new dimension to it and you notice every single detail that
is wrong about your body, &amp;ldquo;look&amp;rdquo; or attitude.&lt;/p&gt;

&lt;p&gt;Nonetheless, I now understand what people say when they talk about about
public speaking and the desire to get back to it as soon as you&amp;rsquo;ve finished
the last one.&lt;br /&gt;
The feeling of &lt;em&gt;hopelessness and nervousness&lt;/em&gt; during the preparation, followed
by the &lt;em&gt;relief and well being&lt;/em&gt; done with it are separated only by an ephemeral
moment where you physically and mentally engage in a single activity.&lt;br /&gt;
&lt;strong&gt;This is all hormones and brain chemistry&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I hope this will encourage other people who might want to start giving
presentations to actually &lt;a href=&#34;https://www.youtube.com/watch?v=os6U77Hhm_s&#34;&gt;do it&lt;/a&gt;. Honestly, it&amp;rsquo;s worth it, even if you feel like
shit when preparing and also after watching yourself on video afterwards.
If people like what you have to say, they will tell you, and getting
congratulations for spreading ideas you care about is the biggest reward.&lt;br /&gt;
That and dopamine, you &lt;em&gt;junkie&lt;/em&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Happy birthday Clojure!</title>
      <link>http://i-rant.arnaudbos.com/happy-birthday-clojure/</link>
      <pubDate>Mon, 13 Nov 2017 13:50:14 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/happy-birthday-clojure/</guid>
      <description>
&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/happy-birthday-clojure/clojure.jpeg&#34; alt=&#34;Clojure logo&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;p&gt;This year is the tenth birthday of the release of &lt;a href=&#34;http://blog.cognitect.com/blog/2017/8/18/come-celebrate-seven-years-of-conj-10-years-of-clojure&#34;&gt;Clojure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although Clojure is gaining momentum and the community is growing at a steady
pace worldwide, after ten years the number of places where active communities
have formed is small and Clojure enthusiasts are still struggling to use their
favorite language professionally.&lt;/p&gt;

&lt;p&gt;In Europe for instance (which is my point of view), I can see strong
communities have formed in northern Europe, in London for example, Finland,
Netherlands or Germany, with conference taking place every year and companies
supporting them and the Clojure job market.&lt;/p&gt;

&lt;p&gt;In France however, the number of &amp;ldquo;Clojurians&amp;rdquo; is pretty small. There is a
Clojure User Group in Paris with really active people, which is great. Other
than that I don&amp;rsquo;t hear a whole lot about Clojure around here.&lt;/p&gt;

&lt;p&gt;Earlier this year I was listening to &lt;a href=&#34;https://twitter.com/mohitthatte&#34;&gt;Mohit Thatte&lt;/a&gt;&amp;rsquo;s conversation
in &lt;a href=&#34;https://www.functionalgeekery.com/episode-82-mohit-thatte/&#34;&gt;this episode of Functional Geekery&lt;/a&gt;.
He has created a &lt;a href=&#34;http://inclojure.org&#34;&gt;Clojure conference in India&lt;/a&gt;, from scratch (!),
in order to spread the word about Clojure and:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;nurture the small but growing community of Clojure programmers in India&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This inspired me a lot and the fact that I couldn&amp;rsquo;t attend the seventh &lt;em&gt;conj&lt;/em&gt;,
for Clojure&amp;rsquo;s tenth birthday, added on top of all the frustration generated
by having to use other technologies and programming models all day long made
me decide to take actions.&lt;/p&gt;

&lt;p&gt;I have made a proposal to talk about Lisp and Clojure at our local (Toulouse)
Java User Group. The talk got accepted and I tried (more on this in a next
article) to express the fundamentals of Lisp, Clojure and the way we treat
information in our systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This talk was also a perfect tribune to announce the creation of the
&lt;a href=&#34;https://www.meetup.com/fr-FR/Toulouse-Clojure-User-Group/&#34;&gt;Toulouse Clojure User Group&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In 2013 when I was forced by &lt;a href=&#34;https://twitter.com/FrancoisRoyer&#34;&gt;this guy&lt;/a&gt;
(he was my boss) to adopt a Lisp, it felt like my brain was melting.&lt;br /&gt;
Now I&amp;rsquo;m frustrated almost every day I have to use anything else (which is part
of why I don&amp;rsquo;t do frontend development anymore, all the other tech stacks in
this field feel hostile and &lt;em&gt;complected&lt;/em&gt; in every possible way).&lt;/p&gt;

&lt;p&gt;My goal with this user group is more or less the same as any user group
creator: to spread the word about a subject I am really excited about and
nurture the community that will form around it.&lt;/p&gt;

&lt;p&gt;I also want it to be a place where programmers can come and talk about other
functional programming languages: Haskell, Scala, Elixir, Erlang, Idris,
PureScript, Elm, Kotlin, Agda, Coq, etc.&lt;br /&gt;
There is no &amp;ldquo;functional meetup&amp;rdquo; around here and I think we could all benefit
from cross pollination and sharing ideas, just expect me to be advocating for
Clojure a little bit more.&lt;/p&gt;

&lt;p&gt;Local user groups are local by definition, so I don&amp;rsquo;t expect people coming
to work in the area from more than 20 to 40km to attend an afterwork meetup.&lt;br /&gt;
But if you are in the area, and are interested in Clojure or in functional
programming, &lt;a href=&#34;https://twitter.com/ClojureToulouse&#34;&gt;let&amp;rsquo;s meet&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Just use Clojure already!</title>
      <link>http://i-rant.arnaudbos.com/use-clojure-already/</link>
      <pubDate>Fri, 10 Nov 2017 13:41:21 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/use-clojure-already/</guid>
      <description>
&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/use-clojure-already/lisp_cycles.png&#34; alt=&#34;xkcd joke&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Lisp as a secret weapon&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;p&gt;I hear a lot of talking going on about &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt; around me lately.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s no doubt that since Kotlin v1.0 has been released last year, a lot
has happened around it from the Google announcement that
Kotlin would benefit from
&lt;a href=&#34;https://blog.jetbrains.com/kotlin/2017/05/kotlin-on-android-now-official/&#34;&gt;first class support on Android&lt;/a&gt;, up to the
hiring of &lt;a href=&#34;https://twitter.com/JakeWharton&#34;&gt;Jake Wharton&lt;/a&gt; (a figure in the world of Android
developers).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve never been very enthusiastic about Kotlin, but my colleagues at
&lt;a href=&#34;http://www.monkeypatch.io/&#34;&gt;MonkeyPatch&lt;/a&gt; seem to be following the hype (muahaha&amp;hellip;) and are
becoming more and more addicted to it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/ilaborie&#34;&gt;Igor&lt;/a&gt; offered to make a live demo in order to show me what it is they
(he) like about Kotlin.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;fr&#34; dir=&#34;ltr&#34;&gt;On profite de l&amp;#39;été pour se faire des petites sessions de BBL &lt;a href=&#34;https://twitter.com/hashtag/dev?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dev&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/passion?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#passion&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/summer?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#summer&lt;/a&gt; &lt;a href=&#34;https://t.co/54JG68txhs&#34;&gt;pic.twitter.com/54JG68txhs&lt;/a&gt;&lt;/p&gt;&amp;mdash; MonkeyPatch (@MonkeyPatch_io) &lt;a href=&#34;https://twitter.com/MonkeyPatch_io/status/893066399794556928?ref_src=twsrc%5Etfw&#34;&gt;August 3, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;During his presentation I&amp;rsquo;ve noticed a few points that I disliked, but before
jumping to conclusion I decided to dig a bit further, reading
&lt;a href=&#34;https://www.manning.com/books/kotlin-in-action&#34;&gt;Kotlin in Action&lt;/a&gt; during vacations two weeks later.&lt;/p&gt;

&lt;p&gt;I also asked on our private Slack team:
&lt;strong&gt;&lt;em&gt;&amp;ldquo;What is Kotlin&amp;rsquo;s value proposition?&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amongst other small things, the consensus begun to build: &lt;em&gt;&amp;ldquo;It&amp;rsquo;s a better
Java than Java&amp;rdquo;&lt;/em&gt;&amp;hellip;&lt;br /&gt;
Exactly what I feared.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Finished. Nice book, &lt;a href=&#34;https://twitter.com/hashtag/Kotlin?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Kotlin&lt;/a&gt; is a better Java than &lt;a href=&#34;https://twitter.com/hashtag/Java?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Java&lt;/a&gt; and increases productivity. But I still prefer &lt;a href=&#34;https://twitter.com/hashtag/Clojure?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Clojure&lt;/a&gt;. I&amp;#39;ll write about that soon &lt;a href=&#34;https://t.co/4ZgHScppAA&#34;&gt;pic.twitter.com/4ZgHScppAA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Arnaud Bos (@arnaud_bos) &lt;a href=&#34;https://twitter.com/arnaud_bos/status/898808015146627072?ref_src=twsrc%5Etfw&#34;&gt;August 19, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;To fulfill the promise made in this tweet, I took it as a game to code the
same code example Igor showed me in &lt;a href=&#34;https://clojure.org/&#34;&gt;Clojure&lt;/a&gt; in order to return
the favor to my colleagues.&lt;/p&gt;

&lt;p&gt;And I&amp;rsquo;ve decided to start a series of blog posts about Clojure&amp;rsquo;s features and
Kotlin&amp;rsquo;s features in order to express why &lt;strong&gt;&lt;em&gt;I&lt;/em&gt;&lt;/strong&gt; don&amp;rsquo;t see the later being that
much of an improvement, despite its growth in popularity.&lt;/p&gt;

&lt;p&gt;But using Clojure is not like riding on unicorns all day long either.&lt;br /&gt;
Although I fail to see if some other new languages solve real problems or just
add more puzzles to solve to our daily share or incidental complexity, I will
address some pain points I&amp;rsquo;ve encountered too in Clojure.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This post was actually in draft form since September 15th (I screwed up my
publication planning) and in the mean time I&amp;rsquo;ve had many occasions to express
my &lt;em&gt;&amp;ldquo;obsessive enthusiasm&amp;rdquo;&lt;/em&gt; of Clojure.&lt;/p&gt;

&lt;p&gt;And the static typing and type systems aficionados around me (who seem to be
legion, interestingly) have come to discover and appreciate &lt;a href=&#34;https://www.idris-lang.org/&#34;&gt;Idris&lt;/a&gt; and
its &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependent_type&#34;&gt;dependent types&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Well... I&amp;#39;d like to know fundamentally why... And anyway have you ever tried &lt;a href=&#34;https://twitter.com/idrislang?ref_src=twsrc%5Etfw&#34;&gt;@idrislang&lt;/a&gt; ?&lt;/p&gt;&amp;mdash; Frédéric Cabestre (@fcabestre) &lt;a href=&#34;https://twitter.com/fcabestre/status/912183360285544448?ref_src=twsrc%5Etfw&#34;&gt;September 25, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;I remember having heard about Idris around summer 2016 in this
&lt;a href=&#34;https://www.functionalgeekery.com/episode-54-edwin-brady/&#34;&gt;podcast&lt;/a&gt;.&lt;br /&gt;
I even added the episode to my favorites: which means I wanted to get back to
it and listen again later.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s nice to have people around ready to talk about these stuff.&lt;br /&gt;
This tweet made me realize it would be a good way to also inject a bit of
Idris dependent types and interactive editing features in the mix and see how
Clojure compares on the matter (Kotlin being out of the equation here).&lt;/p&gt;

&lt;p&gt;I hope this post will be the first of a series where &lt;a href=&#34;https://twitter.com/ilaborie&#34;&gt;Igor&lt;/a&gt; and I (and
maybe &lt;a href=&#34;https://twitter.com/fcabestre&#34;&gt;Frederic&lt;/a&gt; on Idris?) might go back and forth, answering
each other. It&amp;rsquo;s up to them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>J On The Beach 2017 — Review</title>
      <link>http://i-rant.arnaudbos.com/j-on-the-beach-malaga-2017-review/</link>
      <pubDate>Tue, 08 Aug 2017 16:23:15 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/j-on-the-beach-malaga-2017-review/</guid>
      <description>


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/panoramic.jpg&#34; alt=&#34;Picture taken while hiking, the day after the conference&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Panoramic view — Seaside of Malaga — Hiking the day after the conference&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://2017.jonthebeach.com/&#34;&gt;J On The Beach&lt;/a&gt; (JOTB) is &lt;em&gt;&amp;ldquo;A Big Data
Conference On The Beach&amp;rdquo;&lt;/em&gt; happening in Malaga (Spain) and this year (2017)
was its second edition.&lt;/p&gt;

&lt;h1 id=&#34;tl-dr&#34;&gt;tl;dr&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The staff was great, the speakers awesome and the talks interesting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I felt very comfortable and almost at home during the three days. The
atmosphere felt like being at a local conference but with famous and
renowned speakers from around the world.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Everyone I met - speakers/attendees/staff - was accessible and affable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I will detail the lunches and dinner in the rest of the article to make
pauses between talks reviews and technical explanations, but it&amp;rsquo;s fair to say
that the food was &lt;strong&gt;&lt;em&gt;great&lt;/em&gt;&lt;/strong&gt; and that &lt;strong&gt;&lt;em&gt;the organizers made sure we wouldn&amp;rsquo;t
forget our stay&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I came for distributed systems topics, and I&amp;rsquo;ve been served.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The party at the end of the event was &lt;strong&gt;&lt;em&gt;fantastic&lt;/em&gt;&lt;/strong&gt;, I&amp;rsquo;ve never seen so
many geeks dance &lt;span class=&#34;emoji&#34;&gt;:astonished:&lt;/span&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;preamble&#34;&gt;Preamble&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve discovered JOTB by accident in 2016, during the revelation of the
&lt;a href=&#34;https://panamapapers.icij.org/&#34;&gt;Panama Papers&lt;/a&gt; when I was searching for
technical details about how the &lt;a href=&#34;https://www.icij.org/about&#34;&gt;ICIJ&lt;/a&gt; managed to
analyze this massive leak of data.&lt;br /&gt;
I stumbled-upon Mar Cabra&amp;rsquo;s
&lt;a href=&#34;https://www.youtube.com/watch?v=rjqHC5dYdfE&#34;&gt;&lt;em&gt;&amp;ldquo;The tech behind the bigger journalism leak in history&amp;rdquo;&lt;/em&gt;&lt;/a&gt;
, and after watching a few other talks I decided it was worth keeping an
eye on it for the next edition.&lt;/p&gt;

&lt;p&gt;Soon enough, the 2017 line-up was released, followed by the schedule so when I
saw the subjects and the speakers I managed to get one of the first round of
tickets&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Tickets booked, I&amp;#39;ll be @JOTB17 in May and will attend &lt;a href=&#34;https://twitter.com/aphyr?ref_src=twsrc%5Etfw&#34;&gt;@aphyr&lt;/a&gt;&amp;#39;s workshop on &lt;a href=&#34;https://twitter.com/hashtag/Jepsen?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Jepsen&lt;/a&gt; 🎉 Can&amp;#39;t wait!&lt;/p&gt;&amp;mdash; Arnaud Bos (@arnaud_bos) &lt;a href=&#34;https://twitter.com/arnaud_bos/status/816912096948613120?ref_src=twsrc%5Etfw&#34;&gt;January 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;I didn&amp;rsquo;t know how to cut this article, maybe in half? or maybe an entry by
talk was more appropriate?&lt;br /&gt;
So I just kept everything in a single page and here is the table of contents
for you to hop around and read about the topics that you are interested in.&lt;/p&gt;

&lt;h1 id=&#34;tabla-de-contenido&#34;&gt;Tabla de contenido&lt;/h1&gt;

&lt;div id=&#34;toc&#34; class=&#34;well col-md-12&#34;&gt;
  &lt;!-- toc --&gt;
&lt;/div&gt;

&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ll start by giving my experience of the conference just to try to
make you feel what it was like to be there, I hope it&amp;rsquo;ll give context for
reading my reviews of the talks.&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/venue.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/venue.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;100%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    La Termica
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/hall.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/hall.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;505&#34;
        height=&#34;390&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Campero Hall
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/corridor.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;3024x4032&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/corridor.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;285&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Corridor
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/jotb-logo.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;3024x2873&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/jotb-logo.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;203&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    JOTB Logo
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/termica.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1200x800&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/termica.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;291&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    La Termica
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/workshop.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1200x800&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/workshop.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;291&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Jepsen Workshop
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;



&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The title of the conference &lt;em&gt;&amp;ldquo;A Big Data Conference On The Beach&amp;rdquo;&lt;/em&gt; is not a
scam: the beach is right there, 200 meters away from the conference venue
&lt;a href=&#34;http://www.latermicamalaga.com/&#34;&gt;La Termica&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The location was easy to find because it is a cultural center. It is not in
the city center, more halfway between the airport and the center and can
be reached in 40 minutes walk by the beach. There are hotels around and a
bus stop 50m from the entrance, as well as city bikes spots.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The place in itself is nice, the hallways and rooms are large and bright.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The staff was really welcoming every days, everyone speaking English and
willing to assist the speakers and attendees.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The registration process took forever on the first day but someone was
available to guide me to my workshop room so I didn&amp;rsquo;t have to search
(thank you!).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The necklace with printed program schedule and plan was a really great idea,
but on the other hand the names of the attendees were not that legible.
Also the bracelet that&amp;rsquo;s &lt;em&gt;&amp;ldquo;your pass for the three days&amp;rdquo;&lt;/em&gt; that you can&amp;rsquo;t
remove at night or to shower was annoying to me.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;During the workshop and also during the talks, one could find several power
strips along the chairs.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The conference WiFi was great during the two days of conference, but was
really awful during the workshop and we even experienced an outage during
20 to 30 minutes (which is unfortunate when you&amp;rsquo;re &lt;code&gt;SSH&lt;/code&gt;-ing onto cluster
nodes to run Jepsen tests).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Breakfast, coffee/tea and milk was catered every morning and bottles of
(cold) water were available all day long. There were also bottles of waters
ready for each attendee in the workshop room which was a nice treat.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Speaking of treats, the swag bag was OK, but please bear in mind that &lt;em&gt;I&amp;rsquo;m
not much fan of goodies&lt;/em&gt; in general:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The t-shirt was cool, plus there were women sizes
&lt;span class=&#34;emoji&#34;&gt;:raising_hand:&lt;/span&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The aluminum water bottle was also a good idea&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Only one sticker?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A frisbee, because it&amp;rsquo;s on the beach, you know
&lt;span class=&#34;emoji&#34;&gt;:sunglasses:&lt;/span&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The rest I can&amp;rsquo;t remember and didn&amp;rsquo;t bring back home&amp;hellip; ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;day1-jepsen-workshop&#34;&gt;Day1: Jepsen Workshop&lt;/h1&gt;

&lt;p&gt;I wrote about this workshop &lt;a href=&#34;../j-on-the-beach-jepsen-workshop&#34;&gt;in a separate blog entry&lt;/a&gt;
to save some space and not mix topics.&lt;/p&gt;

&lt;p&gt;This other entry is just scratching the surface of what Jepsen is, what it does
and how to does it.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m planning to write more about it in the future and I&amp;rsquo;ll
make sure to put links here when it&amp;rsquo;s done.&lt;/p&gt;

&lt;h1 id=&#34;day-2-talks&#34;&gt;Day 2: Talks&lt;/h1&gt;

&lt;h2 id=&#34;eric-ladizinsky-evolving-quantum-computers&#34;&gt;Eric Ladizinsky —  Evolving Quantum Computers&lt;/h2&gt;

&lt;p&gt;This is the kind of opening that really stick with me.&lt;br /&gt;
If you don&amp;rsquo;t know about Quantum Computers,
&lt;a href=&#34;https://www.dwavesys.com&#34;&gt;D-Wave Systems&lt;/a&gt; or Eric Ladizinsky,
don&amp;rsquo;t feel bad, I didn&amp;rsquo;t know either (if you knew, good for you!).&lt;/p&gt;

&lt;p&gt;So the conference started with a man going up on stage really naturally,
presenting himself not as a programmer nor computer scientist but as a
physicist.&lt;/p&gt;

&lt;p&gt;He started talking about how, given our current tools and all computing power,
we are still unable to solve the real problems we are facing a civilization:
poverty, injustice, &amp;hellip;others!&lt;br /&gt;
Which, put that way, is frankly quite depressing&amp;hellip;&lt;/p&gt;

&lt;p&gt;He took a step back and gave us his analyze on how, through evolution,
our species (&lt;a href=&#34;https://en.wikipedia.org/wiki/Homo&#34;&gt;Homo genus&lt;/a&gt;)
evolved step by step by first &lt;strong&gt;&lt;em&gt;discovering&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;using&lt;/em&gt;&lt;/strong&gt; and then
&lt;strong&gt;&lt;em&gt;mastering&lt;/em&gt;&lt;/strong&gt; new tools (think &lt;span class=&#34;emoji&#34;&gt;:fire:&lt;/span&gt;
,
&lt;span class=&#34;emoji&#34;&gt;:tractor:&lt;/span&gt;
, &lt;span class=&#34;emoji&#34;&gt;:factory:&lt;/span&gt;
),
and how &lt;em&gt;quantum physics&lt;/em&gt; might be another step forward.&lt;/p&gt;

&lt;p&gt;He drew the parallel with computer science through our limited ability to find
the most advanced models for a task in data science: we manage to find good
results through the use of lots of training data and clever algorithms.&lt;br /&gt;
But when some algorithm can be successful by throwing more computing power at
them, some problem remain &lt;a href=&#34;https://en.wikipedia.org/wiki/Computational_complexity_theory#Intractability&#34;&gt;intractable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Quantum computers leverage the principles of quantum physics
like &lt;a href=&#34;https://en.wikipedia.org/wiki/Quantum_entanglement&#34;&gt;&lt;code&gt;entanglement&lt;/code&gt;&lt;/a&gt;
in order to evaluate all possible models and find the most efficient solution.&lt;/p&gt;

&lt;p&gt;Eric gave us a great analogy with forgery: consider the molecules of metal
forming a sword.&lt;br /&gt;
The best sword ever can only be achieved by finding the best shape, the best
arrangement possible of its molecules.&lt;/p&gt;

&lt;p&gt;So, of all the possible combinations, which one is the best?&lt;/p&gt;

&lt;p&gt;Quantum physics can help us explore all the possible solutions, and find the
most efficient models whereas classical computers would require centuries of
computation.&lt;/p&gt;

&lt;p&gt;Considering quantum computers like that really blew my mind. Of course
realizing this kind of processors is hard and expansive, but they already exist!&lt;/p&gt;

&lt;p&gt;D-Wave are making quantum computers, and each new evolution is faster than the
previous one at a much higher rate than our current CPUs.&lt;/p&gt;

&lt;p&gt;At the moment it seems like only the NASA and Google can afford to buy some
of them and try them on, but we, as programmers,
&lt;a href=&#34;https://www.dwavesys.com/software&#34;&gt;we can already program them&lt;/a&gt;
with our current tools (Python, C++) thanks to cloud based environments and
several layers of abstraction.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m short on words and my knowledge of quantum physics, quantum computers and
the programming model to use them is limited, but if you are interested,
here are some links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cbinsights.com/blog/quantum-computing-explainer/&#34;&gt;WTF Is Quantum Computing? A 5-minute Primer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://io9.gizmodo.com/what-will-nasa-be-doing-with-its-new-quantum-computer-1468333514&#34;&gt;What will NASA be doing with its new quantum computer?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;inés-sombra-the-trouble-with-distribution&#34;&gt;Inés Sombra — The trouble with distribution&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/randommood&#34;&gt;Inés Sombra&lt;/a&gt; is an engineer at
&lt;a href=&#34;https://www.fastly.com&#34;&gt;Fastly&lt;/a&gt; and in this session she talked about
&lt;strong&gt;tradeoffs&lt;/strong&gt; in building a distributed system. And &lt;em&gt;OMG she speaks really
fast&lt;/em&gt; &lt;span class=&#34;emoji&#34;&gt;:race_car:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;If I could summarize the entire talk in a single word, it would be
&lt;strong&gt;&lt;em&gt;&amp;ldquo;tradeoffs&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Taking as an example the implementation of Faslty&amp;rsquo;s
&lt;a href=&#34;https://docs.fastly.com/api/imageopto&#34;&gt;Image optimizer&lt;/a&gt;, Inés presented
several stages of the evolution of the Image optimizer and the pros and cons
of each solution.&lt;/p&gt;

&lt;p&gt;To give a little bit of context and grossly describe this service, it is and
&lt;em&gt;image processing and caching&lt;/em&gt; solution.&lt;br /&gt;
You give it the location of your original quality content images and a set
of &lt;strong&gt;&lt;em&gt;V&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;arnish&lt;/em&gt; &lt;strong&gt;&lt;em&gt;C&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;onfiguration&lt;/em&gt; &lt;strong&gt;&lt;em&gt;L&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;anguage&lt;/em&gt; rules, and each
time one of your clients requires an image it points to this high quality
image and gives query parameters about the expected size, ratio, quality, etc,
of the result it needs.&lt;br /&gt;
Then Fastly&amp;rsquo;s Image optimizer will search for a cached version of the image
result, optimize it on the fly in case of a cache miss, and eventually return
the expected result after caching it.&lt;br /&gt;
Of course a lots of details are missing but this is the big picture&amp;hellip;&lt;/p&gt;

&lt;p&gt;Throughout the talk, Inés weights the costs and benefits of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;pre-processing all the catalog then caching&lt;/em&gt; VS &lt;em&gt;on-the-fly transforming
on a per-request basis then caching&lt;/em&gt;, or&lt;/li&gt;
&lt;li&gt;&lt;em&gt;being centralized&lt;/em&gt; VS &lt;em&gt;being distributed&lt;/em&gt;, or&lt;/li&gt;
&lt;li&gt;&lt;em&gt;being consistent&lt;/em&gt; VS &lt;em&gt;being available&lt;/em&gt; (or being &lt;em&gt;&amp;ldquo;fast enough&amp;rdquo;&lt;/em&gt;), or&lt;/li&gt;
&lt;li&gt;&lt;em&gt;stripping metadata&lt;/em&gt; VS &lt;em&gt;keeping metadata&lt;/em&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all, I think the talk had both too much and too little content. Let me
explain:&lt;/p&gt;

&lt;p&gt;It is true that Inés speaks really fast, but she still had to rush through
the last couple of slides in order to finish on time.&lt;br /&gt;
On the other hand, the talk was really high level on technical details and I
think that was the goal, but the tradeoffs slides with only pros and cons
about the &amp;ldquo;current&amp;rdquo; version of the service, with not a lot of details
about how this &amp;ldquo;current&amp;rdquo; version was designed made it difficult to really
realize what/how choices were made.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s worth re-watching and take time to rewind now that the video is available:&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/m8CyenESI1c&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;kyle-kingsbury-jepsen-talk&#34;&gt;Kyle Kingsbury — Jepsen Talk&lt;/h2&gt;

&lt;p&gt;Once again, &lt;a href=&#34;https://aphyr.com/&#34;&gt;aphyr&lt;/a&gt; strikes with his presentation skills
and humor.&lt;/p&gt;

&lt;p&gt;To paraphrase him: &lt;strong&gt;&lt;em&gt;&amp;ldquo;our databases are on fire&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;, and what we do as
developers is try to hide this instability to our users through nicely
designed and shiny APIs &lt;span class=&#34;emoji&#34;&gt;:rainbow:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;But if we do our best for our users to continue riding around on unicorns
all day long, we are sitting on top of systems of which we don&amp;rsquo;t really know
the inner workings.&lt;/p&gt;

&lt;p&gt;Since 2014, Kyle has been using &lt;a href=&#34;http://jepsen.io/&#34;&gt;Jepsen&lt;/a&gt; to test databases,
queues and other distributed systems on the basis of what he suspected was
wrong or what the README and documentation of those softwares were stating.&lt;/p&gt;

&lt;p&gt;He found numerous &amp;ldquo;bugs&amp;rdquo; and &amp;ldquo;inconsistencies&amp;rdquo;, published them in a
&lt;a href=&#34;http://jepsen.io/analyses&#34;&gt;series of blog posts&lt;/a&gt;
and worked with some of the teams to help analyze problems and improve
stability.&lt;/p&gt;

&lt;p&gt;What he shares with us is that &lt;strong&gt;&lt;em&gt;we should test the software we use and
we depend on&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;
We should &lt;em&gt;carefully read&lt;/em&gt; the claims and documentations of such systems,
but not take anything for granted, because all of these systems are developed
under physical and budget constraints, because &lt;em&gt;formal testing is hard&lt;/em&gt; and
&lt;em&gt;simulation testing is hard too&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Implementations of distributed systems might not be perfect, and some kinds of
&lt;em&gt;errors&lt;/em&gt;, &lt;em&gt;loss&lt;/em&gt; or &lt;em&gt;inconsistencies&lt;/em&gt; might be acceptable &lt;strong&gt;from a domain point
of view&lt;/strong&gt;, but that problem should not be hidden and assumptions must be
validated.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/tpbNTEYE9NQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h5&gt;More on Jepsen and simulation testing:&lt;/h5&gt;

&lt;p&gt;In the same series, I find this previous talk about Jepsen to be more
informative for someone interested in &lt;strong&gt;&lt;em&gt;learning&lt;/em&gt;&lt;/strong&gt; about distributed systems,
and it also might be the funniest talk I&amp;rsquo;ve ever watched:
&lt;a href=&#34;https://www.youtube.com/watch?v=QdkS6ZjeR7Q&#34;&gt;Jepsen II: Linearizable Boogaloo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also came across this
&lt;a href=&#34;https://www.youtube.com/watch?v=4fFDFbi3toc&#34;&gt;talk about simulation testing&lt;/a&gt;
at FoundationDB. &lt;a href=&#34;https://en.wikipedia.org/wiki/FoundationDB&#34;&gt;FoundationDB&lt;/a&gt;
was a closed source &lt;em&gt;&amp;ldquo;multi-model NoSQL database&amp;rdquo;&lt;/em&gt; that has been acquired
by Apple since this talk.&lt;/p&gt;

&lt;h2 id=&#34;dharma-shukla-lessons-learnt-from-building-a-globally-distributed-database-service-from-the-ground-up&#34;&gt;Dharma Shukla — Lessons learnt from building a globally distributed database service from the ground up&lt;/h2&gt;

&lt;p&gt;For the first few seconds I was a bit bored by the tone of the presentation.
Boy I was wrong!&lt;/p&gt;

&lt;p&gt;During this talk, &lt;a href=&#34;https://twitter.com/dharmashukla&#34;&gt;Dharma Shukla&lt;/a&gt; introduces
us with
&lt;a href=&#34;https://azure.microsoft.com/en-us/services/cosmos-db/&#34;&gt;CosmosDB&lt;/a&gt;, formerly
known as DocumentDB.&lt;/p&gt;

&lt;p&gt;Honestly, I didn&amp;rsquo;t even know this was a thing, and yet it is a really
interesting product developed during the last 7 years by Microsoft:
a &lt;em&gt;schema-less&lt;/em&gt;, &lt;em&gt;multi-model&lt;/em&gt;, &lt;em&gt;globally distributed&lt;/em&gt; database in Azure Cloud
&lt;span class=&#34;emoji&#34;&gt;:earth_africa:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;There are articles that will better describe Cosmos DB than I could do, but
what I will keep from Dharma&amp;rsquo;s talk is the amount of work the teams at
Microsoft seem to have invested in ensuring strong and comprehensible SLAs
for latency and availability, but also for consistency and throughput,
which is another level of quality.&lt;/p&gt;

&lt;p&gt;CosmosDB is fully &lt;strong&gt;&lt;em&gt;schema agnostic&lt;/em&gt;&lt;/strong&gt; and has its own way of structuring
data so that you don&amp;rsquo;t have to worry about it (RDF under the hood?), and it
also &amp;ldquo;indexes all the data&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;CosmosDB is &lt;strong&gt;&lt;em&gt;multi-model&lt;/em&gt;&lt;/strong&gt; in the sense that it supports &lt;em&gt;document&lt;/em&gt;,
&lt;em&gt;graph&lt;/em&gt; of &lt;em&gt;key-value&lt;/em&gt; data types and uses a &lt;em&gt;SQL-like&lt;/em&gt; query dialect as well
as MongoDB or graph APIs.&lt;/p&gt;

&lt;p&gt;Another important feature of CosmosDB is it&amp;rsquo;s &lt;strong&gt;5 different levels of
consistency&lt;/strong&gt;, from &lt;em&gt;&amp;ldquo;strong consistency&amp;rdquo;&lt;/em&gt; to &lt;em&gt;&amp;ldquo;eventual consistency&amp;rdquo;&lt;/em&gt;,
Microsoft has implemented three other consistency models based on academic
researches.&lt;/p&gt;

&lt;p&gt;CosmosDB is available as a service on &lt;em&gt;Microsoft Azure Cloud&lt;/em&gt;. There you can
choose and &lt;em&gt;elastically control with API calls&lt;/em&gt; the amount of storage and
&lt;em&gt;scale the throughput&lt;/em&gt; of your application and pay as you go down to
a &lt;em&gt;granularity of a second&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;All those features are really impressive, they even brought
&lt;a href=&#34;https://fr.wikipedia.org/wiki/Leslie_Lamport&#34;&gt;Leslie Lamport&lt;/a&gt; (inventor of
the &lt;a href=&#34;https://en.wikipedia.org/wiki/Lamport_timestamps&#34;&gt;Lamport clock&lt;/a&gt; and
the &lt;a href=&#34;https://en.wikipedia.org/wiki/Paxos_(computer_science)&#34;&gt;Paxos consensus protocol&lt;/a&gt;
among &lt;a href=&#34;https://en.wikipedia.org/wiki/LaTeX&#34;&gt;other things&lt;/a&gt;) on board and
used it&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/TLA%2B&#34;&gt;TLA+&lt;/a&gt; formal language to
design and verify for correctness. And they also use Jepsen&amp;hellip;&lt;/p&gt;

&lt;p&gt;I wasn&amp;rsquo;t expecting to be amazed by this talk but honestly if you&amp;rsquo;re not
afraid of vendor lock-in or are already using Microsoft Azure, it looks amazing.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/3Sq9AJzgxAg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;lunch-wraps-beers&#34;&gt;Lunch: Wraps+beers&lt;/h2&gt;

&lt;p&gt;The first day&amp;rsquo;s lunch consisted of wraps of different flavors, chicken, ham
or veggie &lt;span class=&#34;emoji&#34;&gt;:burrito:&lt;/span&gt;
&lt;br /&gt;
They were good enough, and open beer bar was present just like the day before
so one just had to manage to eat and drink wisely in order to be fully ready
for the talks of the afternoon.&lt;/p&gt;

&lt;p&gt;The lunch took place in the backyard just like on Wednesday, on the grass,
under a beautiful sunny sky &lt;span class=&#34;emoji&#34;&gt;:sunny:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;During the meal I reconnected with some of my fellow Jepsen workshop-ers to
share our experiences about the morning talks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/_andreidan&#34;&gt;Andrei Dan&lt;/a&gt; and
&lt;a href=&#34;https://twitter.com/einsmu&#34;&gt;Sebastian Utz&lt;/a&gt; from &lt;a href=&#34;https://crate.io/&#34;&gt;CrateDB&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/neunhoef&#34;&gt;Max Neunhöffer&lt;/a&gt; from
&lt;a href=&#34;https://www.arangodb.com/&#34;&gt;ArangoDB&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Sayat Satybaldiev from &lt;a href=&#34;https://jobs.zalando.com/tech/blog/&#34;&gt;Zalando&lt;/a&gt; and&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/donnchadho&#34;&gt;Donnchadh Ó Donnabháin&lt;/a&gt; from
&lt;a href=&#34;https://www.poppulo.com/&#34;&gt;Poppulo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;anjana-vakil-custom-query-languages-why-how&#34;&gt;Anjana Vakil — Custom Query Languages: Why? How?&lt;/h2&gt;

&lt;p&gt;In this talk, &lt;a href=&#34;https://twitter.com/anjanavakil&#34;&gt;Anjana Vakil&lt;/a&gt; explains what is the
difference between a &lt;strong&gt;&lt;em&gt;DSL&lt;/em&gt;&lt;/strong&gt; and a &lt;strong&gt;&lt;em&gt;CQL&lt;/em&gt;&lt;/strong&gt; and gives us some insights on
how to design such languages with the goal of providing powerful abstractions
while keeping usability in mind.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/y5wMNehHYBY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;roland-kuhn-taming-distribution-formal-protocols-for-akka-typed&#34;&gt;Roland Kuhn — Taming distribution: formal protocols for Akka Typed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m interested in actors but not familiar enough with Scala, Akka and the
specific implementation that is presented here to provide a good review of
this talk.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/kpvTd49YJpQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;christopher-meiklejohn-just-right-consistency-closing-the-cap-gap&#34;&gt;Christopher Meiklejohn — Just-Right Consistency: Closing The CAP Gap&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/cmeik&#34;&gt;Christopher Meiklejohn&lt;/a&gt; is a former software
developer in industry turned researcher after having worked at
&lt;a href=&#34;https://en.wikipedia.org/wiki/Riak&#34;&gt;Riak&lt;/a&gt; at &lt;a href=&#34;http://basho.com/&#34;&gt;Basho&lt;/a&gt;.&lt;br /&gt;
In this talk he talks about &amp;ldquo;&lt;strong&gt;&lt;em&gt;Just-Right Consistency&lt;/em&gt;&lt;/strong&gt;&amp;rdquo; or how to &amp;ldquo;&lt;em&gt;exploit
availability whenever possible and only synchronize exactly when needed to
enforce application invariance&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Topics of the talk:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invariants&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CAP&lt;/strong&gt; theorem&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AP&lt;/strong&gt; and &lt;strong&gt;CP&lt;/strong&gt; systems&lt;/li&gt;
&lt;li&gt;Consensus&lt;/li&gt;
&lt;li&gt;Causality&lt;/li&gt;
&lt;li&gt;Relative order&lt;/li&gt;
&lt;li&gt;Joint updates&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CRDT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And this is me watching the talk:&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/wat.jpg&#34; alt=&#34;wat&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;What is this, I don&amp;#39;t even.&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;This one gave me headaches, seriously. I&amp;rsquo;m not going to be able to summarize it
in a short paragraph so I&amp;rsquo;ll go for the long one.&lt;/p&gt;

&lt;p&gt;The state of cloud databases that has been for many years is that we
traditionally put out data in databases in datacenter(s). We have clients
from all over the world accessing a &lt;em&gt;primary&lt;/em&gt; copy and we &lt;em&gt;geo-replicate&lt;/em&gt; in
order to ensure &lt;em&gt;fault-tolerance&lt;/em&gt; and provide &lt;em&gt;high-availability&lt;/em&gt; and
&lt;em&gt;low latency&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And in the event that one or more of the copy of the database cannot
communicate with one another we have to make a choice, once and for all:&lt;/p&gt;

&lt;p&gt;We either choose a
&lt;em&gt;Consistent-under-Partition&lt;/em&gt; (&lt;strong&gt;CP&lt;/strong&gt;) or an
&lt;em&gt;Available-under-Partition&lt;/em&gt; (&lt;strong&gt;AP&lt;/strong&gt;) approach.&lt;/p&gt;

&lt;p&gt;Characteristics of a &lt;strong&gt;CP system&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All the operations are &lt;em&gt;synchronized&lt;/em&gt; (write or read) on order to &amp;ldquo;&lt;em&gt;treat all
the copies as one logical unit&lt;/em&gt;&amp;rdquo;. A &lt;em&gt;consensus&lt;/em&gt; protocol must be used in order
to ensure a single system image across replicas.&lt;/li&gt;
&lt;li&gt;This is &lt;a href=&#34;https://en.wikipedia.org/wiki/Serializability&#34;&gt;&lt;strong&gt;&lt;em&gt;serializability&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;
(e.g., Google Cloud Spanner): provide &lt;em&gt;strong consistency&lt;/em&gt; an minimize the
amount of time you have to wait, but &lt;em&gt;still slower than an AP system&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Often &lt;em&gt;over-conservative&lt;/em&gt; but very popular because easier to program! On the
programmer side, &lt;em&gt;the application is written without thinking about
distribution&lt;/em&gt;: if I write something then I will read this something, this is
a guarantee of
&lt;a href=&#34;https://en.wikipedia.org/wiki/Linearizability&#34;&gt;&lt;strong&gt;&lt;em&gt;linearizability&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Characteristics of an &lt;strong&gt;AP system&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Operations are &lt;em&gt;executed against local copies&lt;/em&gt; and then the result of those
operations are then &lt;em&gt;propagated asynchronously&lt;/em&gt; which may take time&lt;/li&gt;
&lt;li&gt;Reads and writes happen &lt;em&gt;extremely fast&lt;/em&gt;, so we may have &lt;strong&gt;&lt;em&gt;stale reads&lt;/em&gt;&lt;/strong&gt;
and &lt;strong&gt;&lt;em&gt;write conflicts&lt;/em&gt;&lt;/strong&gt; between two updates on two different copies of
the database since they haven&amp;rsquo;t &lt;em&gt;synchronized&lt;/em&gt;: they need to reconcile.&lt;/li&gt;
&lt;li&gt;The system can keep operating in the even of failure: &lt;em&gt;Available but
difficult to program&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Acknowledging the fact that there is no such thing as a &lt;em&gt;&amp;ldquo;one-size-fits-all&amp;rdquo;&lt;/em&gt;
consistency model for applications, Christopher presents us a better approach:&lt;/p&gt;

&lt;p&gt;Express our application invariants (properties of the system that must always
hold true), and provide a way for the system to automatically infer from
the application and tailor the consistency choices (a.k.a. feature by feature)
based on those invariants to guarantee that no violation occur,
this is &lt;strong&gt;&lt;em&gt;Just-Right Consistency&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Characteristics of &lt;strong&gt;Just-Right Consistency&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write &lt;em&gt;sequential programs&lt;/em&gt; that enforce &lt;em&gt;application level invariants&lt;/em&gt;
and preserve this application behavior &lt;em&gt;when deployed under&lt;/em&gt;
&lt;strong&gt;&lt;em&gt;concurrency&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;and&lt;/em&gt; &lt;strong&gt;&lt;em&gt;distribution&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;We will have &lt;strong&gt;AP&lt;/strong&gt; compatible invariants: under an &lt;strong&gt;AP&lt;/strong&gt; system we can
guarantee these invariants without synchronization.&lt;/li&gt;
&lt;li&gt;And &lt;strong&gt;CAP&lt;/strong&gt;-sensitive invariants: &lt;em&gt;one way&lt;/em&gt; VS &lt;em&gt;two ways&lt;/em&gt; communication
invariants:

&lt;ul&gt;
&lt;li&gt;One way: an operation that may or may not happen &lt;em&gt;atomically&lt;/em&gt; or in a
particular order, but we &lt;em&gt;don&amp;rsquo;t need a response&lt;/em&gt; so it works without
synchronization&lt;/li&gt;
&lt;li&gt;Two way: two operations that are &lt;em&gt;related&lt;/em&gt; or &lt;em&gt;dependent&lt;/em&gt; will require
&lt;em&gt;coordination&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Provides tools for &lt;em&gt;analysis and verification&lt;/em&gt; (e.g., at the IDE level): tell
whether or not the application &lt;em&gt;will be safe when it&amp;rsquo;s deployed&lt;/em&gt;, bringing
the application code and the database closer together.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the talk we follow the case study of a lifecycle management tool for
prescriptions and drug delivery to demonstrate how some application invariants
may be &lt;strong&gt;AP&lt;/strong&gt; compatible while other being &lt;strong&gt;CAP&lt;/strong&gt;-sensitive.&lt;/p&gt;

&lt;p&gt;Our invariants will be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Relative order&lt;/em&gt;&lt;/strong&gt; (&lt;em&gt;referential integrity&lt;/em&gt;): Create a prescription record
and reference it by a patient&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Joint updates&lt;/em&gt;&lt;/strong&gt; (&lt;em&gt;atomicity&lt;/em&gt;): Create prescription, then update doctor,
then patient, then pharmacy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Precondition check&lt;/em&gt;&lt;/strong&gt;: Deliver medication only the intended number of times&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two invariants are &lt;strong&gt;AP&lt;/strong&gt; compatible, and the third one is
&lt;strong&gt;CAP&lt;/strong&gt;-sensitive as we shall see.&lt;/p&gt;

&lt;p&gt;Characteristics of an &lt;strong&gt;AP&lt;/strong&gt; compatible invariant:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No synchronization: can operate locally without blocking. Its updates are
applied locally and asynchronously propagated.&lt;/li&gt;
&lt;li&gt;Updates are fast and exploit &lt;em&gt;concurrency&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Updates must &lt;em&gt;commute&lt;/em&gt;: &lt;em&gt;non-commutative&lt;/em&gt; updates require &lt;strong&gt;CP&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What &lt;a href=&#34;https://en.wikipedia.org/wiki/Commutative_property&#34;&gt;&lt;strong&gt;&lt;em&gt;commutativity&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;
is:&lt;/p&gt;

&lt;p&gt;Imagine we have two replicas of a register that are in agreement.&lt;/p&gt;

&lt;p&gt;If two concurrent operations set different values (e.g., 2 and 3) for a
specific key on the two replicas and we don&amp;rsquo;t synchronize, we will have a
divergence.&lt;br /&gt;
Replication without coordination will not produce a single outcome, the system
cannot by itself decide which value should win unless being told so.&lt;/p&gt;

&lt;p&gt;These two operations are said to be &lt;em&gt;non-commutative&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Can we make non-commutative updates commutative?  Yes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using deterministic conflict resolution: pick a value that wins.&lt;br /&gt;
Use a timestamp-based algorithm (Cassandra&amp;rsquo;s &lt;strong&gt;&lt;em&gt;L&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;ast&lt;/em&gt; &lt;strong&gt;&lt;em&gt;W&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;rite&lt;/em&gt;
&lt;strong&gt;&lt;em&gt;W&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;ins&lt;/em&gt;), or an application level merge/resolution (CouchDB, OrientDB,
Aerospike, Riak).&lt;/li&gt;
&lt;li&gt;using
&lt;a href=&#34;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&#34;&gt;&lt;strong&gt;&lt;em&gt;CRDT&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;s:
&lt;strong&gt;CRDT&lt;/strong&gt;s are extended sequential data types that encapsulate (built-in)
deterministic merge functions. I&amp;rsquo;m not very familiar so I will try to get into
more details in future blog posts, but there are many different designs of
CRTDs for different uses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what happens when we assume that the system we&amp;rsquo;re building has this property?&lt;br /&gt;
All operations will commute.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s examine &lt;em&gt;relative order&lt;/em&gt; and &lt;em&gt;joint updates&lt;/em&gt; first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relative order&lt;/strong&gt; invariant:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We do something, then other actions, and ensure that the updates
are seen in the proper order, this is relative order.&lt;/li&gt;
&lt;li&gt;If an operation P implies Q than the program makes sure that Q is written
before P. As long as it&amp;rsquo;s in order on the target replica and that changes are
replicated in the proper order, the invariant is never violated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we need a system that ensures
&lt;a href=&#34;https://en.wikipedia.org/wiki/Causal_consistency&#34;&gt;&lt;strong&gt;&lt;em&gt;causal consitency&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Updates that are causaly related to other updates (that influence other
updates) that happen in an order should be delivered in the exact same order&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Joint updates&lt;/strong&gt; invariant:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Given &lt;em&gt;relative order&lt;/em&gt;, two replicas with updates are causally consistent,
so far so good&lt;/li&gt;
&lt;li&gt;But still, inconsistent state of the database can be read by
clients/replicas &lt;em&gt;between&lt;/em&gt; updates&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Joint updates&lt;/em&gt; relate to
&lt;a href=&#34;https://en.wikipedia.org/wiki/Atomicity_(database_systems)&#34;&gt;&lt;strong&gt;&lt;em&gt;atomicity&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;:
all-or-nothing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is solved by grouping updates atomically in batches, taking snapshots
along the way so clients (or other replicas) read consistent snapshots.&lt;/p&gt;

&lt;p&gt;By ensuring these invariants on the database side based on the sequential
program on the client side, at this point we are designing a system that has
&lt;em&gt;relative order&lt;/em&gt; plus &lt;em&gt;joint updates&lt;/em&gt;, that is:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Transactional Causal Consistency&lt;/em&gt;&lt;/strong&gt;: the strongest &lt;strong&gt;AP&lt;/strong&gt; compatible
consistency model.&lt;/p&gt;

&lt;p&gt;Now for our last invariant: &lt;strong&gt;Preconditions check&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preventing getting the same prescription twice&lt;/li&gt;
&lt;li&gt;This is basically a counter with addition and subtraction operation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What happens when these operations happen concurently?&lt;/p&gt;

&lt;p&gt;Addition for instance: Take a counter and apply an addition on a replica
and another addition on a second replica. We assumed earlier that operations
on our system will commute, so for instance adding 2 and then 3 is the
same thing as adding 3 and then 2.&lt;/p&gt;

&lt;p&gt;Addition is then stable under concurrency and we don&amp;rsquo;t have to synchronize.&lt;/p&gt;

&lt;p&gt;Subtraction on the other hand is not stable under concurrency. If we
decrement our counter on a replica and do the same thing on another
replicat without synchronizing, we could break the invariant that the
counter must always be greater than zero.&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;CAP&lt;/strong&gt;-sensitive.&lt;/p&gt;

&lt;p&gt;We have two solutions do deal with this issue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First: &lt;strong&gt;¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&lt;/strong&gt;
We can be fine with this tradeoff and acknowledge that our invariant
&lt;em&gt;wasn&amp;rsquo;t really an invariant&lt;/em&gt;, e.g.: ensure that a pacient gets its
prediction rather than being too conservative.&lt;/li&gt;
&lt;li&gt;Second: Forbid concurrency, a.k.a &lt;em&gt;synchronization&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wow, that was a long read!&lt;/p&gt;

&lt;p&gt;This model is interesting because we can choose &lt;em&gt;for each operation&lt;/em&gt;
what consistency model suits best. And when I say &amp;ldquo;we&amp;rdquo;, I say the
&lt;em&gt;system&lt;/em&gt;. Because it&amp;rsquo;s hard to reason about these problems and we need
&lt;em&gt;new tools&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Need tools to analyse and allow or not operations to proceed by analysing
&lt;em&gt;where invariants could be violated&lt;/em&gt; and tell us where we&amp;rsquo;re fine and
where we need &lt;em&gt;synchronization&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This is a research topic with lots of movement.&lt;br /&gt;
Cristopher presents one model: the
&lt;a href=&#34;https://syncfree.lip6.fr/index.php/2-uncategorised/51-cise&#34;&gt;CISE Analysis&lt;/a&gt;
(&lt;a href=&#34;http://software.imdea.org/~gotsman/papers/cise-tool.pdf&#34;&gt;paper&lt;/a&gt;),
but I&amp;rsquo;m not going to go into
&lt;a href=&#34;https://github.com/SyncFree/CISE&#34;&gt;details&lt;/a&gt; at this point.&lt;/p&gt;

&lt;p&gt;So we have &lt;a href=&#34;http://syncfree.github.io/antidote/&#34;&gt;AntidoteDB&lt;/a&gt;:
&lt;a href=&#34;https://github.com/SyncFree/antidote&#34;&gt;Open-source&lt;/a&gt;, implemented in Erlang,
built on top of Riak core, providing &lt;strong&gt;&lt;em&gt;Transactional Causal Consistency&lt;/em&gt;&lt;/strong&gt;
and is in alpha release.&lt;/p&gt;

&lt;p&gt;Antidote respects &lt;strong&gt;&lt;em&gt;causality&lt;/em&gt;&lt;/strong&gt; by program order through clients and
provide an &lt;em&gt;operations API&lt;/em&gt; as well as a &lt;em&gt;transaction API&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A company is materializing around it and is in the process of raising money.
The goal is to prodive the database open-source and for free and support
and tools commercially.&lt;/p&gt;

&lt;p&gt;Really interesting topic and talk, and lots of content!&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/Vd2I9v3pYpA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;santiago-ortiz-dynamic-data-visualization&#34;&gt;Santiago Ortiz — Dynamic data visualization&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/moebio&#34;&gt;Santiago Ortiz&lt;/a&gt; has a really interesting way
of looking at things and explaining how he thinks data visualization is meant
to become a more democratized way at analyzing data and not just something
reserved to data scientists.&lt;/p&gt;

&lt;p&gt;Referring to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Method_of_loci&#34;&gt;memory palace&lt;/a&gt;
technique for remembering complex numbers, he draw the following parallel:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Machines use numbers for encoding of information including stories.&lt;/p&gt;

&lt;p&gt;And we need stories to store numbers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The rest of the talk was a portfolio of data visualizations which was nice
to see but not really informative unless it is your thing.&lt;/p&gt;

&lt;p&gt;On the plus side, one of the examples Santiago gave was about a book :
[Rayuela](&lt;a href=&#34;https://en.wikipedia.org/wiki/Hopscotch_(Cort%C3%A1zar_novel&#34;&gt;https://en.wikipedia.org/wiki/Hopscotch_(Cort%C3%A1zar_novel&lt;/a&gt;) by
Julio Cortázar.&lt;br /&gt;
This book, he explained, has been written in such a was that it can be read
linearly or in an &lt;em&gt;unordered&lt;/em&gt; way following a pattern suggested by the author
to jump from chapter to chapter.&lt;br /&gt;
The visualization consisted in circles that allowed the viewer to screen
and read from a chapter to another.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/7t0ob7nGjN8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;dinner&#34;&gt;Dinner&lt;/h2&gt;

&lt;p&gt;The dinner was served in the backyard once again. We had fresh our of the oven
pizzas and beer as well as soft drinks.&lt;/p&gt;

&lt;p&gt;I ate with other attendees and left shortly after so I missed the meetups
that had been organized specially for the event.&lt;/p&gt;

&lt;h1 id=&#34;day-3-talks&#34;&gt;Day 3: Talks&lt;/h1&gt;

&lt;h2 id=&#34;duarte-nunes-scylladb-nosql-at-ludicrous-speed&#34;&gt;Duarte Nunes — ScyllaDB: NoSQL at Ludicrous Speed&lt;/h2&gt;

&lt;p&gt;I was interested in this talk because of its summary highlighting the work
done on performance on &lt;a href=&#34;http://www.scylladb.com/&#34;&gt;ScyllaDB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;ScyllaDB is a distributed databased based on the same model as
&lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt;: dynamo-based. Its characteristics are
&lt;strong&gt;high write availability&lt;/strong&gt;, &lt;strong&gt;eventual consistency&lt;/strong&gt; and inability to do
&lt;em&gt;join&lt;/em&gt; queries.&lt;/p&gt;

&lt;p&gt;ScyllaDB is &lt;em&gt;fully compatible&lt;/em&gt; with Cassandra&amp;rsquo;s API and file format so you can
drop replace it without a single code line change.&lt;/p&gt;

&lt;p&gt;Where ScyllaDB delivers is on the performance aspects. According to the
benchmarks (we all love a good benchmark don&amp;rsquo;t we), &lt;strong&gt;&lt;em&gt;a 3 nodes ScyllaDB
cluster is able to sustain the same load as a 30 nodes Cassandra cluster&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;
This is basically Cassandra on steroids&lt;/p&gt;

&lt;p&gt;So how did the team manage to do that?&lt;/p&gt;

&lt;p&gt;The answer is lots of time and efforts applying &lt;strong&gt;&lt;em&gt;good algorithms&lt;/em&gt;&lt;/strong&gt; and
&lt;strong&gt;&lt;em&gt;mechanical sympathy&lt;/em&gt;&lt;/strong&gt; principles in order to squeeze every bit from CPUs
and memory.&lt;/p&gt;

&lt;p&gt;ScyllaDB uses a &lt;strong&gt;&lt;em&gt;thread-per-core&lt;/em&gt;&lt;/strong&gt; model to avoid &lt;em&gt;context-switching&lt;/em&gt; between
threads and allocates each core a &lt;strong&gt;private memory pool&lt;/strong&gt;. So blocking calls are
forbidden and ScyllaDB adopts an &lt;em&gt;asynchronous&lt;/em&gt; programming style with &lt;em&gt;futures
and promises&lt;/em&gt; for networking and file I/O and use message passing between CPUs
to hide latency from accessing memory.&lt;/p&gt;

&lt;p&gt;On the memory side, ScyllaDB is very cautious about its memory space allocation
and manages to &lt;strong&gt;&lt;em&gt;compact&lt;/em&gt;&lt;/strong&gt; memory to avoid fragmentation.&lt;/p&gt;

&lt;p&gt;ScyllaDB also features an interesting and tunable &lt;em&gt;self-monitoring&lt;/em&gt; tool
(benchmarking itself) able to analyze the stress under which the database is
and make decisions on which process to prioritize (queuing requests) and how
to deal with background tasks such as &lt;em&gt;compaction&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you have a use case for Cassandra and are critical about your resources
usage, I think it&amp;rsquo;s really worth taking a look at ScyllaDB which is also open
source by the way.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/Qsj6KkbjMGI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;danielle-ashley-uniting-church-and-state-fp-and-oo-together&#34;&gt;Danielle Ashley — Uniting Church and State: FP and OO Together&lt;/h2&gt;

&lt;p&gt;When preparing my schedule, I selected this talk
because it &amp;ldquo;&lt;em&gt;talked about FP and OO together&lt;/em&gt;&amp;rdquo; and I really like the idea
that a lot of OO problems could be solved by using more FP
concepts and good practices.
Or use OO techniques in order to gain performance in our FP code, for
instance.&lt;/p&gt;

&lt;p&gt;So I just &lt;em&gt;completely ignored&lt;/em&gt; the first part of the talk and didn&amp;rsquo;t
understand the &amp;ldquo;Church and State&amp;rdquo; pun until later, so yeah, I&amp;rsquo;m stupid.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt; the conference I did my homework and looked at this church
encoding thing and I realized it is really interesting as an exercise.
At first, I didn&amp;rsquo;t see where it&amp;rsquo;d be useful unless you&amp;rsquo;re trying to implement
a new language. But Danielle talked about the performance side of things, and
it started to click.&lt;/p&gt;

&lt;p&gt;Church encoding is a way of representing data and operators using &lt;em&gt;nothing
more than recursion and anonymous functions&lt;/em&gt;. In this talk, Danielle is not
showing us how to implement
&lt;a href=&#34;https://en.wikipedia.org/wiki/Church_encoding#Church_numerals&#34;&gt;Church Numerals&lt;/a&gt;
but how, by thoroughly designing out programs, we can eventually make it
simpler to &lt;strong&gt;&lt;em&gt;reason about&lt;/em&gt;&lt;/strong&gt; (keep state in isolation),
&lt;strong&gt;&lt;em&gt;invert the flow of control&lt;/em&gt;&lt;/strong&gt; (push-pull &lt;em&gt;FRP style&lt;/em&gt; instead of downstream
method calls) and &lt;strong&gt;&lt;em&gt;improve performance&lt;/em&gt;&lt;/strong&gt; (less object instantiation,
and avoiding &lt;code&gt;Optional&lt;/code&gt; overhead in this example).&lt;/p&gt;

&lt;p&gt;This will deserve another blog post in the future to explore this topic.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/Nn0eb9Tl1Bo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;justo-ruiz-ferrer-adressing-the-elephant-in-the-room-what-a-post-hadoop-era-looks-like&#34;&gt;Justo Ruiz Ferrer — Adressing the elephant in the room: what a post-Hadoop era looks like&lt;/h2&gt;

&lt;p&gt;The title mislead to expect a talk giving insight about &lt;em&gt;where&lt;/em&gt; the big data
processing techniques could go, but in the end for me it didn&amp;rsquo;t
deliver &lt;span class=&#34;emoji&#34;&gt;:elephant:&lt;/span&gt;
&lt;br /&gt;
The talk was mainly just an explanation of the &lt;em&gt;&amp;ldquo;my big data is bigger than
your big data&amp;rdquo;&lt;/em&gt; saying and a quick demo of &lt;a href=&#34;https://valo.io/&#34;&gt;Valo&lt;/a&gt;&amp;rsquo;s streaming
platform.&lt;/p&gt;

&lt;p&gt;The speaker (and CTO of the company hosting the event) is clearly comfortable
talking to an audience and fills the room with his speaking, and
I expected some insights or takeaway thoughts about the direction in which
our industry is going.&lt;br /&gt;
But I ended up with sort of a statement about our architectures moving from
&lt;strong&gt;&lt;em&gt;batch processing&lt;/em&gt;&lt;/strong&gt; to &lt;strong&gt;&lt;em&gt;streaming processing&lt;/em&gt;&lt;/strong&gt;, with the &lt;strong&gt;&lt;em&gt;lambda
architecture&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;micro-batch&lt;/em&gt;&lt;/strong&gt; processing and the &lt;strong&gt;&lt;em&gt;dataflow model&lt;/em&gt;&lt;/strong&gt;
which he didn&amp;rsquo;t mention.&lt;/p&gt;

&lt;p&gt;No video available for this one.&lt;/p&gt;

&lt;h2 id=&#34;lunch-paella&#34;&gt;Lunch: Paella!!!&lt;/h2&gt;

&lt;p&gt;The last day&amp;rsquo;s meal was an authentic
&lt;a href=&#34;https://en.wikipedia.org/wiki/Paella&#34;&gt;Valencian Paella&lt;/a&gt;, and I can tell you
they nailed it. It was fantastic.&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/paella.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/paella.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;372&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/paella2.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/paella2.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;418&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Valencian Paella for 300 person&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Once again in the backyard under a sunny sky &lt;span class=&#34;emoji&#34;&gt;:sunny:&lt;/span&gt;

I&amp;rsquo;ve had the occasion to share with other conference attendees about the
previous talks and speak about programming languages and other geeky stuff.&lt;br /&gt;
Fun time &lt;span class=&#34;emoji&#34;&gt;:nerd:&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;caitie-mccaffrey-distributed-sagas-a-protocol-for-coordinating-microservices&#34;&gt;Caitie McCaffrey — Distributed Sagas: A Protocol for Coordinating Microservices&lt;/h2&gt;

&lt;p&gt;Super interesting talk by
&lt;a href=&#34;https://twitter.com/caitie&#34;&gt;Caitie McCaffrey&lt;/a&gt; about how to orchestrate
multiple &lt;em&gt;microservices&lt;/em&gt; in order to achieve &lt;em&gt;consistency&lt;/em&gt; of a single
business action.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Distributed Sagas&lt;/strong&gt; is a protocol with no standard or open source
implementation (yet) designed to create a layer of &lt;em&gt;coordination&lt;/em&gt; on top of
several (micro)services without having to write &lt;em&gt;yet another service&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The example given in this talk is really simple and powerful: you have a
&lt;em&gt;flight booking&lt;/em&gt; service to which was added a &lt;em&gt;hotel booking&lt;/em&gt; service as well
as a &lt;em&gt;car rental&lt;/em&gt; service, and you want to offer your customers the ability
to &lt;em&gt;book an entire trip&lt;/em&gt; including those three services.&lt;br /&gt;
How do you ensure &lt;em&gt;business/domain level&lt;/em&gt; &lt;strong&gt;&lt;em&gt;consistency&lt;/em&gt;&lt;/strong&gt; without creating a
new service?&lt;/p&gt;

&lt;p&gt;This is not just an exercise: with the rise of microservices, we have moved
away from the consistency &lt;em&gt;guarantees&lt;/em&gt; offered by our databases and must
maintain &lt;em&gt;application-level consistency&lt;/em&gt;, or &lt;strong&gt;&lt;em&gt;feral consistency&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;
And for each new service that is deployed and available we could
develop $n$ new combinations of &lt;em&gt;coordination&lt;/em&gt; services in order to deliver new
value to customers&amp;hellip;&lt;/p&gt;

&lt;p&gt;Distributed Sagas introduces the concept of a &lt;strong&gt;SEC&lt;/strong&gt;
(&lt;strong&gt;&lt;em&gt;S&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;aga&lt;/em&gt; &lt;strong&gt;&lt;em&gt;E&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;xecution&lt;/em&gt; &lt;strong&gt;&lt;em&gt;C&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;oordinator&lt;/em&gt;) along with
&lt;strong&gt;&lt;em&gt;action requests&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;compensating requests&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Based on a persistent &lt;em&gt;log&lt;/em&gt;, the stateless &lt;strong&gt;SEC&lt;/strong&gt; will come and write the
actions of other services and operations results to the log &lt;strong&gt;&lt;em&gt;after
acknowledgement&lt;/em&gt;&lt;/strong&gt; of the success of the action.&lt;br /&gt;
The &lt;strong&gt;SEC&lt;/strong&gt; is then responsible to manage the consistency of the operations from
a domain perspective and &lt;em&gt;replay&lt;/em&gt; or &lt;em&gt;rollback&lt;/em&gt; operations in case of failure.&lt;/p&gt;

&lt;p&gt;The log in this case is like a &lt;em&gt;stack&lt;/em&gt;, where each operation performed by a
service is &lt;em&gt;idempotent&lt;/em&gt; (in order to be replayed in case of delay or timeout for
instance) and has a corresponding &lt;em&gt;backward idempotent action&lt;/em&gt; (&lt;em&gt;compensating
requests&lt;/em&gt;) that can be performed: a semantic &lt;em&gt;undo&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now this is interesting: because an &lt;strong&gt;&lt;em&gt;action request&lt;/em&gt;&lt;/strong&gt; from a service may be
delayed or just fail without returning (and we can&amp;rsquo;t make a difference), it is
important that it be &lt;strong&gt;&lt;em&gt;idempotent&lt;/em&gt;&lt;/strong&gt; in order to be &lt;em&gt;replayed&lt;/em&gt;.&lt;br /&gt;
This way, we avoid the complexity of having to send a &lt;strong&gt;&lt;em&gt;compensating request&lt;/em&gt;&lt;/strong&gt;
to undo an &lt;em&gt;action request&lt;/em&gt; that may or may not have succeeded.&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;By replaying, we make sure that we get a result and then we &amp;ldquo;cancel&amp;rdquo; if
need be.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For this protocol to be applicable, the business/domain model must be
compatible with &lt;em&gt;eventual consistency&lt;/em&gt; because each service being exposed
individually &lt;em&gt;exposes its state&lt;/em&gt;, and the whole saga cannot be made
&lt;strong&gt;&lt;em&gt;isolated&lt;/em&gt;&lt;/strong&gt; nor &lt;strong&gt;&lt;em&gt;atomic&lt;/em&gt;&lt;/strong&gt; under such constraints without introducing a lot
of &lt;em&gt;latency&lt;/em&gt; and &lt;em&gt;single point of failures&lt;/em&gt; (see the part of the talk about
&lt;em&gt;two phase commit&lt;/em&gt;).&lt;br /&gt;
Indeed, the &lt;strong&gt;&lt;em&gt;SEC&lt;/em&gt;&lt;/strong&gt; itself might look like a SPOF, but it is actually
stateless so just spawning a new instance of it and replay the log is
sufficient to &lt;em&gt;continue the saga&lt;/em&gt; &lt;span class=&#34;emoji&#34;&gt;:traffic_light:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;From what I understood both Uber and Twitter are currently
experimenting this technique, so we will have to wait and see what comes out.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/0UTOLRTwOX0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;martin-thompson-high-performance-managed-languages&#34;&gt;Martin Thompson — High Performance Managed Languages&lt;/h2&gt;

&lt;p&gt;Famous for his work on high performance coding,
&lt;a href=&#34;https://twitter.com/mjpt777&#34;&gt;Martin Thompson&lt;/a&gt; is a renowned expert and speaker.&lt;/p&gt;

&lt;p&gt;At JOTB17, he gave us a talk about managed languages: languages that run on a
virtual machine which provides garbage-collected memory management
(Java, C#, etc.).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve already listened to Martin in various
&lt;a href=&#34;http://www.se-radio.net/2014/02/episode-201-martin-thompson-on-mechanical-sympathy/&#34;&gt;podcasts&lt;/a&gt;
and one thing that he mentions quite often is that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Our CPUs Arent&amp;rsquo;t Getting Any Faster.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But most of our applications aren&amp;rsquo;t really &lt;em&gt;CPU intensive&lt;/em&gt;, they are intensive
in their &lt;em&gt;memory access&lt;/em&gt;.&lt;br /&gt;
Hardware constructors are adding cores in order to increase speed, and they
are doing wonders, but our little understanding of how CPUs and memory access
work prevents us from gaining all of the benefits.&lt;/p&gt;

&lt;p&gt;Just like there was a debate between &lt;em&gt;Assembler&lt;/em&gt; VS &lt;em&gt;Compiled Languages&lt;/em&gt;,
there&amp;rsquo;s an argument between &lt;em&gt;managed languages&lt;/em&gt; VS &lt;em&gt;native languages&lt;/em&gt; and this
talk is just about that.&lt;/p&gt;

&lt;p&gt;Managed languages benefit from &lt;strong&gt;&lt;em&gt;JIT optimizations&lt;/em&gt;&lt;/strong&gt; that a sole static
compiler cannot provide.&lt;br /&gt;
These are &lt;strong&gt;&lt;em&gt;predictions&lt;/em&gt;&lt;/strong&gt; made on &lt;em&gt;real, measured data&lt;/em&gt;, and if it happens
that the bets are wrong, &lt;strong&gt;&lt;em&gt;the JIT can correct itself&lt;/em&gt;&lt;/strong&gt;, &lt;em&gt;revoke&lt;/em&gt; some
decisions and &lt;em&gt;make new optimizations&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code branching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a static compiler armed with a good programmer branch prediction
hint/information can be a solid optimization, a managed language is
&lt;em&gt;able to use real data instead of static decisions and adjust over time&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Methods inlining&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Methods/Functions &lt;em&gt;can be inlined in case of hotness&lt;/em&gt; in order to avoid
&lt;em&gt;function call overhead&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Loop unrolling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The optimizer can also &lt;em&gt;measure which loops are hotspots&lt;/em&gt;
and which are not, and decide to &lt;em&gt;unroll&lt;/em&gt; some rather than check and iterate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intrinsics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The runtime can also &lt;em&gt;replace programmer instructions by architecture specific
instructions&lt;/em&gt; (&lt;strong&gt;&lt;em&gt;intrinsics&lt;/em&gt;&lt;/strong&gt;) in order to benefit from a the particular
implementation.&lt;br /&gt;
Something impossible for static compiler unless &lt;em&gt;compiling for a specific
architecture&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polymorphism&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Managed runtimes can &lt;em&gt;avoid virtual dispatch&lt;/em&gt; or going through jump tables
by directly calling the &amp;lsquo;&lt;em&gt;right&lt;/em&gt;&amp;rsquo; method of an object or &lt;em&gt;inlining&lt;/em&gt; it.&lt;br /&gt;
By checking the number of subtypes we can &lt;em&gt;decide&lt;/em&gt; whether or not it&amp;rsquo;s worth
to just &lt;em&gt;calling the method directly&lt;/em&gt;, using a simple &lt;code&gt;if&lt;/code&gt; statement,
go &lt;em&gt;polymorphic&lt;/em&gt; or &lt;em&gt;cache the code for a particular type&lt;/em&gt; if it is hotter
than the others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Garbage Collector&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The performance of a &lt;strong&gt;&lt;em&gt;Garbage Collector&lt;/em&gt;&lt;/strong&gt; depends upon its implementation,
but also on how we, as programmers, deal with our objects.&lt;/p&gt;

&lt;p&gt;Martin outlines the fact that &lt;strong&gt;&lt;em&gt;it is not allocation that is costly, but
reclamation&lt;/em&gt;&lt;/strong&gt;&amp;hellip;&lt;br /&gt;
&lt;em&gt;The longer and object lives, the more operations the GC needs to do.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the end, &lt;strong&gt;&lt;em&gt;THE&lt;/em&gt;&lt;/strong&gt; most important thing to performance is &lt;strong&gt;TIME&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How much time and effort are we willing to put into implementing&lt;/em&gt; &lt;strong&gt;&lt;em&gt;good
algorithms&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;and doing right choices™&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Some takeaways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoiding cache misses&lt;/li&gt;
&lt;li&gt;Amortising expensive operations&lt;/li&gt;
&lt;li&gt;Mechanical sympathy&lt;/li&gt;
&lt;li&gt;Algo &amp;amp; Data-structures&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;Fun facts:&lt;/h5&gt;

&lt;p&gt;Martin is the author of &lt;a href=&#34;https://github.com/real-logic/aeron&#34;&gt;Aeron&lt;/a&gt;,
a &lt;em&gt;high throughput&lt;/em&gt;, &lt;em&gt;low latency&lt;/em&gt; messaging system (it is used by
&lt;a href=&#34;http://www.onyxplatform.org/&#34;&gt;Onyx&lt;/a&gt;, BTW).&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Java implementation of Aeron is faster than native implementation of
other fast messaging systems&lt;/strong&gt;: because of the &lt;strong&gt;&lt;em&gt;time&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;efforts&lt;/em&gt;&lt;/strong&gt; put
into implementing &lt;strong&gt;&lt;em&gt;good algorithms&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Aeron has been ported to C++, then Go, then C#: and in the end &lt;strong&gt;&lt;em&gt;the fastest
implementation is in C#&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;
C++ could be but would take much, much more time
&lt;span class=&#34;emoji&#34;&gt;:hourglass_flowing_sand:&lt;/span&gt;
&amp;hellip;&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/Pz-4co8IaI8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;dinner-party&#34;&gt;Dinner + Party&lt;/h2&gt;

&lt;p&gt;After dinner (Camperos &lt;span class=&#34;emoji&#34;&gt;:taco:&lt;/span&gt;
 +
&lt;span class=&#34;emoji&#34;&gt;:beers:&lt;/span&gt;
), the organizers invited a
flamenco dancer &lt;span class=&#34;emoji&#34;&gt;:dancer_tone1:&lt;/span&gt;
,
singer &lt;span class=&#34;emoji&#34;&gt;:microphone2:&lt;/span&gt;
 and
guitarist &lt;span class=&#34;emoji&#34;&gt;:guitar:&lt;/span&gt;
.&lt;/p&gt;

&lt;p&gt;And after the local culture and art, the party started with a rock band doing
cover songs as well as a group called
&lt;a href=&#34;https://g.co/kgs/zVDQ3a&#34;&gt;Los Vinagres&lt;/a&gt; coming from the
Canary Islands &lt;span class=&#34;emoji&#34;&gt;:island:&lt;/span&gt;
.&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/flamenco.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/flamenco.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Flamenco group
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/group.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;4032x3024&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/group.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Cover songs
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Flamenco and Party&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I left with a few other attendees around midnight, going on a quest to find
&lt;a href=&#34;https://en.wikipedia.org/wiki/Tapas&#34;&gt;Tapas&lt;/a&gt; &lt;span class=&#34;emoji&#34;&gt;:fried_shrimp:&lt;/span&gt;
&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I think I&amp;rsquo;ve said it in the first part of the article but the conference
&lt;em&gt;felt very comfortable&lt;/em&gt; and &lt;strong&gt;&lt;em&gt;almost like a local conference&lt;/em&gt;&lt;/strong&gt;, despite the
number of people from abroad and the &lt;em&gt;awesome speakers&lt;/em&gt;.&lt;br /&gt;
It was then really easy to speak to people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks a lot to the organizers, speakers and other attendees for the great
event.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And thanks a lot to &lt;a href=&#34;http://www.monkeypatch.io/&#34;&gt;MonkeyPatch&lt;/a&gt;&lt;/strong&gt; (the company
I work for) &lt;strong&gt;for paying and allowing me to attend a conference in Malaga!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On a side note, I&amp;rsquo;d like to apologize for the length of this article.&lt;br /&gt;
It took me &lt;strong&gt;&lt;em&gt;way too long&lt;/em&gt;&lt;/strong&gt; to write this review and if you made it thus far,
you&amp;rsquo;re a hero.&lt;/p&gt;

&lt;p&gt;I really wanted to highlight the content of each talk and it took me researches
and learning to give it back.&lt;br /&gt;
I hope you enjoyed nonetheless. I don&amp;rsquo;t know if or how I will split my next
conference review because I&amp;rsquo;m still new in this field, but there will be more
content on most of the topics covered here in future blog posts.&lt;/p&gt;

&lt;p&gt;Thanks for reading, see you &lt;span class=&#34;emoji&#34;&gt;:wave:&lt;/span&gt;
&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2017-review/venue2.jpg&#34; alt=&#34;Leaving the conference&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Leaving&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;h2 id=&#34;bonus-track-the-computer-science-behind-a-modern-distributed-data-store&#34;&gt;Bonus track: The Computer Science behind a modern distributed data store&lt;/h2&gt;

&lt;p&gt;By &lt;a href=&#34;https://twitter.com/neunhoef&#34;&gt;Max Neunhöffer&lt;/a&gt; from
&lt;a href=&#34;https://www.arangodb.com/&#34;&gt;ArangoDB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve talked &lt;em&gt;multiple times&lt;/em&gt; with Max during the three days of the conference
and &lt;em&gt;didn&amp;rsquo;t even know he was a speaker until the last day&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve watched his talk later on Youtube and I&amp;rsquo;ve found it really interesting
to get a sense of some &lt;em&gt;major problems&lt;/em&gt; one can experience while learning about
or working on &lt;em&gt;distributed systems&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It goes fast so if you are not familiar with distributed systems problems
such as
&lt;a href=&#34;https://en.wikipedia.org/wiki/Consensus_(computer_science)&#34;&gt;&lt;em&gt;consensus&lt;/em&gt;&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Log-structured_merge-tree&#34;&gt;&lt;em&gt;log structured merge trees&lt;/em&gt;&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Clock_synchronization&#34;&gt;&lt;em&gt;clocks&lt;/em&gt;&lt;/a&gt; and
&lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_transaction&#34;&gt;&lt;em&gt;distributed ACID transactions&lt;/em&gt;&lt;/a&gt;
you will find a &lt;strong&gt;lot&lt;/strong&gt; of useful information in order to learn more about
these topics.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/m9xYejDUdus&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>J On The Beach 2017 — Jepsen Workshop</title>
      <link>http://i-rant.arnaudbos.com/j-on-the-beach-jepsen-workshop/</link>
      <pubDate>Mon, 07 Aug 2017 16:23:04 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/j-on-the-beach-jepsen-workshop/</guid>
      <description>

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-jepsen-workshop/-012.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;900x675&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-jepsen-workshop/-012.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Network&amp;#39;s Laggy
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-jepsen-workshop/-013.jpg&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;900x675&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/j-on-the-beach-jepsen-workshop/-013.jpg&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;395&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Store it maybe
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Photos shamelessly stolen from Kyle Kinsburry&amp;#39;s website&lt;/div&gt;
&lt;/div&gt;


&lt;hr /&gt;

&lt;p&gt;The first book I&amp;rsquo;ve read about distributed systems was
&lt;a href=&#34;https://www.amazon.fr/Distributed-Systems-Principles-Andrew-Tanenbaum/dp/0132392275&#34;&gt;Distributed Systems: Principles and Paradigms&lt;/a&gt;
by Andrew S. Tanenbaum and Maarten van Steen.&lt;br /&gt;
I was reading at the library on my last year of study and I remember being
confused very often, and to be honest I didn&amp;rsquo;t even finish it&amp;hellip;&lt;/p&gt;

&lt;p&gt;By the end of 2013 or beginning of 2014, I progressively started to regain
interest in distributed systems after having been distracted by programming
on mobile devices for a while.&lt;/p&gt;

&lt;p&gt;At that time, something appeared on my radar, it was named
&lt;a href=&#34;http://jepsen.io/&#34;&gt;Jepsen&lt;/a&gt;, and this year I&amp;rsquo;ve had the chance to finally give
it a try by myself by attending &lt;a href=&#34;../j-on-the-beach-malaga-2017-review&#34;&gt;J On The Beach&lt;/a&gt;
and its Jepsen workshop animated by no one else than the author:
&lt;a href=&#34;https://aphyr.com/&#34;&gt;Kyle Kingsbury&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h1&gt;

&lt;div id=&#34;toc&#34; class=&#34;well col-md-12&#34;&gt;
  &lt;!-- toc --&gt;
&lt;/div&gt;

&lt;h1 id=&#34;j-on-the-beach-day-1-jepsen-workshop&#34;&gt;J On The Beach Day 1: Jepsen Workshop&lt;/h1&gt;

&lt;p&gt;After a warm welcome and a handshake, &lt;a href=&#34;https://aphyr.com/&#34;&gt;Kyle Kingsbury&lt;/a&gt;
started introducing &lt;a href=&#34;https://clojure.org/&#34;&gt;Clojure&lt;/a&gt; for a brief moment:
the syntax, data structures literals and the immutability part,
just enough to be able to follow the hands-on part of the workshop.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Let&amp;#39;s get @JOTB17 started! &lt;a href=&#34;https://twitter.com/aphyr?ref_src=twsrc%5Etfw&#34;&gt;@aphyr&lt;/a&gt; introducing &lt;a href=&#34;https://twitter.com/hashtag/Clojure?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Clojure&lt;/a&gt; for the &lt;a href=&#34;https://twitter.com/hashtag/Jepsen?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Jepsen&lt;/a&gt; workshop! &lt;a href=&#34;https://t.co/c4M7SXhCR3&#34;&gt;pic.twitter.com/c4M7SXhCR3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Arnaud Bos (@arnaud_bos) &lt;a href=&#34;https://twitter.com/arnaud_bos/status/864748353489428481?ref_src=twsrc%5Etfw&#34;&gt;May 17, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;It&amp;rsquo;s true that Clojure might be disturbing at first glance, like any new
programming language&amp;rsquo;s syntax.&lt;br /&gt;
If you&amp;rsquo;re interested in learning Clojure (you should), Kyle&amp;rsquo;s blogpost series
&lt;a href=&#34;https://aphyr.com/tags/Clojure-from-the-ground-up&#34;&gt;Clojure from the ground up&lt;/a&gt;
and Daniel Higginbotham&amp;rsquo;s &lt;a href=&#34;http://www.braveclojure.com/clojure-for-the-brave-and-true/&#34;&gt;Clojure for the Brave and True&lt;/a&gt;
are really great resources before you go into more in-depths topics with
&lt;a href=&#34;http://www.joyofclojure.com/&#34;&gt;The Joy of Clojure&lt;/a&gt; for instance.&lt;/p&gt;

&lt;p&gt;After this quick &lt;em&gt;aperitivo&lt;/em&gt;, Kyle gave us an overview of &lt;a href=&#34;https://github.com/jepsen-io/jepsen#design-overview&#34;&gt;Jepsen&amp;rsquo;s design and core concepts&lt;/a&gt;, namely:
Operations, Generators, Clients, Nemesis, History and Checkers (and Models)
which, combined together and executed, form a Jepsen Test.
So what is &lt;a href=&#34;http://jepsen.io/&#34;&gt;Jepsen&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;I think Kyle started from an observation that lots of people agree about:
Testing distributed systems is hard. So after an argument about a consistency
issue, he went and implemented a tool to introduce failure in systems and
check the outcome.&lt;/p&gt;

&lt;p&gt;Starting from READMEs and gut feelings, he begun to create a battery of tests
for some of the best know distributed databases and key-value stores &amp;ldquo;we&amp;rdquo; use,
and found &lt;a href=&#34;https://aphyr.com/tags/jepsen&#34;&gt;disturbances in the force&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;He found complex errors lying into the heart of some of the softwares we use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you talk with Kyle, he makes it really clear that he&amp;rsquo;s not blaming vendors
for introducing bugs and is not implying that they are intentionally hiding
faults in their systems, but they can omit details or make assumptions or
simply not test every corner case.&lt;/p&gt;

&lt;p&gt;Jepsen is meant to do &lt;strong&gt;&lt;em&gt;simulation testing&lt;/em&gt;&lt;/strong&gt; (see other
&lt;a href=&#34;http://queue.acm.org/detail.cfm?id=2889274&#34;&gt;system testing methods&lt;/a&gt;) on
distributed systems such as databases, distributed caches, etc., finding
real/production errors, not theoretical ones.&lt;/p&gt;

&lt;p&gt;Starting to think about
&lt;a href=&#34;https://github.com/Netflix/SimianArmy&#34;&gt;Netflix&amp;rsquo;s Chaos Monkey/Simian Army&lt;/a&gt;?&lt;br /&gt;
Close enough.&lt;br /&gt;
The &lt;a href=&#34;https://github.com/Netflix/SimianArmy&#34;&gt;Simian Army&lt;/a&gt; is a suite of
&lt;strong&gt;&lt;em&gt;fault-injection&lt;/em&gt;&lt;/strong&gt; tools meant to introduce &lt;em&gt;catastrophic errors&lt;/em&gt; by
terminating nodes/regions or introducing &lt;em&gt;network instability&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;While Jepsen can also inject this kind of faults, it is more concerned about
&lt;strong&gt;&lt;em&gt;correctness&lt;/em&gt;&lt;/strong&gt; than &lt;strong&gt;&lt;em&gt;availability&lt;/em&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;em&gt;latency&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;how-does-it-work&#34;&gt;How does it work?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jepsen-io/jepsen&#34;&gt;Jepsen&lt;/a&gt; is designed to run as a
&lt;strong&gt;cluster&lt;/strong&gt;: the number of nodes is parametrizable but it seems 3 to 5 nodes
are usually enough to reproduce and/or detect &lt;em&gt;catastrophic errors&lt;/em&gt;
(&lt;a href=&#34;https://www.usenix.org/conference/osdi14/technical-sessions/presentation/yuan&#34;&gt;source&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;One of the nodes is the &lt;strong&gt;control node&lt;/strong&gt;, which is responsible for logging
into the other nodes via &lt;code&gt;SSH&lt;/code&gt; and &lt;em&gt;execute&lt;/em&gt; the tests.&lt;br /&gt;
The other nodes will ship the software at test and execute the operations.&lt;/p&gt;

&lt;p&gt;As said in the github&amp;rsquo;s page:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Once the system is running, the control node spins up a set of logically
single-threaded processes, each with its own client for the distributed system.
A generator generates new operations for each process to perform. Processes
then apply those operations to the system using their clients. The start and
end of each operation is recorded in a history. While performing operations,
a special nemesis process introduces faults into the system&amp;ndash;also scheduled
by the generator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The point of having single-threaded processes is to avoid unnecessary
complexity on the testing side, in order to make the work of the &lt;em&gt;checker&lt;/em&gt;,
which will analyze the &lt;em&gt;history&lt;/em&gt;, more manageable.&lt;/p&gt;

&lt;h2 id=&#34;operation&#34;&gt;Operation&lt;/h2&gt;

&lt;p&gt;An operation is an abstract representation, a common language
(a data structure) to express a function invocation onto the system at test.&lt;/p&gt;

&lt;p&gt;Stripping the details of the &lt;code&gt;clojure&lt;/code&gt; implementation, here are examples of
operations (think JSON documents, JavaScript Objects, Java HashMaps,
Python Dictionaries, whatever seems familiar to you):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;;; a read: we don&#39;t know what value we&#39;ll read from the system yes so value is &#39;nil
{:type :invoke, :f :read, :value nil}

;; a write of an integer that will be performed on the system
{:type :invoke, :f :write, :value (rand-int 5)}

;; a compare-and-set of an old integer and a new integer value
{:type :invoke, :f :cas, :value [(rand-int 5) (rand-int 5)]}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These operations are &lt;em&gt;&lt;code&gt;invocation operations&lt;/code&gt;&lt;/em&gt;, they just describe a bunch of
types of operations for the &lt;em&gt;clients&lt;/em&gt; to perform.&lt;/p&gt;

&lt;p&gt;It is the &lt;em&gt;generator&lt;/em&gt;&amp;rsquo;s job to actually generate a few operations and then let
the &lt;em&gt;clients&lt;/em&gt; performs the operations and return &lt;em&gt;&lt;code&gt;completion operations&lt;/code&gt;&lt;/em&gt;
(with the read value specified for instance).&lt;/p&gt;

&lt;h2 id=&#34;client&#34;&gt;Client&lt;/h2&gt;

&lt;p&gt;A client is an implementation of the types of function invocations you want to
perform onto the system.&lt;/p&gt;

&lt;p&gt;Given the three &lt;em&gt;operations&lt;/em&gt; above, one must implement a &lt;code&gt;clojure protocol&lt;/code&gt;
(think Java interface, but better) in order to actually perform the operation,
for instance implementing a write of an integer to the database you are
willing to test, using your SDK/library of choice.&lt;/p&gt;

&lt;h2 id=&#34;generator&#34;&gt;Generator&lt;/h2&gt;

&lt;p&gt;Generators are more sophisticated beast from my little understanding. While an
&lt;em&gt;invocation operation&lt;/em&gt; is a kind of template of an operation to be performed,
a generator is responsible for creating more of them. Without giving you all
the options available, I can tell that a generator can be configured to
construct new &lt;em&gt;&lt;code&gt;invocation operations&lt;/code&gt;&lt;/em&gt; for a certain type (read for instance)
or a mix (a mix of read and writes, or a mix of read, writes and
compare-and-set).&lt;br /&gt;
Other parameters include the ability to stagger operations by a certain amount
of time, impose a time limit for performing operations, etc.&lt;/p&gt;

&lt;h2 id=&#34;nemesis&#34;&gt;Nemesis&lt;/h2&gt;

&lt;p&gt;A nemesis is our chaos monkey: it will introduce failures, such as network
partitions, and heal them back.&lt;/p&gt;

&lt;p&gt;Nemesis operations are also constructed by the generator, to which we can
specify an order of execution, such as a cycling: sleep operation, start
operation (introduce a failure), sleep operation (hoping some client operation
will fail) and then stop operation (end the failure).&lt;/p&gt;

&lt;h2 id=&#34;pizza-beers-chit-chat&#34;&gt;Pizza + beers + chit-chat&lt;/h2&gt;

&lt;p&gt;That was the content of the workshop for the morning, and it went &lt;em&gt;fast&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For lunch, the organizers at JOTB had planned on-demand pizzas and beer. It was
also the occasion to discover the backyard of the venue under a bright sky.&lt;/p&gt;

&lt;p&gt;I sat at a table with Kyle and other trainees and chitchatted about
&lt;a href=&#34;http://jepsen.io/analyses&#34;&gt;Jepsen analyses&lt;/a&gt; and systems that other attendees
were interested in testing.&lt;br /&gt;
We also talked about Clojure and languages but mostly the discussion focused on
Kyle&amp;rsquo;s work/studies, how he funded his researches and how he approached (or
was being approached by) databases or other softwares vendors in order to
improve their product/communicate about its robustness/bugfixes.&lt;/p&gt;

&lt;p&gt;And then back to work.&lt;/p&gt;

&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;With our generator and clients performing operations, we&amp;rsquo;ve got a history
to analyze for correctness.
&lt;a href=&#34;https://github.com/jepsen-io/jepsen/blob/master/doc/checker.md&#34;&gt;Jepsen etcdemo - checker&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The history is not directly exposed to you as a test designer, but it is
necessary to verify the results of the operations.&lt;br /&gt;
Under the hood I suppose (I haven&amp;rsquo;t checked yet) that Jepsen stores the history
in some way as a collection of every &lt;em&gt;completed operations&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This history is then used by the &lt;em&gt;checker&lt;/em&gt; in order to verify correctness
between what the systems said it did and what it actually did.&lt;/p&gt;

&lt;p&gt;Jepsen also uses the history to generate a set of graphs.&lt;/p&gt;

&lt;h2 id=&#34;checker&#34;&gt;Checker&lt;/h2&gt;

&lt;p&gt;Now, this history is not going to analyze itself. This is the role of the
checker, whose job it is to reorder the calls/results from all the clients
and confront the history to a model.&lt;/p&gt;

&lt;p&gt;When a client writes a value and gets back an acknowledgement of the write, the
system&amp;rsquo;s log is checked to see if the database actually performed the write.&lt;/p&gt;

&lt;h2 id=&#34;model&#34;&gt;Model&lt;/h2&gt;

&lt;p&gt;A model is an abstraction on top of the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Linearizability&#34;&gt;&lt;strong&gt;&lt;em&gt;linearizability&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; concept.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not easy to defined linearizability, I&amp;rsquo;ve had to read and watch so many
resources to try to understand that I can&amp;rsquo;t count them, and in the end I&amp;rsquo;m not
sure I understand it well.&lt;/p&gt;

&lt;p&gt;Linearizability is a type of consistency among others (eventual consistency,
causality linearizability, strong linearizability, etc).&lt;/p&gt;

&lt;p&gt;In short, and probably not fully exact: when a new value for a certain key
has been written (successfully), no previous value for this key should be read
ever, and every subsequent read should return the same value unless another
successful write is performed.&lt;/p&gt;

&lt;p&gt;Now, Jepsen uses &lt;a href=&#34;https://github.com/jepsen-io/knossos&#34;&gt;Knossos&lt;/a&gt; under the hood
to build a singlethreaded model that is holding the history of operations and
results, and by reducing (I guess, but it&amp;rsquo;s an implementation detail) over the
operations, analyses the state to find illegal state transitions.&lt;/p&gt;

&lt;h2 id=&#34;q-a&#34;&gt;Q/A&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;How do you find a bug?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As Kyle explained, he generally started by reading the READMEs and
documentations of the systems he wanted to evaluate.&lt;/p&gt;

&lt;p&gt;Then it&amp;rsquo;s a mix of gut feeling and experience that leads him toward testing
a feature or another, and apply different types of failures to the system.&lt;/p&gt;

&lt;p&gt;In the end what is important is that Jepsen is a tool that enables anyone to
test the softwares it uses and make informed choices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How long does it take?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I honestly can&amp;rsquo;t remember the answer to this question and I did not write it
in my notes. So maybe someone (a fellow trainee, a reviewer) can fill-in this
gap?&lt;/p&gt;

&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap-up&lt;/h1&gt;

&lt;p&gt;This workshop is usually done in two days so keeping up with the fast coding
pace and trying to fit all the concepts and information in my head in a
single day was hard.&lt;br /&gt;
And by &amp;ldquo;hard&amp;rdquo; I don&amp;rsquo;t mean &lt;em&gt;painful&lt;/em&gt;, but &lt;em&gt;exhausting&lt;/em&gt;. It was actually
pleasant, and Kyle is a &lt;strong&gt;&lt;em&gt;fantastic&lt;/em&gt;&lt;/strong&gt; teacher: he is funny and he really
cares.
Nonetheless, I&amp;rsquo;m pretty sure I wasn&amp;rsquo;t the only one in the room feeling really
tired at the end of the day, so I took a long walk
(by the beach &lt;span class=&#34;emoji&#34;&gt;:sunglasses:&lt;/span&gt;
) in order to clear my mind.&lt;/p&gt;

&lt;p&gt;If you want to know more about Jepsen, and learn more about distributed systems
in general (which is my case), you can follow the etcdemo guide by yourself
at home, but if you have the possibility to attend one of Kyle&amp;rsquo;s workshop,
don&amp;rsquo;t hesitate, he really &lt;em&gt;knows his stuff&lt;/em&gt; and he is a &lt;em&gt;fantastic person&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2D Transformations with Android and Java</title>
      <link>http://i-rant.arnaudbos.com/2d-transformations-android-java/</link>
      <pubDate>Tue, 07 Feb 2017 02:30:04 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/2d-transformations-android-java/</guid>
      <description>

&lt;p&gt;I my previous post, &lt;a href=&#34;../matrices-for-developers&#34;&gt;&amp;ldquo;Matrices for developers&amp;rdquo;&lt;/a&gt;, I&amp;rsquo;ve
talked about matrices and how they can be used to compute 2D transformations.&lt;/p&gt;

&lt;p&gt;In this post, I want to talk about how to apply what we know about matrices
in order to perform 2D transformations, first using Java AWT and then with the
Android SDK.&lt;/p&gt;

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h2&gt;

&lt;div id=&#34;toc&#34; class=&#34;well col-md-12&#34;&gt;
  &lt;!-- toc --&gt;
&lt;/div&gt;

&lt;h2 id=&#34;affine-transformations-with-java&#34;&gt;Affine transformations with Java&lt;/h2&gt;

&lt;p&gt;When I was working on the project I mentioned at the beginning of the previous
article, I was constantly moving back and forth between the
&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/awt/geom/AffineTransform.html&#34;&gt;JDK&amp;rsquo;s implementation of affine transformations&lt;/a&gt; and the
&lt;a href=&#34;https://developer.android.com/reference/android/graphics/Matrix.html&#34;&gt;Android SDK&amp;rsquo;s implementation of matrices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I find the &lt;code&gt;java.awt.geom.AffineTransform&lt;/code&gt; class fairly well featured,
but it is a bit ambiguous. Fortunately, the documentation is
good, it&amp;rsquo;s not perfect but at least it&amp;rsquo;s better than Android&amp;rsquo;s one on this
topic as we shall see later.&lt;/p&gt;

&lt;p&gt;The Javadoc starts with a reminder of what are 2D affine transformations and a
matrix multiplication pattern to transform coordinates.&lt;/p&gt;

&lt;div&gt;
$$
\begin{bmatrix}
x^{\prime}\\
y^{\prime}\\
1
\end{bmatrix}
=
\begin{bmatrix}
m_{00} &amp; m_{01} &amp; m_{02}\\
m_{10} &amp; m_{11} &amp; m_{12}\\
0 &amp; 0 &amp; 1
\end{bmatrix}
.
\begin{bmatrix}
x\\
y\\
1
\end{bmatrix}
=
\begin{bmatrix}
m_{00} . x + m_{01} . y + m_{02}\\
m_{10} . x + m_{11} . y + m_{12}\\
1
\end{bmatrix}
$$
&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s neat, you have to appreciate the effort there (I mean, is your
Javadoc that great? &lt;span class=&#34;emoji&#34;&gt;:innocent:&lt;/span&gt;
),
and Android&amp;rsquo;s Javadoc doesn&amp;rsquo;t have it so&amp;hellip;&lt;/p&gt;

&lt;p&gt;The way this pattern is written lets us see a glimpse of implementation details,
right? Those $m_{00}$, $m_{01}$ and etc, they (not so) strangely resemble
stringified versions of indexes in a two-dimensional array.&lt;/p&gt;

&lt;h3 id=&#34;ambiguous-part-1&#34;&gt;Ambiguous — Part 1&lt;/h3&gt;

&lt;p&gt;So what is &lt;em&gt;&amp;ldquo;ambiguous&amp;rdquo;&lt;/em&gt; with this class? Granted it might be a matter of taste,
but if you look at the constructor
&lt;code&gt;AffineTransform(m00, m10, m01, m11, m02, m12)&lt;/code&gt; and the method
&lt;code&gt;setTransform(m00, m10, m01, m11, m02, m12)&lt;/code&gt;, they only take 6 input
parameters although the transformation matrices are $3 \times 3$ dimensions
matrices: they have 9 entries.&lt;/p&gt;

&lt;p&gt;While it makes perfectly sense to not take as inputs parameters that are fixed
in the context of 2D affine transformations (&lt;code&gt;0, 0, 1&lt;/code&gt;), I find it disturbing.&lt;/p&gt;

&lt;p&gt;More disturbing perhaps, is the ordering of those parameters.&lt;/p&gt;

&lt;p&gt;If you make the parallel between those and our $a_{11}$, $a_{12}$, etc. from
the previous post, you can notice that the reading direction is not the same.&lt;br /&gt;
With $a_{11}$, $a_{12}$, etc., we used to read more &lt;em&gt;&amp;ldquo;naturally&amp;rdquo;&lt;/em&gt; I would say,
like normal english written text: line by line.&lt;br /&gt;
Whereas $m_{00}$, $m_{10}$, etc. is reading the matrix column by column.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not saying one is better than the other, just that I&amp;rsquo;m more familiar with
the first one, and that it&amp;rsquo;s worth pointing at it to clarify the use of this
class. Because the &lt;code&gt;getMatrix(flatmatrix)&lt;/code&gt; method will fill in an
array containing the entries of the matrix in that specific order.&lt;br /&gt;
Also, &lt;code&gt;getMatrix&lt;/code&gt; &lt;em&gt;&amp;ldquo;Retrieves the 6 specifiable values in the $3 \times 3$
affine transformation matrix&amp;rdquo;&lt;/em&gt;, which means it will only give you those
$m_{00}$, $m_{10}$, etc., entries, not the ones from the third row.&lt;/p&gt;

&lt;h3 id=&#34;well-featured-but-not-that-much&#34;&gt;Well featured but not that much&lt;/h3&gt;

&lt;p&gt;To understand what I mean, let&amp;rsquo;s try to execute the kind of transformations we
have seen throughout the first part of this series.&lt;/p&gt;

&lt;h5&gt;1. Can we translate?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;translate(tx, ty)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates this transform with a translation transformation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We&amp;rsquo;ll see what &amp;ldquo;concatenates&amp;rdquo; means in this context in a moment, for now what
we understand is that we have a method to apply a translation transformation.&lt;/p&gt;

&lt;h5&gt;2. Can we shear?&lt;/h5&gt;

&lt;p&gt;Yes, but only by constants, not by angles, we have &lt;code&gt;shear(shx, shy)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates this transform with a shearing transformation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;3. Can we scale?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;scale(sx, sy)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates this transform with a scaling transformation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;4. Can we reflect?&lt;/h5&gt;

&lt;p&gt;Not directly, at least I don&amp;rsquo;t see anything doing a reflexion directly, so we
either have to scale by negative values, or to use
&lt;code&gt;setTransform(-1, 0, 0, -1, 0, 0)&lt;/code&gt; (for example) manually and then
&lt;code&gt;concatenate&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;5. Can we rotate?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;rotate(theta)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates this transform with a rotation transformation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Beware: &lt;code&gt;theta&lt;/code&gt; here is in radians, not in degrees.&lt;/p&gt;

&lt;h5&gt;6. Can we scale on an anchor point?&lt;/h5&gt;

&lt;p&gt;No. You will have to compose your transformation as we&amp;rsquo;ve done it &amp;ldquo;by hand&amp;rdquo;
above, with a combination of &lt;code&gt;scale(sx, sy)&lt;/code&gt; and &lt;code&gt;translate(tx, ty)&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;7. Can we rotate around an anchor point?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;rotate(theta, anchorx, anchory)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates this transform with a transform that rotates coordinates around
an anchor point.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;8. Can we transform points?&lt;/h5&gt;

&lt;p&gt;Yes! We have several methods available in order to transform points (even
shapes) from their original position to their new coordinates after the
transformation has been applied.&lt;/p&gt;

&lt;h5&gt;Why am I not happy with this?&lt;/h5&gt;

&lt;p&gt;I am, actually, and there are more methods that allow you to do interesting
stuff with this class.&lt;br /&gt;
I&amp;rsquo;m just wondering why they decided to implement
&lt;code&gt;rotate(theta, anchorx, anchory)&lt;/code&gt; but not
&lt;code&gt;scale(sx, sy, anchorx, anchory)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On the other hand, all the methods I&amp;rsquo;ve outlined above are quite opinionated.
Why? Because they assume that what you want to do is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates this transform with a transformation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An that&amp;rsquo;s where bad stuff happen.&lt;/p&gt;

&lt;h3 id=&#34;ambiguous-part-2&#34;&gt;Ambiguous — Part 2&lt;/h3&gt;

&lt;p&gt;All the transformations we&amp;rsquo;ve seen in my previous post about matrices are
defined this way:&lt;/p&gt;

&lt;div&gt;
$$
P^{\prime} = \mathbf{T}.P
$$
&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$P$ is a point&lt;/li&gt;
&lt;li&gt;$P^{\prime}$ is the point where $P$ will land after the transformation
has been applied&lt;/li&gt;
&lt;li&gt;$\mathbf{T}$ is a transformation matrix&lt;/li&gt;
&lt;li&gt;$\mathbf{T}$ is the product of many transformation matrices, applied
in the reverse order: that is for transforming by $\mathbf{A}$, then
$\mathbf{B}$, then $\mathbf{C}$ we have
$\mathbf{T} = \mathbf{C} . \mathbf{B} . \mathbf{A} $, and reciprocally.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, look at the definition of the
&lt;code&gt;concatenate(AffineTransform Tx)&lt;/code&gt; method:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Concatenates an AffineTransform Tx to this AffineTransform Cx in the most commonly useful way to provide a new user space that is mapped to the former user space by Tx. Cx is updated to perform the combined transformation. Transforming a point p by the updated transform Cx&amp;rsquo; is equivalent to first transforming p by Tx and then transforming the result by the original transform Cx like this: Cx&amp;rsquo;(p) = Cx(Tx(p)) In matrix notation, if this transform Cx is represented by the matrix &lt;strong&gt;[this&lt;/strong&gt;] and Tx is represented by the matrix &lt;strong&gt;[Tx&lt;/strong&gt;] then this method does the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[this&lt;/strong&gt;] = &lt;strong&gt;[this&lt;/strong&gt;] x &lt;strong&gt;[Tx&lt;/strong&gt;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our notation this gives that for transforming by $\mathbf{A}$, then
$\mathbf{B}$, then $\mathbf{C}$ we have:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\mathbf{this} &amp;=
\left( \left( \mathbf{this} . \mathbf{A} \right) . \mathbf{B} \right) . \mathbf{C}\\\\
\Leftrightarrow
\mathbf{this} &amp;= \mathbf{this} . \mathbf{Tx}
\text{ where }
\mathbf{Tx} = \mathbf{A} . \mathbf{B} . \mathbf{C}
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;This is very different than:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{this} = \mathbf{Tx} . \mathbf{this}
\text{ where }
\mathbf{Tx} = \mathbf{A} . \mathbf{B} . \mathbf{C}
$$
&lt;/div&gt;

&lt;p&gt;Because matrix multiplication is &lt;code&gt;associative&lt;/code&gt;,
&lt;a href=&#34;../matrices-for-developers&#34;&gt;remember&lt;/a&gt;?&lt;br /&gt;
But matrix multiplication is &lt;em&gt;also&lt;/em&gt; &lt;code&gt;non-commutative&lt;/code&gt;, so this will lead to
very different results than what you might expect!&lt;/p&gt;

&lt;p&gt;The good news: there&amp;rsquo;s a method &lt;code&gt;preConcatenate(AffineTransform Tx)&lt;/code&gt; that does
what we want:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;[this&lt;/strong&gt;] = &lt;strong&gt;[Tx&lt;/strong&gt;] x &lt;strong&gt;[this&lt;/strong&gt;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The bad news: you won&amp;rsquo;t be able to represent your transformations with the
built-in &lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt; as is. Because they don&amp;rsquo;t behave the
way you think: they all fall down to the &lt;code&gt;concatenate&lt;/code&gt; method.&lt;br /&gt;
At least they don&amp;rsquo;t behave the way &lt;strong&gt;&lt;em&gt;I&lt;/em&gt;&lt;/strong&gt; think about transformations, which is
the one I&amp;rsquo;ve described in my post about matrices.&lt;/p&gt;

&lt;p&gt;Honestly, I don&amp;rsquo;t know what the Javadoc means by &lt;em&gt;&amp;ldquo;in the most commonly useful
way to provide a new user space&amp;rdquo;&lt;/em&gt;. I&amp;rsquo;m sure it makes sense for some, but I
don&amp;rsquo;t get it.&lt;/p&gt;

&lt;p&gt;So how do we use the &lt;code&gt;AffineTransform&lt;/code&gt; class to chain our transformations the
way we want?&lt;br /&gt;
Fortunately, the class provides us with a bunch of useful static methods that
return new matrices that are ready to use and can be combined by using the
&lt;code&gt;preConcatenate&lt;/code&gt; method:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AffineTransform.getTranslateInstance(tx, ty)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AffineTransform.getRotateInstance(theta)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AffineTransform.getScaleInstance(sx, sy)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AffineTransform.getShearInstance(shx, shy)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;demo&#34;&gt;Demo&lt;/h3&gt;

&lt;p&gt;Performance aside, here&amp;rsquo;s a class that will 2x zoom at the center of a
rectangle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.arnaudbos.java2d;
// imports stripped

public class AffineTransformZoomExample {
    // code stripped

    private static class ZoomCanvas extends JComponent {

        public void paint(Graphics g) {
            Graphics2D ourGraphics = (Graphics2D) g;

            // code stripped

            // Draw initial object
            ourGraphics.setColor(Color.black);
            ourGraphics.drawRect(100, 100, 100, 100);

            // Create matrix (set to identity by default)
            AffineTransform tx = new AffineTransform();

            // This is not the transformation you&#39;re looking for
            tx.translate(-150, -150);
            tx.scale(2, 2);
            tx.translate(150, 150);
            ourGraphics.setTransform(tx);
            ourGraphics.setColor(Color.red);
            ourGraphics.drawRect(100, 100, 100, 100);

            // Reset matrix to identity to clear previous transformations
            tx.setToIdentity();

            // Apply our transformations in order to zoom-in the square
            tx.preConcatenate(AffineTransform.getTranslateInstance(-150, -150));
            tx.preConcatenate(AffineTransform.getScaleInstance(2, 2));
            tx.preConcatenate(AffineTransform.getTranslateInstance(150, 150));
            ourGraphics.setTransform(tx);
            ourGraphics.setColor(Color.green);
            ourGraphics.drawRect(100, 100, 100, 100);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/java-zoom-at-center.png&#34; alt=&#34;Demo of Java 2D zooming&#34;
            width=&#34;80%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Demo of Java 2D zooming: the original square (black), the unexpected transformation (red) and the desired transformation (green)&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;You can
&lt;a href=&#34;http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/9b8c96f96a0f/src/share/classes/java/awt/geom/AffineTransform.java&#34;&gt;browse the source of java.awt.geom.AffineTransform&lt;/a&gt;
if you&amp;rsquo;re interested, you&amp;rsquo;ll see all the matrix multiplications performed
the same way as we&amp;rsquo;ve seen in my previous post.&lt;/p&gt;

&lt;p&gt;As you can see, &lt;code&gt;translate&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; which use &lt;code&gt;concatenate&lt;/code&gt;
(aka. &amp;ldquo;post&amp;rdquo;-concatenate) under the hood, don&amp;rsquo;t give the result we might
expect.&lt;br /&gt;
On the other hand, manually using &lt;code&gt;preConcatenate&lt;/code&gt; and &lt;code&gt;get...Instance&lt;/code&gt;, will.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s see how this works on Android.&lt;/p&gt;

&lt;h2 id=&#34;affine-transformations-with-android&#34;&gt;Affine transformations with Android&lt;/h2&gt;

&lt;p&gt;Unlike Oracle, Google&amp;rsquo;s &lt;code&gt;android.graphics.Matrix&lt;/code&gt; class assumes you already
know your way around matrices. There&amp;rsquo;s no reminders, no details about matrices,
no explanations. And the source code will help but is a little more tricky
to unroll.&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&#34;https://android.googlesource.com/platform/frameworks/base/+/master/graphics/java/android/graphics/Matrix.java&#34;&gt;browse the source of android.graphics.Matrix&lt;/a&gt; and
notice a lot of &lt;code&gt;oops();&lt;/code&gt; method calls and &lt;code&gt;native_&lt;/code&gt; invocations but nothing
really helpful.&lt;br /&gt;
The java &lt;code&gt;Matrix&lt;/code&gt; class is in fact a proxy to the underlying &lt;code&gt;JNI&lt;/code&gt;
implementation of matrix operations. The real operations are done by the C++
&lt;code&gt;Matrix&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;You can find the interface (&lt;code&gt;Matrix.h&lt;/code&gt;) &lt;a href=&#34;https://android.googlesource.com/platform/frameworks/base/+/master/core/jni/android/graphics/Matrix.h&#34;&gt;here&lt;/a&gt;
and implementation (&lt;code&gt;Matrix.cpp&lt;/code&gt;) &lt;a href=&#34;https://android.googlesource.com/platform/frameworks/base/+/master/core/jni/android/graphics/Matrix.cpp&#34;&gt;here&lt;/a&gt;. But this is just
another level of indirection because this class is just a facade on top of the
&lt;code&gt;SkMatrix&lt;/code&gt; dependency which does all the real work on matrix operations. The
interface (&lt;code&gt;SkMatrix.h&lt;/code&gt;) can be found &lt;a href=&#34;https://android.googlesource.com/platform/external/skia/+/master/include/core/SkMatrix.h&#34;&gt;here&lt;/a&gt; and the implementation
(&lt;code&gt;SkMatrix.cpp&lt;/code&gt;) can be found &lt;a href=&#34;https://android.googlesource.com/platform/external/skia/+/master/src/core/SkMatrix.cpp&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nonetheless, the API is good and well featured, as long as you understand a
few things.&lt;/p&gt;

&lt;h3 id=&#34;construction&#34;&gt;Construction&lt;/h3&gt;

&lt;p&gt;Unlike Java, Android provides ways of building matrices that seem more
explicit and straightforward to me.&lt;/p&gt;

&lt;p&gt;The first thing we see in the Javadoc is a bunch of constants that are used to
describe each entry in the matrix:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int MPERSP_0 = 6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MPERSP_1 = 7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MPERSP_2 = 8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MSCALE_X = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MSCALE_Y = 4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MSKEW_X = 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MSKEW_Y = 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MTRANS_X = 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int MTRANS_Y = 5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Put this back ordered by their value and now look at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setValues(values)&lt;/code&gt;: &lt;em&gt;&amp;ldquo;Copy 9 values from the array into the matrix.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getValues(values)&lt;/code&gt;: &lt;em&gt;&amp;ldquo;Copy 9 values from the matrix into the array.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What we see here is, I think, a more explicit API than the Java one: you are
dealing with a 3x3 dimensions matrix, so you specify/retrieve the 9 entries
that this matrix is composed of.&lt;/p&gt;

&lt;p&gt;Granted Java&amp;rsquo;s &lt;code&gt;AffineTransform&lt;/code&gt; class is named this way for a reason, that
reason being you can only deal with &lt;strong&gt;affine transformations&lt;/strong&gt;. Whereas
Android&amp;rsquo;s &lt;code&gt;Matrix&lt;/code&gt; class can be used to represent projections by playing with
the &lt;code&gt;MPERSP_0&lt;/code&gt;, &lt;code&gt;MPERSP_1&lt;/code&gt; and &lt;code&gt;MPERSP_2&lt;/code&gt; entries (hence their names and the
&lt;code&gt;isAffine()&lt;/code&gt; method).&lt;/p&gt;

&lt;h3 id=&#34;well-featured&#34;&gt;Well featured&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s do it again.&lt;/p&gt;

&lt;h5&gt;1. Can we translate?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;preTranslate(dx, dy)&lt;/code&gt; and &lt;code&gt;postTranslate(dx, dy)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre/Post-concats the matrix with the specified translation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;2. Can we shear?&lt;/h5&gt;

&lt;p&gt;Yes, but only by constants not by angles, and it&amp;rsquo;s named &amp;ldquo;skew&amp;rdquo;.&lt;br /&gt;
We have &lt;code&gt;preSkew(kx, ky)&lt;/code&gt; and  &lt;code&gt;postSkew(kx, ky)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre/Post-concats the matrix with the specified skew.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We also have &lt;code&gt;preSkew(kx, ky, px, py)&lt;/code&gt; and &lt;code&gt;postSkew(kx, ky, px, py)&lt;/code&gt; in order
to skew not around the origin, by around a given anchor point. That&amp;rsquo;s nice.&lt;/p&gt;

&lt;h5&gt;3. Can we scale?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;preScale(sx, sy)&lt;/code&gt; and &lt;code&gt;postScale(sx, sy)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre/Post-concats the matrix with the specified scale.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;4. Can we reflect?&lt;/h5&gt;

&lt;p&gt;Again, not directly, we can scale by negative values, or we can use
&lt;code&gt;setValues({-1, 0, 0, 0, -1, 0, 0, 0, 1})&lt;/code&gt; (for example) and then
&lt;code&gt;postConcat&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;5. Can we rotate?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;preRotate(degrees)&lt;/code&gt; and &lt;code&gt;postRotate(degrees)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre/Post-concats the matrix with the specified rotation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;6. Can we scale on an anchor point?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;preScale(sx, sy, px, py)&lt;/code&gt; and &lt;code&gt;postScale(sx, sy, px, py)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre/Post-concats the matrix with the specified scale.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;7. Can we rotate around an anchor point?&lt;/h5&gt;

&lt;p&gt;Yes! We have &lt;code&gt;preRotate(degrees, px, py)&lt;/code&gt; and &lt;code&gt;postRotate(degrees, px, py)&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre-Post-concats the matrix with the specified rotation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;8. Can we transform points?&lt;/h5&gt;

&lt;p&gt;Also yes! We have several methods available in order to transform points and
shapes from their original position to their new coordinates after the
transformation has been applied.&lt;/p&gt;

&lt;h3 id=&#34;ambiguous&#34;&gt;Ambiguous&lt;/h3&gt;

&lt;p&gt;Yes, I like this word&amp;hellip;&lt;/p&gt;

&lt;p&gt;The API is undeniably well featured, provides &lt;code&gt;pre&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; methods for
the most common transformations, a &lt;code&gt;setValues&lt;/code&gt; method to create matrices of
any shape, and also &lt;code&gt;preConcat(Matrix other)&lt;/code&gt; and &lt;code&gt;postConcat(Matrix other)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What do they do?&lt;/p&gt;

&lt;h5&gt;preConcat&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;Preconcats the matrix with the specified matrix. M&amp;rsquo; = M * other&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, if I read correctly, this is equivalent to:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{this} = \mathbf{this} . \mathbf{Tx}
$$
&lt;/div&gt;

&lt;p&gt;Wait&amp;hellip; in Java&amp;rsquo;s &lt;code&gt;AffineTransform&lt;/code&gt;, this was the equivalent of the
&lt;code&gt;concatenate&lt;/code&gt; method&amp;hellip;&lt;/p&gt;

&lt;h5&gt;postConcat&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;Postconcats the matrix with the specified matrix. M&amp;rsquo; = other * M&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, if I read correctly, this is equivalent to:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{this} = \mathbf{Tx} . \mathbf{this}
$$
&lt;/div&gt;

&lt;p&gt;Wait&amp;hellip; in Java&amp;rsquo;s &lt;code&gt;AffineTransform&lt;/code&gt;, this was the equivalent of the
&lt;code&gt;preConcatenate&lt;/code&gt; method&amp;hellip;&lt;/p&gt;

&lt;h5&gt;WTF dude?&lt;/h5&gt;

&lt;p&gt;Exactly. If you don&amp;rsquo;t read the doc, &lt;strong&gt;you&amp;rsquo;re screwed&lt;/strong&gt;
&lt;span class=&#34;emoji&#34;&gt;:poop:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;So who&amp;rsquo;s right?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve searched a few minutes on the Interwebs and here&amp;rsquo;s what I&amp;rsquo;ve found
&lt;a href=&#34;https://en.wikipedia.org/wiki/Matrix_multiplication&#34;&gt;from Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;pre-multiply (or left multiply) $\mathbf{A}$ by $\mathbf{B}$&amp;rdquo; means
$\mathbf{B}.\mathbf{A}$,
while &amp;ldquo;post-multiply (or right multiply) $\mathbf{A}$ by $\mathbf{C}$&amp;rdquo;
means $\mathbf{A}.\mathbf{C}$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And because two sources are better than one, from
&lt;a href=&#34;http://web.cse.ohio-state.edu/~whmin/courses/cse5542-2013-spring/6-Transformation_II.pdf&#34;&gt;this &amp;ldquo;ohio-state&amp;rdquo; course&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre-multiplication is to multiply the new matrix $\mathbf{B}$ to the left
of the existing matrix $\mathbf{A}$ to get the result
$\mathbf{C} = \mathbf{B}.\mathbf{A}$&lt;/p&gt;

&lt;p&gt;Post-multiplication is to multiply the new matrix $\mathbf{B}$ to the right
of the existing matrix $\mathbf{A}$ to get the result
$\mathbf{C} = \mathbf{A}.\mathbf{B}$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So it seems like Sun/Oracle got it right, and Google got it backward. Which
seems weird&amp;hellip;&lt;br /&gt;
I&amp;rsquo;ve filled a bug report on the
&lt;a href=&#34;https://code.google.com/p/android/issues/detail?id=229852&amp;amp;q=matrix&amp;amp;colspec=ID%20Status%20Priority%20Owner%20Summary%20Stars%20Reporter%20Opened&#34;&gt;Android Open Source Project Issue Tracker&lt;/a&gt; in order to know if
&lt;strong&gt;I&lt;/strong&gt; missed something or if it&amp;rsquo;s a real issue.&lt;/p&gt;

&lt;p&gt;But it doesn&amp;rsquo;t solve our problem: we have to be cautious when applying affine
transformations, because the order matters!&lt;/p&gt;

&lt;p&gt;And because of the way we want to apply our transformations, in Android we&amp;rsquo;re
going to make use of the &lt;code&gt;post&lt;/code&gt; methods. But the &lt;code&gt;pre&lt;/code&gt; methods are here also
and will simplify your like if you need this kind of operations.&lt;/p&gt;

&lt;h3 id=&#34;demo-1&#34;&gt;Demo&lt;/h3&gt;

&lt;p&gt;Again, performance aside, here’s a class that will rotate the Grumpy cat:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.arnaudbos.android2d;
// imports stripped

public class MainActivity extends AppCompatActivity {
    // code stripped

    private enum MatrixConcatenation {
        PRE, POST
    }

    private static final float THETA = 30;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Display Grumpy cat
        Drawable d = getDrawable(R.drawable.grumpy);
        view = new ImageView(this);
        view.setImageDrawable(d);
        setContentView(view);

        // Center Grumpy cat
        view.setScaleType(ImageView.ScaleType.MATRIX);
        final float[] dimensions = getSize(this);
        width = dimensions[0];
        height = dimensions[1];
        matrix = center(width, height, d);
        view.setImageMatrix(matrix);
    }

    private static Matrix center(float width, float height, Drawable d) {
        final float drawableWidth = d.getIntrinsicWidth();
        final float drawableHeight = d.getIntrinsicHeight();
        final float widthScale = width / drawableWidth;
        final float heightScale = height / drawableHeight;
        final float scale = Math.min(1.0f, Math.min(widthScale, heightScale));
        Matrix m = new Matrix();
        m.postScale(scale, scale);
        m.postTranslate((width - drawableWidth * scale) / 2F,
                (height - drawableHeight * scale) / 2F);
        return m;
    }

    private static void rotateGrumpyCat(ImageView view, float x, float y,
                                        Matrix matrix, MatrixConcatenation p) {
        switch (p) {
            case PRE:
                matrix.preTranslate(-x, -y);
                matrix.preRotate(THETA);
                matrix.preTranslate(x, y);
                break;
            case POST:
                matrix.postTranslate(-x, -y);
                matrix.postRotate(THETA);
                matrix.postTranslate(x, y);
                break;
        }
        view.setImageMatrix(matrix);
    }
}    
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/grumpy-init.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1080x1920&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/grumpy-init.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;260px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Initial state: Matrix is scaled so that Grumpy is centered
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/grumpy-rotate.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1080x1920&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/grumpy-rotate.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;260px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Post-concatenating the transformation matrices
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/grumpy-out.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1080x1920&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/2d-transformations-android-java/grumpy-out.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;260px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Pre-concatenating the transformation matrices
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Android rotation demo of pre and post rotate&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This time you can see &lt;code&gt;postScale&lt;/code&gt; and &lt;code&gt;postTranslate&lt;/code&gt; being called inside
&lt;code&gt;center&lt;/code&gt; in order to scale the image and have the Grumpy cat centered inside
its view. This is just the initial phase.&lt;/p&gt;

&lt;p&gt;The interesting part is the &lt;code&gt;rotateGrumpyCat&lt;/code&gt; method, which is supposed to
rotate the Grumpy cat around a point, the center, but you see the different
results:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;post&lt;/code&gt; rotate gives the expected result, the Grumpy cat is rotate
&lt;em&gt;&amp;ldquo;in place&amp;rdquo;&lt;/em&gt; by 30 degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pre&lt;/code&gt; rotate sends our little buddy out of the screen.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Well, it&amp;rsquo;s been fun writing those two articles. I definitely spent more time
writing the first one, which is full of math, than this one.&lt;br /&gt;
I hope you now have a better understanding of how matrices work and how to
manipulate them in order to apply the transformations you want. I&amp;rsquo;ve
kept the code examples really simple on purpose.&lt;/p&gt;

&lt;p&gt;If you have questions or feedback, please leave a comment below.&lt;/p&gt;

&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;I want to address my warmest thank you to the following people, who helped me
during the review process of this article, by providing helpful feedbacks and
advices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Igor Laborie (&lt;a href=&#34;https://twitter.com/ilaborie&#34;&gt;@ilaborie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hadrien Toma (&lt;a href=&#34;https://twitter.com/HadrienToma&#34;&gt;@HadrienToma&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Source code for &lt;a href=&#34;https://github.com/arnaudbos/i-rant/tree/develop/static/code/2d-transformations-android-java/JavaAffineTransform&#34;&gt;the Java example on Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source code for &lt;a href=&#34;https://github.com/arnaudbos/i-rant/tree/develop/static/code/2d-transformations-android-java/AndroidMatrix&#34;&gt;the Android example on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Klipse</title>
      <link>http://i-rant.arnaudbos.com/test-klipse/</link>
      <pubDate>Mon, 23 Jan 2017 13:23:08 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/test-klipse/</guid>
      <description>&lt;p&gt;Foo&lt;/p&gt;

&lt;div class=&#34;language-klipse&#34;
  
  &gt;
  

Bar

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Matrices for developers</title>
      <link>http://i-rant.arnaudbos.com/matrices-for-developers/</link>
      <pubDate>Mon, 23 Jan 2017 13:11:45 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/matrices-for-developers/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;WARNING: Long article, big images, heavy GIFs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few weeks ago I was on an &lt;code&gt;android-user-group&lt;/code&gt; channel,
when someone posted a question about Android&amp;rsquo;s
&lt;a href=&#34;https://developer.android.com/reference/android/graphics/Matrix.html#postScale(float,%20float,%20float,%20float)&#34;&gt;Matrix.postScale(sx, sy, px, py)&lt;/a&gt; method and how it works
because it was &lt;em&gt;&amp;ldquo;hard to grasp&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Coincidence: in the beginning of 2016, I finished a freelance
project on an &lt;a href=&#34;https://play.google.com/store/apps/details?id=fr.climbingaway&#34;&gt;Android application&lt;/a&gt; where I had to implement
an exciting feature:&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/ca-screenshot-1.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1080x1920&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/ca-screenshot-1.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Climbing away - App screenshot 1
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/ca-screenshot-2.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1080x1920&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/ca-screenshot-2.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Climbing away - App screenshot 2
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/ca-screenshot-3.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1080x1920&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/ca-screenshot-3.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Climbing away - App screenshot 3
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Android app screenshots&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The user, after buying and downloading a digital topography of a crag, had to
be able to view the crag which was composed of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a picture of the cliff,&lt;/li&gt;
&lt;li&gt;a SVG file containing an overlay of the climbing routes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The user had to have the ability to pan and zoom at will and have the routes
layer &lt;em&gt;&amp;ldquo;follow&amp;rdquo;&lt;/em&gt; the picture.&lt;/p&gt;

&lt;h2 id=&#34;technical-challenge&#34;&gt;Technical challenge&lt;/h2&gt;

&lt;p&gt;In order to have the overlay of routes follow the user&amp;rsquo;s actions, I found I
had to get my hands dirty by overloading an Android &lt;code&gt;ImageView&lt;/code&gt;, draw onto the
&lt;code&gt;Canvas&lt;/code&gt; and deal with finger gestures.&lt;br /&gt;
As a good engineer: I searched on Stack Overflow
&lt;span class=&#34;emoji&#34;&gt;:sweat_smile:&lt;/span&gt;
&lt;br /&gt;
And I discovered I&amp;rsquo;d need the &lt;code&gt;android.graphics.Matrix&lt;/code&gt; class for 2D
transformations.&lt;/p&gt;

&lt;p&gt;The problem with this class, is that it might seem obvious what it does, but if
you have no mathematical background, it&amp;rsquo;s quite mysterious.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;boolean postScale (float sx, float sy, float px, float py)&lt;/p&gt;

&lt;p&gt;Postconcats the matrix with the specified scale. M&amp;rsquo; = S(sx, sy, px, py) * M&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yeah, cool, so it &lt;em&gt;scales&lt;/em&gt; something with some parameters and it does it with
some kind of multiplication. Nah, I don&amp;rsquo;t get it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What does it do exactly? Scales a matrix? What&amp;rsquo;s that supposed to mean, I
want to scale the canvas&amp;hellip;&lt;/li&gt;
&lt;li&gt;What should I use, &lt;code&gt;preScale&lt;/code&gt; or &lt;code&gt;postScale&lt;/code&gt;? Do I try both while I get the
input parameters from my gesture detection code and enter an infinite loop of
trial and error guesstimates? (No. Fucking. Way.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So at this very moment of the development process I realized I needed to
re-learn basic math skills about &lt;a href=&#34;https://en.wikipedia.org/wiki/Matrix_(mathematics)&#34;&gt;matrices&lt;/a&gt; that I had forgotten
many years ago, after finishing my first two years of uni
&lt;span class=&#34;emoji&#34;&gt;:scream:&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;WWW to the rescue!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While searching around I&amp;rsquo;ve found a number of good resources and was able to
learn some math again, and it felt great. It also helped me solve my 2D
transformations problems by applying my understandings as code in Java and
Android.&lt;/p&gt;

&lt;p&gt;So, given the discussion I&amp;rsquo;ve had on the channel I&amp;rsquo;ve mentioned above, it
seems I was not the only one struggling with matrices, trying to make sense of
it and using these skills with Android&amp;rsquo;s Matrix class and methods,
so I thought I&amp;rsquo;d write an article.&lt;/p&gt;

&lt;p&gt;The first part, this one, is about matrices. The second part,
&lt;a href=&#34;../2d-transformations-android-java&#34;&gt;&amp;ldquo;2D Transformations with Android and Java&amp;rdquo;&lt;/a&gt;,
is about how to apply what you know about matrices in code, with Java and
on Android.&lt;/p&gt;

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h2&gt;

&lt;div id=&#34;toc&#34; class=&#34;well col-md-12&#34;&gt;
  &lt;!-- toc --&gt;
&lt;/div&gt;

&lt;h2 id=&#34;what-is-a-matrix&#34;&gt;What is a matrix?&lt;/h2&gt;

&lt;p&gt;The first resource you might encounter when trying to understand 2D
transformations are articles about &lt;em&gt;&amp;ldquo;Transformation matrix&amp;rdquo;&lt;/em&gt; and
&lt;em&gt;&amp;ldquo;Affine transformations&amp;rdquo;&lt;/em&gt; on Wikipedia:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Transformation_matrix&#34;&gt;https://en.wikipedia.org/wiki/Transformation_matrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations&#34;&gt;https://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Affine_transformation&#34;&gt;https://en.wikipedia.org/wiki/Affine_transformation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don&amp;rsquo;t know you, but with this material, I almost got everything — wait&amp;hellip;&lt;/p&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://en.wikipedia.org/wiki/Chewbacca_defense&#34;&gt;
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/chewbacca-defense.jpg&#34; alt=&#34;Chewbacca defense - It does not make sense&#34;
            width=&#34;80%&#34;
            /&gt;
    &lt;/a&gt;
    
&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;NOPE! I didn&amp;rsquo;t get anything at all.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Luckily, on &lt;strong&gt;&lt;em&gt;Khan Academy&lt;/em&gt;&lt;/strong&gt; you will find a very well taught
&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices&#34;&gt;algebra course about matrices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have this kind of problem, I encourage you to take the time needed to
follow this course until you reach that &amp;ldquo;AHA&amp;rdquo; moment. It&amp;rsquo;s just a few hours of
investment (it&amp;rsquo;s free) and you won&amp;rsquo;t regret it.&lt;/p&gt;

&lt;p&gt;Why? Because &lt;a href=&#34;https://en.wikipedia.org/wiki/Matrix_(mathematics)&#34;&gt;matrices&lt;/a&gt; are good at representing data, and
operations on matrices can help you solve problems on this data. For instance,
remember having to solve systems of linear equations at school?&lt;br /&gt;
The most common ways (at least the two &lt;strong&gt;I&lt;/strong&gt;&amp;rsquo;ve studied) to solve a system
like that is with the &lt;a href=&#34;https://en.wikipedia.org/wiki/System_of_linear_equations#Elimination_of_variables&#34;&gt;elimination of variables&lt;/a&gt; method
or the &lt;a href=&#34;https://en.wikipedia.org/wiki/System_of_linear_equations#Row_reduction&#34;&gt;row reduction&lt;/a&gt; method. But you can also use
matrices for that, which leads to interesting algorithms.&lt;br /&gt;
Matrices are used heavily in every branch of science, and they can also be
used for linear transformation to describe the position of points in space,
and this is the use case we will study in this article.&lt;/p&gt;

&lt;h3 id=&#34;anatomy&#34;&gt;Anatomy&lt;/h3&gt;

&lt;p&gt;Simply put, a &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-intro-to-matrices/a/intro-to-matrices&#34;&gt;matrix is a &lt;em&gt;2D array&lt;/em&gt;&lt;/a&gt;. In fact, talking
about a $m \times n$ matrix relates to an array of length $m$ in which
each item is also an array but this time of length $n$. Usually, $m$
represents a rows&amp;rsquo; number and $n$ a columns&amp;rsquo; number. Each element in the
matrix is called an &lt;em&gt;entry&lt;/em&gt;.&lt;br /&gt;
A matrix is represented by a bold capital letter,
and each entry is represented by the same letter, but in lowercase and suffixed
with its row number and column number, in this order. For example:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{A} =
\begin{pmatrix}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n}\\
a_{21} &amp; a_{22} &amp; \vdots &amp; a_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Now what can we do with it? We can define an algebra for instance: like
&lt;a href=&#34;https://www.khanacademy.org/bigbingo_redirect?continue=https%3A%2F%2Fwww.khanacademy.org%2Fmath%2Falgebra-home%2Falg-matrices%2Falg-adding-and-subtracting-matrices%2Fv%2Fmatrix-addition-and-subtraction-1&amp;amp;conversion_ids=condensed_tutorial_title_click&#34;&gt;addition, subtraction&lt;/a&gt; and
&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-multiplying-matrices-by-matrices/a/multiplying-matrices&#34;&gt;multiplication&lt;/a&gt; operations, for fun and profit.
&lt;span class=&#34;emoji&#34;&gt;:nerd:&lt;/span&gt;
&lt;/p&gt;

&lt;h3 id=&#34;addition-subtraction&#34;&gt;Addition/Subtraction&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.khanacademy.org/bigbingo_redirect?continue=https%3A%2F%2Fwww.khanacademy.org%2Fmath%2Falgebra-home%2Falg-matrices%2Falg-adding-and-subtracting-matrices%2Fv%2Fmatrix-addition-and-subtraction-1&amp;amp;conversion_ids=condensed_tutorial_title_click&#34;&gt;Addition and subtraction of matrices&lt;/a&gt; is done by adding
or subtracting the corresponding entries of the operand matrices:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{A} + \mathbf{B} =
\begin{pmatrix}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n}\\
a_{21} &amp; a_{22} &amp; \vdots &amp; a_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn}
\end{pmatrix}
+
\begin{pmatrix}
b_{11} &amp; b_{12} &amp; \cdots &amp; b_{1n}\\
b_{21} &amp; b_{22} &amp; \vdots &amp; b_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
b_{m1} &amp; b_{m2} &amp; \cdots &amp; b_{mn}
\end{pmatrix}
=
\begin{pmatrix}
a_{11}+b_{11} &amp; a_{12}+b_{12} &amp; \cdots &amp; a_{1n}+b_{1n}\\
a_{21}+b_{21} &amp; a_{22}+b_{22} &amp; \vdots &amp; a_{2n}+b_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1}+b_{m1} &amp; a_{m2}+b_{m2} &amp; \cdots &amp; a_{mn}+b_{mn}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;div&gt;
$$
\mathbf{A} - \mathbf{B} =
\begin{pmatrix}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n}\\
a_{21} &amp; a_{22} &amp; \vdots &amp; a_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn}
\end{pmatrix}
-
\begin{pmatrix}
b_{11} &amp; b_{12} &amp; \cdots &amp; b_{1n}\\
b_{21} &amp; b_{22} &amp; \vdots &amp; b_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
b_{m1} &amp; b_{m2} &amp; \cdots &amp; b_{mn}
\end{pmatrix}
=
\begin{pmatrix}
a_{11}-b_{11} &amp; a_{12}-b_{12} &amp; \cdots &amp; a_{1n}-b_{1n}\\
a_{21}-b_{21} &amp; a_{22}-b_{22} &amp; \vdots &amp; a_{2n}-b_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1}-b_{m1} &amp; a_{m2}-b_{m2} &amp; \cdots &amp; a_{mn}-b_{mn}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Corollary to this definition we can deduce that in order to be &lt;em&gt;&lt;code&gt;defined&lt;/code&gt;&lt;/em&gt;, a matrix
addition or subtraction must be performed against two matrices of same
dimensions $m \times n$, otherwise the &lt;em&gt;&amp;ldquo;corresponding entries&amp;rdquo;&lt;/em&gt; bit would
have no sense:&lt;br /&gt;
Grab a pen and paper and try to add a $3 \times 2$ matrix to a $2 \times 3$
matrix. What will you do with the last &lt;em&gt;row&lt;/em&gt; of the first matrix? Same question
with the last &lt;em&gt;column&lt;/em&gt; of the second matrix?&lt;br /&gt;
If you don&amp;rsquo;t know, then you&amp;rsquo;ve reached the same conclusion as the mathematicians
that defined matrices additions and subtractions, pretty much
&lt;span class=&#34;emoji&#34;&gt;:innocent:&lt;/span&gt;
&lt;/p&gt;

&lt;h4&gt;Examples&lt;/h4&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
&lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
\text{Addition}\\
\mathbf{A} + \mathbf{B}
&amp;=
\begin{pmatrix}
4 &amp; -8 &amp; 7\\
0 &amp; 2 &amp; -1\\
15 &amp; 4 &amp; 9
\end{pmatrix}
+
\begin{pmatrix}
-5 &amp; 2 &amp; 3\\
4 &amp; -1 &amp; 6\\
0 &amp; 12 &amp; 3
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
4+\left(-5\right) &amp; \left(-8\right)+2 &amp; 7+3\\
0+4               &amp; 2+\left(-1\right) &amp; \left(-1\right)+6\\
15+0              &amp; 4+12              &amp; 9+3
\end{pmatrix}\\\\
\mathbf{A} + \mathbf{B}
&amp;=
\begin{pmatrix}
-1 &amp; -6 &amp; 10\\
4  &amp; 1  &amp; 5\\
15 &amp; 16 &amp; 12
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;
&lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
\text{Subtraction}\\
\mathbf{A} - \mathbf{B}
&amp;=
\begin{pmatrix}
4  &amp; -8 &amp; 7\\
0  &amp; 2  &amp; -1\\
15 &amp; 4  &amp; 9
\end{pmatrix}
-
\begin{pmatrix}
-5 &amp; 2 &amp; 3\\
4 &amp; -1 &amp; 6\\
0 &amp; 12 &amp; 3
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
4-\left(-5\right) &amp; \left(-8\right)-2 &amp; 7-3\\
0-4               &amp; 2-\left(-1\right) &amp; \left(-1\right)-6\\
15-0              &amp; 4-12              &amp; 9-3
\end{pmatrix}\\\\
\mathbf{A} + \mathbf{B}
&amp;=
\begin{pmatrix}
9  &amp; -10 &amp; 4\\
-4 &amp; 3   &amp; -7\\
15 &amp; -8  &amp; 6
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;matrix-multiplication&#34;&gt;Matrix multiplication&lt;/h3&gt;

&lt;p&gt;Throughout all my math schooling I&amp;rsquo;ve been said things like
&lt;em&gt;&amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apples_and_oranges&#34;&gt;you can&amp;rsquo;t add apples to oranges&lt;/a&gt;, it makes no
sense&amp;rdquo;&lt;/em&gt;, in order to express the importance of units.&lt;br /&gt;
Well it turns out that multiplying apples and oranges &lt;em&gt;is&lt;/em&gt; allowed.&lt;br /&gt;
And it can be applied to matrices: we can only add matrices to matrices, but
we can multiply matrices by numbers and by other matrices.&lt;/p&gt;

&lt;p&gt;In the first case though, the number is not just a number (semantically).
You don&amp;rsquo;t multiply a matrix by a number, you multiply a matrix by a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Scalar_(mathematics)&#34;&gt;&lt;strong&gt;scalar&lt;/strong&gt;&lt;/a&gt;. In order to
&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-multiplying-matrices-by-scalars/v/scalar-multiplication&#34;&gt;multiply a matrix by a scalar&lt;/a&gt;, we have to multiply each
entry in the matrix by the scalar, which will give us another matrix as a
result.&lt;/p&gt;

&lt;div&gt;
$$
k . \mathbf{A}
=
k .
\begin{pmatrix}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n}\\
a_{21} &amp; a_{22} &amp; \vdots &amp; a_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn}
\end{pmatrix}
=
\begin{pmatrix}
k.a_{11} &amp; k.a_{12} &amp; \cdots &amp; k.a_{1n}\\
k.a_{21} &amp; k.a_{22} &amp; \vdots &amp; k.a_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
k.a_{m1} &amp; k.a_{m2} &amp; \cdots &amp; k.a_{mn}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;And a little example:&lt;/p&gt;

&lt;div&gt;
$$
4 .
\begin{pmatrix}
0  &amp; 3  &amp; 12\\
7  &amp; -5 &amp; 1\\
-8 &amp; 2  &amp; 0
\end{pmatrix}
=
\begin{pmatrix}
0   &amp; 12  &amp; 48\\
28  &amp; -20 &amp; 4\\
-32 &amp; 8   &amp; 0
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;The second type of multiplication operation is the
&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-multiplying-matrices-by-matrices/a/multiplying-matrices&#34;&gt;multiplication of matrices by matrices&lt;/a&gt;. This operation
is a little bit more complicated than addition/subtraction because in order
to multiply a matrix by a matrix we don&amp;rsquo;t simply multiply the corresponding
entries. I&amp;rsquo;ll just &lt;a href=&#34;https://en.wikipedia.org/wiki/Matrix_multiplication&#34;&gt;quote wikipedia&lt;/a&gt; on that one:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if $\mathbf{A}$ is an $m \times n$ matrix and $\mathbf{B}$ is an
$n \times p$ matrix, their matrix product $\mathbf{AB}$ is an
$m \times p$ matrix, in which the $n$ entries across a
row of $\mathbf{A}$ are multiplied with the $n$ entries down a columns
of $\mathbf{B}$ and summed to produce an entry of $\mathbf{AB}$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;span class=&#34;emoji&#34;&gt;:expressionless:&lt;/span&gt;


&lt;p&gt;This hurts my brain, let&amp;rsquo;s break it down:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if $\mathbf{A}$ is an $m \times n$ matrix and $\mathbf{B}$ is an
$n \times p$ matrix, their matrix product $\mathbf{AB}$ is an
$m \times p$ matrix&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can write this in a more graphical way: $
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{A} \\ ^{\scriptsize m \times n}\end{matrix} }
\times
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{B} \\ ^{\scriptsize n \times p}\end{matrix} } =
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{AB} \\ ^{\scriptsize m \times p}\end{matrix} }
$.&lt;/p&gt;

&lt;p&gt;See this simple matrix
$
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{A} \\ ^{\scriptsize 2 \times 3}\end{matrix} } =
\begin{pmatrix}a_{11} &amp;amp; a_{12} &amp;amp; a_{13}\\a_{21} &amp;amp; a_{22} &amp;amp; a_{23}\end{pmatrix}
$
and this other matrix
$
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{B} \\ ^{\scriptsize 3 \times 1}\end{matrix} } =
\begin{pmatrix}b_{11}\\b_{21}\\b_{31}\end{pmatrix}
$.&lt;br /&gt;
We have $m=2$, $n=3$ and $p=1$ so the multiplication will give
$
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{AB} \\ ^{\scriptsize 2 \times 1}\end{matrix} } =
\begin{pmatrix}ab_{11}\\ab_{21}\end{pmatrix}
$.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s decompose the second part now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;the $n$ entries across a row of $\mathbf{A}$&amp;rdquo;&lt;/em&gt; means that each row
in $\mathbf{A}$ is an array of $n=3$ entries: if we take the first row we
get $a_{11}$, $a_{12}$ and $a_{13}$.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;the $n$ entries down a columns of $\mathbf{B}$&amp;rdquo;&lt;/em&gt; means that each
column of $\mathbf{B}$ is also an array of $n=3$ entries: in the first
column we get $b_{11}$, $b_{21}$ and $b_{31}$.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;are multiplied with&amp;rdquo;&lt;/em&gt; means that each entry in $\mathbf{A}$&amp;rsquo;s row
must be multiplied with its corresponding (first with first, second with
second, etc.) entry in $\mathbf{B}$&amp;rsquo;s column: $a_{11} \times b_{11}$,
$a_{12} \times b_{21}$ and $a_{13} \times b_{31}$&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;And summed to produce an entry of $\mathbf{AB}$&amp;rdquo;&lt;/em&gt; means that we must add
the products of these corresponding rows and columns entries in order to get
the entry of the new matrix at this row number and column number: in our case
we took the products of the entries in the first row in the first matrix with
the entries in the first column in the second matrix, so this will give us the
entry in the first row and first column of the new matrix:
$a_{11} \times b_{11} + a_{12} \times b_{21} + a_{13} \times b_{31}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To plagiate wikipedia, here is the formula:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{A} =
\begin{pmatrix}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n}\\
a_{21} &amp; a_{22} &amp; \vdots &amp; a_{2n}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn}
\end{pmatrix}
\text{, }
\mathbf{B} =
\begin{pmatrix}
b_{11} &amp; b_{12} &amp; \cdots &amp; b_{1p}\\
b_{21} &amp; b_{22} &amp; \vdots &amp; b_{2p}\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
b_{n1} &amp; b_{n2} &amp; \cdots &amp; b_{np}
\end{pmatrix}
$$
&lt;/div&gt;
&lt;div&gt;
$$
\mathbf{AB} =
\begin{pmatrix}
ab_{11} &amp; ab_{12} &amp; \cdots &amp; ab_{1p}\\
ab_{21} &amp; ab_{22} &amp; \vdots &amp; ab_{2p}\\
\vdots  &amp; \vdots  &amp; \ddots &amp; \vdots\\
ab_{m1} &amp; ab_{m2} &amp; \cdots &amp; ab_{mp}
\end{pmatrix}
\text{where }
ab_{ij}=\sum_{k=1}^{m}a_{ik}b_{kj}
$$
&lt;/div&gt;

&lt;p&gt;Ok I realize I don&amp;rsquo;t have any better way to explain this so here is a visual
representation of the matrix multiplication process and an example:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
&lt;div class=&#34;col-md-4&#34;&gt;
&lt;a title=&#34;By File:Matrix multiplication diagram.svg:User:Bilou See below. [GFDL (http://www.gnu.org/copyleft/fdl.html) or CC-BY-SA-3.0 (http://creativecommons.org/licenses/by-sa/3.0/)], via Wikimedia Commons&#34; href=&#34;https://commons.wikimedia.org/wiki/File%3AMatrix_multiplication_diagram_2.svg&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;Matrix multiplication diagram 2&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Matrix_multiplication_diagram_2.svg/256px-Matrix_multiplication_diagram_2.svg.png&#34;/&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;col-md-8&#34;&gt;
&lt;div&gt;
$$
\mathbf{A} =
\begin{pmatrix}
4  &amp; 3\\
0  &amp; -5\\
2  &amp; 1\\
-6 &amp; 8
\end{pmatrix}
\text{, }
\mathbf{B} =
\begin{pmatrix}
7  &amp; 1 &amp; 3\\
-2 &amp; 4 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;
&lt;div&gt;
$$
\begin{aligned}
\mathbf{AB}
&amp;=
\begin{pmatrix}
4\times7+3\times\left(-2\right)               &amp; 4\times1+3\times4               &amp; 4\times3+3\times1\\
0\times7+\left(-5\right)\times\left(-2\right) &amp; 0\times1+\left(-5\right)\times4 &amp; 0\times3+\left(-5\right)\times1\\
2\times7+1\times\left(-2\right)               &amp; 2\times1+1\times4               &amp; 2\times3+1\times1\\
\left(-6\right)\times7+8\times\left(-2\right) &amp; \left(-6\right)\times1+8\times4 &amp; \left(-6\right)\times3+8\times1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
28-6   &amp; 4+12  &amp; 12+3\\
0+10   &amp; 0-20  &amp; 0-5\\
14-2   &amp; 2+4   &amp; 6+1\\
-42-16 &amp; -6+32 &amp; -18+8
\end{pmatrix}\\\\
\mathbf{AB}
&amp;=
\begin{pmatrix}
22  &amp; 16  &amp; 15\\
10  &amp; -20 &amp; -5\\
12  &amp; 6   &amp; 7\\
-58 &amp; 26  &amp; -10
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Remember:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In order for matrix multiplication to be defined, the number of columns in
the first matrix must be equal to the number of rows in the second matrix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Otherwise you &lt;strong&gt;can&amp;rsquo;t&lt;/strong&gt; multiply, period.&lt;/p&gt;

&lt;p&gt;More details &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-properties-of-matrix-multiplication/v/defined-and-undefined-matrix-operations&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-properties-of-matrix-multiplication/a/matrix-multiplication-dimensions&#34;&gt;here&lt;/a&gt; if you
are interested.&lt;/p&gt;

&lt;h2 id=&#34;transformation-matrices&#34;&gt;Transformation matrices&lt;/h2&gt;

&lt;p&gt;Now that we know what is a matrix and how we can multiply matrices, we can see
why it is interesting for &lt;strong&gt;2D transformations&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;transforming-points&#34;&gt;Transforming points&lt;/h3&gt;

&lt;p&gt;As I&amp;rsquo;ve said previously, matrices can be used to represent systems of
linear equations. Suppose I give you this system:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
2x+y &amp;= 5\\
-x+2y &amp;= 0
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Now that you are familiar with matrix multiplications, maybe you can see this
coming, but we can definitely express this system of equations as the following
matrix multiplication:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix}
2  &amp; 1\\
-1 &amp; 2
\end{pmatrix}
.
\begin{pmatrix}
x\\y
\end{pmatrix}
=
\begin{pmatrix}
5\\0
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;If we go a little further, we can see something else based on the matrices
$\begin{pmatrix}x\\y\end{pmatrix}$ and
$\begin{pmatrix}5\\0\end{pmatrix}$.&lt;br /&gt;
We can see that they can be used to reprensent &lt;strong&gt;&lt;em&gt;points&lt;/em&gt;&lt;/strong&gt; in the Cartesian
plane, right? A point can be represented by a vector originating from origin,
and a vector is just a $2 \times 1$ matrix.&lt;/p&gt;

&lt;p&gt;What we have here, is a matrix multiplication that represents the
transformation of a point into another point. We don&amp;rsquo;t know what the first
point&amp;rsquo;s coordinates are yet, and it doesn&amp;rsquo;t matter. What I wanted to show is
that, given a position vector, we are able to &lt;em&gt;transform&lt;/em&gt; it into another via
a matrix multiplication operation.&lt;/p&gt;

&lt;p&gt;Given a point $P$, whose coordinates are represented by the position vector,
$\begin{pmatrix}x\\y\end{pmatrix}$, we can obtain a new point $P^{\prime}$
whose coordinates are represented by the position vector
$\begin{pmatrix}x^{\prime}\\y^{\prime}\end{pmatrix}$ by multiplying it by a
matrix.&lt;/p&gt;

&lt;p&gt;One important thing is that this
&lt;em&gt;&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-matrices-as-transformations/v/transforming-position-vector&#34;&gt;transformation matrix&lt;/a&gt;&lt;/em&gt; has to have specific
dimensions, in order to fulfill the rule of matrix multiplication: because
$\begin{pmatrix}x\\y\end{pmatrix}$ is a $2 \times 1$ matrix, and
$\begin{pmatrix}x^{\prime}\\y^{\prime}\end{pmatrix}$ is also a $2 \times 1$
matrix, then the transformation matrix has to be a $2 \times 2$ matrix in
order to have:&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{A}
.
\begin{pmatrix}
x\\y
\end{pmatrix}
=
\begin{pmatrix}
a_{11} &amp; a_{12}\\
a_{21} &amp; a_{22}
\end{pmatrix}
.
\begin{pmatrix}
x\\y
\end{pmatrix}
=
\begin{pmatrix}
x^{\prime}\\y^{\prime}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The order here is important as we will see later, but you can
already see that switching $\mathbf{A}$ and
$\begin{pmatrix}x\\y\end{pmatrix}$ would lead to an $undefined$ result
(if you don&amp;rsquo;t get it, re-read the part on matrix multiplication and their
dimensions).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notice that the nature of the transformation represented by our matrix above
and in the link is not clear, and I didn&amp;rsquo;t say what kind of transformation it
is, on purpose. The transformation matrix was picked at random, and yet we
see how interesting and useful it is for 2D manipulation of graphics.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Another great thing about transformation matrices, is that they can be used
to &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-matrices-as-transformations/v/matrix-transformation-triangle&#34;&gt;transform a whole bunch of points&lt;/a&gt; at the same time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For now, I suppose all you know is the type of transformations you want to
apply: &lt;code&gt;rotation&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt; or &lt;code&gt;translation&lt;/code&gt; and some parameters.&lt;/p&gt;

&lt;p&gt;So how do you go from &lt;code&gt;scale by a factor of 2&lt;/code&gt; and &lt;code&gt;rotate 90 degrees clockwise&lt;/code&gt;
to a transformation matrix?&lt;/p&gt;

&lt;p&gt;Well the answer is:&lt;/p&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/moar-math-stuff.jpg&#34; alt=&#34;Moar math stuff with smiling cat meme&#34;
            width=&#34;60%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;h3 id=&#34;more-math-stuff&#34;&gt;More math stuff&lt;/h3&gt;

&lt;p&gt;More specifically I encourage you to read &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-matrices-as-transformations/a/matrices-as-transformations&#34;&gt;this course on &lt;em&gt;Matrices as
transformations&lt;/em&gt; (which is full of fancy plots and
animations)&lt;/a&gt; and particularly its last part:
&lt;strong&gt;&lt;em&gt;Representing two dimensional linear transforms with matrices&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Come back here once you&amp;rsquo;ve read it, or it&amp;rsquo;s goind to hurt
&lt;span class=&#34;emoji&#34;&gt;:sweat_smile:&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ok I suppose you&amp;rsquo;ve read the course above, but just in case, here
is a reminder&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a position vector $\begin{pmatrix}x\\y\end{pmatrix}$ can be broken
down as
$\begin{pmatrix}x\\y\end{pmatrix} =
x.\begin{pmatrix}\color{Green} 1\\ \color{Green} 0\end{pmatrix}
+
y.\begin{pmatrix}\color{Red} 0\\ \color{Red} 1\end{pmatrix}$.&lt;/li&gt;
&lt;/ul&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#transform-matrix-reminder-1&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[Show explanation]&lt;/a&gt;
&lt;div id=&#34;transform-matrix-reminder-1&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;p&gt;If you decompose $\begin{pmatrix}x\\y\end{pmatrix}$ into a matrix addition
operation, you find
$\begin{pmatrix}x\\y\end{pmatrix} =
\begin{pmatrix}x\\0\end{pmatrix} + \begin{pmatrix}0\\y\end{pmatrix}$.&lt;/p&gt;

&lt;p&gt;And if you decompose a little bit more you can express each operand of
this addition as the multiplication of a scalar and a matrix:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$\begin{pmatrix}x\\0\end{pmatrix} = x.\begin{pmatrix}1\\0\end{pmatrix}$&lt;/li&gt;
&lt;li&gt;$\begin{pmatrix}0\\y\end{pmatrix} = y.\begin{pmatrix}0\\1\end{pmatrix}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now look at the the matrices $\begin{pmatrix}1\\0\end{pmatrix}$ and
$\begin{pmatrix}0\\1\end{pmatrix}$, they are the Cartesian unit vectors.&lt;/p&gt;

&lt;p&gt;So
$\begin{pmatrix} x\\y \end{pmatrix} =
x.\begin{pmatrix}\color{Green} 1\\ \color{Green} 0\end{pmatrix}
+
y.\begin{pmatrix}\color{Red} 0\\ \color{Red} 1\end{pmatrix}$ is just another
way to write that the position vector $\begin{pmatrix}x\\y\end{pmatrix}$
represents a point given by a transformation of the &lt;em&gt;unit vectors&lt;/em&gt; of our
Cartesian plane.&lt;/p&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;$\begin{pmatrix}\color{Green} a\\ \color{Green} c\end{pmatrix}$ and
$\begin{pmatrix}\color{Red} b\\ \color{Red} d\end{pmatrix}$ are the
position vectors where
$\begin{pmatrix} \color{Green} 0\\ \color{Green} 1\end{pmatrix}$ and
$\begin{pmatrix} \color{Red} 1\\ \color{Red} 0\end{pmatrix}$ will land
respectively after the transformation matrix
$\mathbf{A} = \begin{pmatrix} \color{Green} a &amp;amp; \color{Red} b\\ \color{Green} c &amp;amp; \color{Red} d \end{pmatrix}$ has been applied.&lt;/li&gt;
&lt;/ul&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#transform-matrix-reminder-2&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[Show explanation]&lt;/a&gt;
&lt;div id=&#34;transform-matrix-reminder-2&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;p&gt;Let&amp;rsquo;s start again from our unit vectors
$\begin{pmatrix} \color{Green} 1\\ \color{Green} 0\end{pmatrix}$
and
$\begin{pmatrix} \color{Red} 0\\ \color{Red} 1\end{pmatrix}$.&lt;/p&gt;

&lt;p&gt;We know that
$\begin{pmatrix} x\\y \end{pmatrix} =
x.\begin{pmatrix} \color{Green} 1\\ \color{Green} 0\end{pmatrix}
+
y.\begin{pmatrix} \color{Red} 0\\ \color{Red} 1\end{pmatrix}$, so now
imagine we apply a transformation to our plane.&lt;/p&gt;

&lt;p&gt;Our unit vectors will be transformed too, right?&lt;/p&gt;

&lt;p&gt;If we assume that
$\begin{pmatrix} \color{Green} 1\\ \color{Green} 0 \end{pmatrix}$
&lt;em&gt;&amp;ldquo;lands on&amp;rdquo;&lt;/em&gt;
$\begin{pmatrix} \color{Green} a\\ \color{Green} c \end{pmatrix}$
and that
$\begin{pmatrix} \color{Red} 0\\ \color{Red} 1 \end{pmatrix}$
&lt;em&gt;&amp;ldquo;lands on&amp;rdquo;&lt;/em&gt;
$\begin{pmatrix} \color{Red} b\\ \color{Red} d \end{pmatrix}$,&lt;br /&gt;
then we have our position vector $\begin{pmatrix} x\\y \end{pmatrix}$
landing on
$x.\begin{pmatrix} \color{Green} a\\ \color{Green} c \end{pmatrix} +
y.\begin{pmatrix} \color{Red} b\\ \color{Red} d \end{pmatrix} =
\begin{pmatrix}\color{Green} a.x + \color{Red} b.y\\ \color{Green} c.x + \color{Red} d.y \end{pmatrix}$.&lt;/p&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;given the previous transformation,
$\begin{pmatrix} x\\ y \end{pmatrix}$ will land on
$\begin{pmatrix} \color{Green} a.x + \color{Red} b.y\\ \color{Green} c.x + \color{Red} d.y \end{pmatrix}$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don&amp;rsquo;t understand this conclusion, read again, read the course, take
your time.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now remember, our goal is to determine what $ \mathbf{A} $ is, because we
know the transformation we want to apply but we&amp;rsquo;re searching for the matrix we
should apply to our position vector(s) in order to transform our graphics.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take the example of the transformation of a series of points: we know
where the position vectors will land, but we&amp;rsquo;re looking for $ \mathbf{A} $.&lt;br /&gt;
We have our cartesian plane with a triangle formed by the three points
$P_{(2,1)}$, $Q_{(-2,0)}$, $R_{(0,2)}$, and another triangle which
represents a transformed version of the first one: $P^{\prime}_{(5, 0)}$
and $Q^{\prime}_{(-4, 2)}$ and $R^{\prime}_{(2,4)}$.&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-transformed-triangle.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1215x725&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-transformed-triangle.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Cartesian plane containing two triangles
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Example transformation of a triangle&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;We just need two points for this example, let&amp;rsquo;s take $P$ and $Q$. We know that:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} 2\\ 1 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} 5\\ 0 \end{pmatrix}
    $$&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} -2\\ 0 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} -4\\ 2 \end{pmatrix}
    $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Which means:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} x\\ y \end{pmatrix} =
    \begin{pmatrix} 2\\ 1 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} a.x+b.y\\ c.x+d.y \end{pmatrix} =
    \begin{pmatrix} 5\\ 0 \end{pmatrix}
    $$&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} x\\ y \end{pmatrix} =
    \begin{pmatrix} -2\\ 0 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} a.x+b.y\\ c.x+d.y \end{pmatrix} =
    \begin{pmatrix} -4\\ 2 \end{pmatrix}
    $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;From which we can deduce:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} 2.a+1.b\\ 2.c+1.d \end{pmatrix} =
    \begin{pmatrix} 5\\ 0 \end{pmatrix}
    $$&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} -2.a+0.b\\ -2.c+0.d \end{pmatrix} =
    \begin{pmatrix} -4\\ 2 \end{pmatrix}
    $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The right side gives us $ a=2 $ and $ c = -1 $, with which we can deduce
$ b=1 $ and $ d=2 $ from the left side.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And this, is our transformation matrix&lt;/strong&gt;:&lt;/p&gt;

&lt;div&gt;$$ \mathbf{A} = \begin{pmatrix} \color{Green} 2 &amp; \color{Red} 1\\ \color{Green} -\color{Green} 1 &amp; \color{Red} 2 \end{pmatrix} $$&lt;/div&gt;

&lt;p&gt;Try that same exercise with $P$ and $R$, or with $Q$ and $R$ and you should
end up to the same result.&lt;/p&gt;

&lt;h3 id=&#34;the-identity-matrix&#34;&gt;The identity matrix&lt;/h3&gt;

&lt;p&gt;We don&amp;rsquo;t know how to define a transformation matrix yet, but we know its form.&lt;br /&gt;
So what do we do next? Remember the last section where we&amp;rsquo;ve seen that
a position vector $\begin{pmatrix} x\\ y \end{pmatrix}$ can be
broken down as $\begin{pmatrix} x\\y \end{pmatrix} =
x.\begin{pmatrix} \color{Green} 1\\ \color{Green} 0 \end{pmatrix} +
y.\begin{pmatrix} \color{Red} 0\\ \color{Red} 1 \end{pmatrix} $
?&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s a pretty good starting point, we just laid out our &amp;ldquo;base&amp;rdquo; matrix:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix}
\color{Green} 1 &amp; \color{Red} 0\\
\color{Green} 0 &amp; \color{Red} 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;This matrix represents the base state of your plane, the matrix applied
to your plane when you have just loaded your image for example (granted
your image is the same size as its receiving container view).&lt;br /&gt;
In other words, &lt;strong&gt;&lt;em&gt;this is the matrix that, applied to any position vector will
return that same position vector&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This matrix is called the &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-properties-of-matrix-multiplication/a/intro-to-identity-matrices&#34;&gt;identity matrix&lt;/a&gt;.&lt;/p&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#identity-matrix&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[More on the identity matrix]&lt;/a&gt;
&lt;div id=&#34;identity-matrix&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/3cnIa0fYJkY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;/div&gt;


&lt;h3 id=&#34;combining-transformations&#34;&gt;Combining transformations&lt;/h3&gt;

&lt;p&gt;One more thing before we get concrete: &lt;em&gt;We want our user to be able
to combine/chain transformations&lt;/em&gt; (like zooming and panning at the same time
for instance).&lt;/p&gt;

&lt;p&gt;In order to chain multiple transformations we need to understand the
&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-properties-of-matrix-multiplication/a/properties-of-matrix-multiplication&#34;&gt;properties of matrix multiplication&lt;/a&gt;, and more
specifically the &lt;code&gt;non-commutative&lt;/code&gt; and &lt;code&gt;associative&lt;/code&gt; properties of matrix
multiplication:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Matrix multiplication is associative
$\left(\mathbf{A}.\mathbf{B}\right).\mathbf{C} = \mathbf{A}.\left(\mathbf{B}.\mathbf{C}\right)$&lt;/li&gt;
&lt;/ul&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#matrix-properties-1&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[Show explanation]&lt;/a&gt;
&lt;div id=&#34;matrix-properties-1&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;p&gt;Just trust me already!&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t, I&amp;rsquo;m not going to write it here because it takes a lot of screen
width (I&amp;rsquo;ve tried and it didn&amp;rsquo;t render very well), so check out this video.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/8Ryfe82DTcM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Matrix multiplication is non-commutative
$\mathbf{A}.\mathbf{B} \neq \mathbf{B}.\mathbf{A}$&lt;/li&gt;
&lt;/ul&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#matrix-properties-2&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[Show explanation]&lt;/a&gt;
&lt;div id=&#34;matrix-properties-2&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;p&gt;In order to affirm this we just have to prove commutativity wrong, which is
easy!&lt;/p&gt;

&lt;p&gt;Imagine $\mathbf{A}$ is a $5 \times 2$ matrix, and $\mathbf{B}$ is a
$2 \times 3$ matrix:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{A} \\ ^{\scriptsize 5 \times 2}\end{matrix} }
\times
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{B} \\ ^{\scriptsize 2 \times 3}\end{matrix} } =
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{AB} \\ ^{\scriptsize 5 \times 3}\end{matrix} }
$&lt;/li&gt;
&lt;li&gt;$
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{B} \\ ^{\scriptsize 2 \times 3}\end{matrix} }
\times
{\tiny\begin{matrix}^{\scriptsize }\\ \normalsize \mathbf{A} \\ ^{\scriptsize 5 \times 2}\end{matrix} } =
undefined
$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that&amp;rsquo;s it. But we can also see commutativity does not hold even for
matrices of same dimensions:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
  &lt;div class=&#34;col-md-6&#34;&gt;$$
  \begin{aligned}
  \mathbf{A}.\mathbf{B} &amp;=
  \begin{pmatrix}
  a_{11} &amp; a_{12}\\
  a_{21} &amp; a_{22}
  \end{pmatrix} .
  \begin{pmatrix}
  b_{11} &amp; b_{12}\\
  b_{21} &amp; b_{22}
  \end{pmatrix}\\\\
  &amp;=
  \begin{pmatrix}
  a_{11}.b_{11}+a_{12}.b_{21} &amp; a_{11}.b_{12}+a_{12}.b_{22}\\
  a_{21}.b_{11}+a_{22}.b_{21} &amp; a_{11}.b_{22}+a_{22}.b_{22}
  \end{pmatrix}
  \end{aligned}
  $$&lt;/div&gt;
  &lt;div class=&#34;col-md-6&#34;&gt;$$
  \begin{aligned}
  \mathbf{B}.\mathbf{A} &amp;=
  \begin{pmatrix}
  b_{11} &amp; b_{12}\\
  b_{21} &amp; b_{22}
  \end{pmatrix} .
  \begin{pmatrix}
  a_{11} &amp; a_{12}\\
  a_{21} &amp; a_{22}
  \end{pmatrix}\\\\
  &amp;=
  \begin{pmatrix}
  b_{11}.a_{11}+b_{12}.a_{21} &amp; b_{11}.a_{12}+b_{12}.a_{22}\\
  b_{21}.a_{11}+b_{22}.a_{21} &amp; b_{21}.a_{12}+b_{22}.a_{22}
  \end{pmatrix}
  \end{aligned}
  $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Grab a pen and paper and try it for yourself with the following matrices
$\mathbf{A}=\begin{pmatrix}1 &amp;amp; 2\\-3 &amp;amp; -4\end{pmatrix}$ and
$\mathbf{B}=\begin{pmatrix}-2 &amp;amp; 0\\0 &amp;amp; -3\end{pmatrix}$.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Back to our transformations.&lt;br /&gt;
Imagine we want to apply transformation $ \mathbf{B} $, then transformation
$ \mathbf{A} $ to our position vector $ \vec{v} $.&lt;/p&gt;

&lt;p&gt;We have
$
\vec{v^{\prime}} = \mathbf{B} . \vec{v}
$
and
$
\vec{v^{\prime\prime}} = \mathbf{A} . \vec{v^{\prime}}
$,
which leads us to:&lt;/p&gt;

&lt;div&gt;
$$
\vec{v^{\prime\prime}} = \mathbf{A} . \left( \mathbf{B} . \vec{v} \right)
$$
&lt;/div&gt;

&lt;p&gt;We know that matrix multiplication is &lt;code&gt;associative&lt;/code&gt;, which gives us:&lt;/p&gt;

&lt;div&gt;
$$
\vec{v^{\prime\prime}} = \mathbf{A} . \left( \mathbf{B} . \vec{v} \right)
\Leftrightarrow
\vec{v^{\prime\prime}} = \left( \mathbf{A} . \mathbf{B} \right) . \vec{v}
$$
&lt;/div&gt;

&lt;p&gt;In conclusion, in order to apply multiple transformations at once, we can
multiply all our transformation matrices and apply the resulting transformation
matrix to our vector(s).&lt;/p&gt;

&lt;p&gt;We also know that matrix multiplication is &lt;code&gt;not commutative&lt;/code&gt;, so the order
in which we multiply our transformation matrices
($ \mathbf{A} . \mathbf{B} $ or $ \mathbf{B} . \mathbf{A} $) will have
an impact on our final matrix and will lead to different results, different
transformations.&lt;/p&gt;

&lt;h2 id=&#34;types-of-transformations&#34;&gt;Types of transformations&lt;/h2&gt;

&lt;p&gt;There are several types of 2D transformations we are able to define using
$2 \times 2$ dimensions matrices, and you&amp;rsquo;ve had a preview of most of them
in this course on &lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices/alg-matrices-as-transformations/a/matrices-as-transformations&#34;&gt;matrices as transformations&lt;/a&gt;.&lt;br /&gt;
Namely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scaling&lt;/li&gt;
&lt;li&gt;Reflexion&lt;/li&gt;
&lt;li&gt;Shearing&lt;/li&gt;
&lt;li&gt;Rotation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the rest of this section imagine we have the point
$ P_{\left(x, y\right)} $, which represents any point of
an object on the plane, and we want to find the matrix to transform it into
$ P^{\prime}_{\left(x^{\prime}, y^{\prime}\right)}$ such that&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime} \end{pmatrix} =
\mathbf{A} . \begin{pmatrix} x\\y \end{pmatrix} =
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
.
\begin{pmatrix} x\\y \end{pmatrix}
$$
&lt;/div&gt;

&lt;h3 id=&#34;scaling&#34;&gt;Scaling&lt;/h3&gt;

&lt;p&gt;Scaling (like zooming in by a factor of 2 for instance) might seem
straightforward to represent, right?
&lt;em&gt;&amp;ldquo;Simply multiply the coordinates by the scaling factor and you&amp;rsquo;re done.&amp;rdquo;&lt;/em&gt;&lt;br /&gt;
But the pitfall here is that you &lt;em&gt;might&lt;/em&gt; want to have different horizontal and
vertical scaling factors for your transformation, I mean it&amp;rsquo;s possible!&lt;/p&gt;

&lt;p&gt;So we must differentiate between $ s_{x} $ and $ s_{y} $ which represent
the horizontal and vertical scaling factors, respectively.&lt;/p&gt;

&lt;p&gt;The two equations this gives us are:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
x&#39; &amp;= s_{x} . x \\
y&#39; &amp;= s_{y} . y
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Knowing that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime} \end{pmatrix} =
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
.
\begin{pmatrix} x\\y \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;We can find $a$, $b$, $c$ and $d$:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
s_{x} . x &amp;= a . x + b . y\\\\
\Rightarrow
a &amp;= s_{x} \text{ and }\\
b &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
s_{y} . y &amp;= c . x + d . y\\\\
\Rightarrow
c &amp;= s_{y} \text{ and }\\
d &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;In conclusion, the $2 \times 2$ scaling matrix for the factors
$\left(s_{x}, s_{y}\right)$ is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
=
\begin{pmatrix} s_{x} &amp; 0\\0 &amp; s_{y} \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Which makes sense, right? I mean, scaling by a factor of $1$ both on the
$x$ and $y$ axises will give:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} s_{x} &amp; 0\\0 &amp; s_{y} \end{pmatrix}
=
\begin{pmatrix} 1 &amp; 0\\0 &amp; 1 \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Which is&amp;hellip; the &lt;code&gt;identity&lt;/code&gt; matrix! So nothing moves, basically.&lt;/p&gt;

&lt;h3 id=&#34;reflexion&#34;&gt;Reflexion&lt;/h3&gt;

&lt;p&gt;There are 2 types of reflexions we can think about right ahead: reflexion around
an axis, or around a point.&lt;br /&gt;
To keep things simple we&amp;rsquo;ll focus on reflexions around the $x$ and $y$
axises (reflexion around the origin is the equivalent of applying a reflexion on
the $x$ and $y$ axises successively).&lt;/p&gt;

&lt;p&gt;Reflexion around the $x$ axis gives us:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= x\\
x &amp;= a . x + b . y\\\\
\Rightarrow
a &amp;= 1 \text{ and }\\
b &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= -y\\
-y &amp;= c . x + d . y\\\\
\Rightarrow
c &amp;= 0 \text{ and }\\
d &amp;= -1
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Funny, reflecting around the $x$ axis is the same transformation as scaling
$x$ by a factor of $-1$ and $y$ by a factor of $1$:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix} =
\begin{pmatrix}
1 &amp; 0\\
0 &amp; -1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;And reflexion around the $y$ axis gives us:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= -x\\
-x &amp;= a . x + b . y\\\\
\Rightarrow
a &amp;= -1 \text{ and }\\
b &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= y\\
y &amp;= c . x + d . y\\\\
\Rightarrow
c &amp;= 0 \text{ and }\\
d &amp;= 1
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The transformation matrix to reflect around the $y$ axis is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
=
\begin{pmatrix}
-1 &amp; 0\\
0 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;h3 id=&#34;shearing&#34;&gt;Shearing&lt;/h3&gt;

&lt;p&gt;Now it gets a little bit trickier.&lt;/p&gt;

&lt;p&gt;In most examples I&amp;rsquo;ve found, shearing is explained by saying the coordinates
are changed by adding a constant that measures the degree of shearing.&lt;br /&gt;
For instance, a shear along the $x$ axis is often represented showing a
rectangle with a vertex at $\left(0, 1\right)$ is transformed into a
parallelogram with a vertex at $\left(1, 1\right)$.&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-constant-shearing.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1084x769&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-constant-shearing.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Cartesian plane shearing
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;$\underline{\text{Shearing along } x \text{ axis by a constant } k_{x}=1}$&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In this article, I want to explain it using the shearing angle, the angle
through which the axis is sheared. Let&amp;rsquo;s call it $\alpha$ (alpha).&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing.gif&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1083x691&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing.gif&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Cartesian plane shearing
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;$\underline{\text{Shearing along } x \text{ axis by an angle } \alpha}$&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If we look at the plane above, we can see that the new abscissa $x^{\prime}$ is
equal to $x$ plus/minus the opposite side of the triangle formed
by the $y$ axis, the sheared version of the $y$ axis and the segment
between the top left vertex of the rectangle and the top left vertex of the
parallelogram. In other words, $x^{\prime}$ is equal to $x$ plus/minus the
opposite side of the green triangle, see:&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-1.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1434x882&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-1.png&#34; itemprop=&#34;thumbnail&#34;
        
        title=&#34;Shearing by negative alpha=-30 degrees when y(P)&amp;gt;0&#34;
        width=&#34;395px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Shearing by negative $\alpha=-30^{\circ}$ when $y\left(P\right)&amp;gt;0$
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-2.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1434x882&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-2.png&#34; itemprop=&#34;thumbnail&#34;
        
        title=&#34;Shearing by positive alpha=30 degrees when y(P)&amp;gt;0&#34;
        width=&#34;395px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Shearing by positive $\alpha=30^{\circ}$ when $y\left(P\right)&amp;gt;0$
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-3.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1434x882&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-3.png&#34; itemprop=&#34;thumbnail&#34;
        
        title=&#34;Shearing by negative alpha=-30 degrees when y(P)&amp;lt;0&#34;
        width=&#34;395px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Shearing by negative $\alpha=-30^{\circ}$ when $y\left(P\right)&amp;lt;0$
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-4.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1434x882&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-angle-shearing-triangles-4.png&#34; itemprop=&#34;thumbnail&#34;
        
        title=&#34;Shearing by positive alpha=30 degrees when y(P)&amp;lt;0&#34;
        width=&#34;395px&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Shearing by positive $\alpha=30^{\circ}$ when $y\left(P\right)&amp;lt;0$
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;$\underline{\text{Triangles formed by shearing along } x \text{ axis by an angle } \alpha}$&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Remember your &lt;a href=&#34;http://www.mathsisfun.com/algebra/trigonometry.html&#34;&gt;trigonometry&lt;/a&gt; class?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In a right-angled triangle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the hypotenuse is the longest side&lt;/li&gt;
&lt;li&gt;the opposite side is the one at the opposite of a given angle&lt;/li&gt;
&lt;li&gt;the adjacent side is the next to a given angle&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;$PP^{\prime}$ is the opposite side, we need to find its length ($k$), in
order to calculate $x^{\prime}$ from $x$&lt;/li&gt;
&lt;li&gt;the adjacent side is $P$&amp;rsquo;s ordinate: $y$&lt;/li&gt;
&lt;li&gt;we don&amp;rsquo;t know the hypotenuse&amp;rsquo;s length&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From our trigonometry class, we know that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\cos \left( \alpha \right) &amp;= \frac{adjacent}{hypotenuse}\\\\
\sin \left( \alpha \right) &amp;= \frac{opposite}{hypotenuse}\\\\
\tan \left( \alpha \right) &amp;= \frac{opposite}{adjacent}
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;We know $\alpha$, but we don&amp;rsquo;t know the length of the hypotenuse, so we
can&amp;rsquo;t use the cosine function.&lt;br /&gt;
On the other hand, we know the adjacent side&amp;rsquo;s length: it&amp;rsquo;s $y$, so we can use
the tangent function to find the opposite side&amp;rsquo;s length:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\tan \left( \alpha \right) &amp;= \frac{opposite}{adjacent}\\\\
opposite &amp;= adjacent \times \tan \left( \alpha \right)
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;We can start solving our system of equations in order to find
our matrix with the following:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
x^{\prime} = x + k = x + y . \tan \left( \alpha \right)
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
y^{\prime} = y
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;However, we can see that when $\alpha &amp;gt; 0$, $\tan \left( \alpha \right) &amp;lt; 0$ and
when $\alpha &amp;lt; 0$, $\tan \left( \alpha \right) &amp;gt; 0$. This multiplied by $y$
which can itself be positive or negative will give very different results
for $x^{\prime} = x + k = x + y . \tan \left( \alpha \right)$.&lt;br /&gt;
So don&amp;rsquo;t forget that $\alpha &amp;gt; 0$ is counterclockwise rotation/shearing angle,
while $\alpha &amp;lt; 0$ is clockwise rotation/shearing angle.&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= x + y . \tan \left( \alpha \right) \\
x + y . \tan \left( \alpha \right) &amp;= a . x + b . y\\\\
\Rightarrow
a &amp;= 1 \text{ and }\\
b &amp;= \tan \left( \alpha \right)
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= y\\
y &amp;= c . x + d . y\\\\
\Rightarrow
c &amp;= 0 \text{ and }\\
d &amp;= 1
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The transformation matrix to shear along the $x$ direction is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
=
\begin{pmatrix}
1 &amp; \tan \alpha \\
0 &amp; 1
\end{pmatrix}
=
\begin{pmatrix}
1 &amp; k_{x}\\
0 &amp; 1
\end{pmatrix}\\\\
\text{where } k_{x} \text{ is the shearing constant}
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Similarly, the transformation matrix to shear along the $y$ direction is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
=
\begin{pmatrix}
1 &amp; 0\\
\tan \beta &amp; 1
\end{pmatrix}
=
\begin{pmatrix}
1 &amp; 0\\
k_{y} &amp; 1
\end{pmatrix}\\\\
\text{where } k_{y} \text{ is the shearing constant}
\end{aligned}
$$
&lt;/div&gt;

&lt;h3 id=&#34;rotation&#34;&gt;Rotation&lt;/h3&gt;

&lt;p&gt;Rotations are yet a little bit more complex.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take a closer look at it with an example of rotating (around the origin)
from a angle $ \theta $ (theta).&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-rotation.gif&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1083x740&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-rotation.gif&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Cartesian plane rotation
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;$\underline{\text{Rotate by an angle } \theta}$&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Notice how the coordinates of $P$ and $P^{\prime}$ are the same in their
respective planes:
$P$ and $P^{\prime}$ have the same set of coordinates $ \left( x, y\right) $
in each planes.&lt;br /&gt;
But $P^{\prime}$ has &lt;strong&gt;&lt;em&gt;new coordinates&lt;/em&gt;&lt;/strong&gt;
$ \left( x^{\prime}, y^{\prime}\right) $ &lt;strong&gt;&lt;em&gt;in the first plane&lt;/em&gt;&lt;/strong&gt;, the one that
has not been rotated.&lt;/p&gt;

&lt;p&gt;We can now define the &lt;strong&gt;&lt;em&gt;relationship&lt;/em&gt;&lt;/strong&gt; between the
coordinates $ \left(x, y\right) $ and the new coordinates
$ \left(x^{\prime}, y^{\prime}\right) $, right?&lt;/p&gt;

&lt;p&gt;This is where &lt;a href=&#34;http://www.mathsisfun.com/algebra/trigonometry.html&#34;&gt;trigonometry&lt;/a&gt; helps again.&lt;/p&gt;

&lt;p&gt;While searching for the demonstration of this, I stumbled upon this
geometry based explanation
by &lt;a href=&#34;http://datagenetics.com/blog/august32013/&#34;&gt;Nick Berry&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=h11ljFJeaLo&#34;&gt;this video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To be honest, I&amp;rsquo;m not 100% comfortable with this solution, which means I didn&amp;rsquo;t
fully understand it. And also after re-reading what I&amp;rsquo;ve written, Hadrien
(one of the reviewers) and I have found &lt;strong&gt;my&lt;/strong&gt; explanation to be a bit
&lt;em&gt;awkward&lt;/em&gt;.&lt;br /&gt;
So I&amp;rsquo;m leaving it here in case you&amp;rsquo;re interested, but I suggest you
don&amp;rsquo;t bother unless you&amp;rsquo;re very curious and don&amp;rsquo;t mind a little confusion.&lt;/p&gt;

&lt;a class=&#34;fold title&#34; onclick=&#34;$(&#39;#rotation-matrix-explanation&#39;).toggleClass(&#39;hidden&#39;);&#34;&gt;[Show fuzzy explanation]&lt;/a&gt;
&lt;div id=&#34;rotation-matrix-explanation&#34; class=&#34;fold content hidden&#34;&gt;
  &lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-rotation.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1434x980&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-rotation.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Trigonometry triangles based on $\theta$
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;$\underline{\text{Unit vectors rotation by } \theta}$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;On this plane we see that $x$ (the blue line) can be expressed as the
&lt;strong&gt;addition&lt;/strong&gt; of the
&lt;span class=&#34;green-text&#34;&gt;adjacent side of the green triangle&lt;/span&gt;
&lt;strong&gt;plus&lt;/strong&gt;
&lt;span class=&#34;red-text&#34;&gt;the opposite side of the red triangle.&lt;/span&gt;&lt;br /&gt;
And $y$ as the &lt;strong&gt;subtraction&lt;/strong&gt; of
&lt;span class=&#34;green-text&#34;&gt;the opposite side of the green triangle&lt;/span&gt;
&lt;strong&gt;from&lt;/strong&gt;
&lt;span class=&#34;red-text&#34;&gt;the adjacent side of the red triangle&lt;/span&gt;.&lt;br /&gt;
We know that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\cos \left( \theta \right) &amp;= \frac{adjacent}{hypotenuse} \Rightarrow adjacent = hypotenuse \times \cos \left( \theta \right)\\\\
\sin \left( \theta \right) &amp;= \frac{opposite}{hypotenuse} \Rightarrow opposite = hypotenuse \times \sin \left( \theta \right)
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;So we can express our relationship as follows:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
&lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
x &amp; = \color{Green}a\color{Green}d\color{Green}j\color{Green}a\color{Green}c\color{Green}e\color{Green}n\color{Green}t + \color{Red}o\color{Red}p\color{Red}p\color{Red}o\color{Red}s\color{Red}i\color{Red}t\color{Red}e\\
&amp; = \color{Green}h\color{Green}y\color{Green}p\color{Green}o\color{Green}t\color{Green}e\color{Green}n\color{Green}u\color{Green}s\color{Green}e . \cos \left( \theta \right) + \color{Red}h\color{Red}y\color{Red}p\color{Red}o\color{Red}t\color{Red}e\color{Red}n\color{Red}u\color{Red}s\color{Red}e . \sin \left( \theta \right)\\
&amp; = x^{\prime} . \cos \left( \theta \right) + y^{\prime} . \sin \left( \theta \right)
\end{aligned}
$$
&lt;/div&gt;
&lt;div class=&#34;col-md-6&#34;&gt;
$$
\begin{aligned}
y &amp; = \color{Red}a\color{Red}d\color{Red}j\color{Red}a\color{Red}c\color{Red}e\color{Red}n\color{Red}t - \color{Green}o\color{Green}p\color{Green}p\color{Green}o\color{Green}s\color{Green}i\color{Green}t\color{Green}e\\
&amp; = \color{Red}h\color{Red}y\color{Red}p\color{Red}o\color{Red}t\color{Red}e\color{Red}n\color{Red}u\color{Red}s\color{Red}e . \cos \left( \theta \right) - \color{Green}h\color{Green}y\color{Green}p\color{Green}o\color{Green}t\color{Green}e\color{Green}n\color{Green}u\color{Green}s\color{Green}e . \sin \left( \theta \right)\\
&amp; = y^{\prime} . \cos \left( \theta \right) - x^{\prime} . \sin \left( \theta \right)\\
&amp; = -x^{\prime} . \sin \left( \theta \right) + y^{\prime} . \cos \left( \theta \right)
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In the end what we really have here is a system of equations that we can
represent as a $2 \times 2$ matrix:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix}
x\\
y
\end{pmatrix}
=
\begin{pmatrix}
\cos \theta &amp; \sin \theta\\
-\sin \theta &amp; \cos \theta
\end{pmatrix}
.
\begin{pmatrix}
x^{\prime}\\
y^{\prime}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;But this is not &lt;em&gt;exactly&lt;/em&gt; what we are looking for, right?&lt;br /&gt;
This defines the relationship to convert from the &lt;em&gt;new&lt;/em&gt; coordinates in the
original plane
$ \left(x^{\prime}, y^{\prime}\right) $
what are the coordinates $ \left(x, y\right) $ in the rotated
plane.&lt;br /&gt;
Whereas what we want to define is how to convert from the rotated plane
(the coordinates that we know) to the original plane.&lt;/p&gt;

&lt;p&gt;In order to do what we want, we need to take the same matrix, but define a
rotation of $ - \theta $.&lt;/p&gt;

&lt;p&gt;We know that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\cos \left( -\theta \right) &amp;= cos \left( \theta \right)\\
\sin \left( -\theta \right) &amp;= - sin \left( \theta \right)
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Which gives us our desired rotation matrix:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
=
\begin{pmatrix}
\cos \theta &amp; -\sin \theta\\
\sin \theta &amp; \cos \theta
\end{pmatrix}
$$
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;Now for the simple demonstration I&amp;rsquo;m going to go with the *&amp;ldquo;This position
vector &lt;em&gt;lands on&lt;/em&gt; this position vector&amp;rdquo;* route.&lt;/p&gt;

&lt;p&gt;Suppose you are zooming on the unit vectors like so:&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-rotation-unit.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1494x1020&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/2D-rotation-unit.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Unit vectors under rotation by $\underline{\theta}$
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Trigonometry triangles based on $\underline{\theta}$&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Based on the rules of trigonometry we&amp;rsquo;ve already seen, we have:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} 0\\ 1 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} \cos \theta \\ \sin \theta \end{pmatrix}
    $$&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} 1\\ 0 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} - \sin \theta \\ \cos \theta \end{pmatrix}
    $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Which means:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} x\\ y \end{pmatrix} =
    \begin{pmatrix} 1\\ 0 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} a.x+b.y\\ c.x+d.y \end{pmatrix} =
    \begin{pmatrix} \cos \theta \\ \sin \theta \end{pmatrix}
    $$&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} x\\ y \end{pmatrix} =
    \begin{pmatrix} 0\\ 1 \end{pmatrix}
    \text{ lands on }
    \begin{pmatrix} a.x+b.y\\ c.x+d.y \end{pmatrix} =
    \begin{pmatrix} - \sin \theta \\ \cos \theta \end{pmatrix}
    $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;From which we can deduce:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} 1.a+0.b\\ 1.c+0.d \end{pmatrix} =
    \begin{pmatrix} \cos \theta \\ \sin \theta \end{pmatrix}
    $$&lt;/div&gt;
    &lt;div class=&#34;col-md-6&#34;&gt;$$
    \begin{pmatrix} 0.a+1.b\\ 0.c+1.d \end{pmatrix} =
    \begin{pmatrix} - \sin \theta \\ \cos \theta \end{pmatrix}
    $$&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Easy to deduce $ a = \cos \left( \theta \right) $,
$ b = - \sin \left( \theta \right) $,
$ c = \sin \left( \theta \right) $ and $ d = \cos \left( \theta \right) $.&lt;/p&gt;

&lt;p&gt;Which gives us our desired rotation matrix:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b\\c &amp; d \end{pmatrix}
=
\begin{pmatrix}
\cos \theta &amp; -\sin \theta\\
\sin \theta &amp; \cos \theta
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Congratulations! You know of to define scaling, reflexion, shearing and rotation
transformation matrices. So what is missing?&lt;/p&gt;

&lt;h2 id=&#34;3x3-transformation-matrices&#34;&gt;3x3 transformation matrices&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re still with me at this point, maybe you&amp;rsquo;re wondering why any of this
is useful. If it&amp;rsquo;s the case, you missed the point of this article, which is to
&lt;strong&gt;&lt;em&gt;understand&lt;/em&gt;&lt;/strong&gt; affine transformations in order to apply them in code
&lt;span class=&#34;emoji&#34;&gt;:mortar_board:&lt;/span&gt;
.&lt;/p&gt;

&lt;p&gt;This is useful because at this point you know what a transformation matrix
looks like, and you know how to compute one given a few position vectors,
and it is also a great accomplishment by itself.&lt;/p&gt;

&lt;p&gt;But here&amp;rsquo;s the thing: $2 \times 2$ matrices are limited in the number of
operations we can perform. With a $2 \times 2$ matrix, the only transformations
we can do are the ones we&amp;rsquo;ve seen in the previous section:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scaling&lt;/li&gt;
&lt;li&gt;Reflexion&lt;/li&gt;
&lt;li&gt;Shearing&lt;/li&gt;
&lt;li&gt;Rotation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what are we missing? Answer: &lt;strong&gt;translations&lt;/strong&gt;!&lt;br /&gt;
And this is unfortunate, as translations are really useful, like when the user
pans and the image has to behave accordingly (aka. &lt;em&gt;follow the finger&lt;/em&gt;).&lt;br /&gt;
Translations are defined by the addition of two matrices :&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix}
x&#39;\\
y&#39;
\end{pmatrix}
=
\begin{pmatrix}
x\\
y
\end{pmatrix}
+
\begin{pmatrix}
t_{x}\\
t_{y}
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;But we want our user to be able to combine/chain transformations (like
zooming on a specific point which is not the origin), so we need to find a
way to express translations as matrices multiplications too.&lt;/p&gt;

&lt;p&gt;Here comes the world of &lt;a href=&#34;https://en.wikipedia.org/wiki/Homogeneous_coordinates&#34;&gt;Homogeneous coordinates&lt;/a&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No, you don&amp;rsquo;t &lt;em&gt;have&lt;/em&gt; to read it&lt;/strong&gt;, and no I don&amp;rsquo;t totally get it either&amp;hellip;&lt;/p&gt;

&lt;p&gt;The gist of it is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the Cartesian plane you&amp;rsquo;re used to, is really just one of many
planes that exist in the 3D space, and is at $ z = 1 $&lt;/li&gt;
&lt;li&gt;for any point $ \left(x, y, z\right)$ in the 3D space, the line in
the projecting space that is going through this point and the origin is
also passing through any point that is obtained by scaling
$x$, $y$ and $z$ by the same factor&lt;/li&gt;
&lt;li&gt;the coordinates of any of these points on the line is
$ \left(\frac{x}{z}, \frac{y}{z}, z\right)$.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/homogeneous-coordinates.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1433x1346&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/homogeneous-coordinates.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Homogeneous coordinates
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Homogeneous coordinates graphics&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I&amp;rsquo;ve collected a list of blog posts, articles and videos links at the end of
this post if you&amp;rsquo;re interested.&lt;/p&gt;

&lt;p&gt;Without further dig in, this is helping, because it says that we
can now represent any point in our Cartesian plane ($ z = 1 $) not only as
a $2 \times 1$ matrix, but also as a $3 \times 1$ matrix:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix}
x\\
y
\end{pmatrix}
\Leftrightarrow
\begin{pmatrix}
x\\
y\\
1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Which means we have to redefine all our previous transformation matrices,
because the product of a $3 \times 1$ matrix (position vector) by a
$2 \times 2$ matrix (transformation) is &lt;em&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;rsquo;t rage quit! It&amp;rsquo;s straightforward: $\mathbf{z^{\prime}=z}$!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have to find the transformation matrix $
\mathbf{A} =
\begin{pmatrix} a &amp;amp; b &amp;amp; c\\ d &amp;amp; e &amp;amp; f\\ g &amp;amp; h &amp;amp; i \end{pmatrix}
$&lt;/p&gt;

&lt;p&gt;If, like in the previous section, we imagine that we have the point
$ P_{\left(x, y, z\right)} $, which represents any point of
an object on the cartesian plane, then we want to find the matrix to transform
it into $ P^{\prime}_{\left(x^{\prime}, y^{\prime}, z^{\prime}\right)}$ such that&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime}\\z^{\prime} \end{pmatrix} =
\mathbf{A} . \begin{pmatrix} x\\y\\z \end{pmatrix} =
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
.
\begin{pmatrix} x\\y\\z \end{pmatrix}
$$
&lt;/div&gt;

&lt;h3 id=&#34;scaling-1&#34;&gt;Scaling&lt;/h3&gt;

&lt;p&gt;We are looking for $\mathbf{A}$ such that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime}\\z^{\prime} \end{pmatrix} =
\begin{pmatrix} s_{x}.x\\s_{y}.y\\z \end{pmatrix} =
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
.
\begin{pmatrix} x\\y\\z \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;We can solve the following system of equation in order to find $\mathbf{A}$:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= s_{x} . x\\
s_{x} . x &amp;= a . x + b . y + c . z\\\\
\Rightarrow
a &amp;= s_{x} \text{ and }\\
b &amp;= 0 \text{ and }\\
c &amp;= 0
\end{aligned}
$$
    &lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= s_{y} . y\\
s_{y} . y &amp;= d . x + e . y + f + z\\\\
\Rightarrow
d &amp;= s_{y} \text{ and }\\
e &amp;= 0 \text{ and }\\
f &amp;= 0
\end{aligned}
$$
    &lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
z^{\prime} &amp;= z\\
\Rightarrow
z &amp;= g . x + h . y + i + z\\
\Rightarrow
g &amp;= 0 \text{ and }\\
h &amp;= 0 \text{ and }\\
i &amp;= 1
\end{aligned}
$$
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The 3x3 scaling matrix for the factors
$ \left(s_{x}, s_{y}\right) $ is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
=
\begin{pmatrix} s_{x} &amp; 0 &amp;0\\0 &amp; s_{y} &amp; 0\\0 &amp; 0 &amp; 1\end{pmatrix}
$$
&lt;/div&gt;

&lt;h3 id=&#34;reflexion-1&#34;&gt;Reflexion&lt;/h3&gt;

&lt;p&gt;For a reflexion around the $x$ axis we are looking for $\mathbf{A}$ such
that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime}\\z^{\prime} \end{pmatrix} =
\begin{pmatrix} x\\-y\\z \end{pmatrix} =
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
.
\begin{pmatrix} x\\y\\z \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;We can solve the following system of equation in order to find $\mathbf{A}$:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= x\\
x &amp;= a . x + b . y + c . z\\\\
\Rightarrow
a &amp;= 1 \text{ and }\\
b &amp;= 0 \text{ and }\\
c &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= -y\\
-y &amp;= d . x + e . y + f . z\\\\
\Rightarrow
d &amp;= 0 \text{ and }\\
e &amp;= -1 \text{ and }\\
f &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
z^{\prime} &amp;= z\\
z &amp;= g . x + h . y + i . z\\\\
\Rightarrow
g &amp;= 0 \text{ and }\\
h &amp;= 0 \text{ and }\\
i &amp;= 1
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The transformation matrix to reflect around the $x$ axis is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
=
\begin{pmatrix}
1 &amp; 0 &amp; 0\\
0 &amp; -1 &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;For the reflexion around the $y$ axis we are looking for $\mathbf{A}$ such
that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime}\\z^{\prime} \end{pmatrix} =
\begin{pmatrix} x\\-y\\z \end{pmatrix} =
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
.
\begin{pmatrix} x\\y\\z \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;We can solve the following system of equation in order to find $\mathbf{A}$:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= -x\\
-x &amp;= a . x + b . y + c . z\\\\
\Rightarrow
a &amp;= -1 \text{ and }\\
b &amp;= 0 \text{ and }\\
c &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= y\\
y &amp;= d . x + e . y + f . z\\\\
\Rightarrow
d &amp;= 0 \text{ and }\\
e &amp;= 1 \text{ and }\\
f &amp;= 0
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
z^{\prime} &amp;= z\\
z &amp;= g . x + h . y + i . z\\\\
\Rightarrow
g &amp;= 0 \text{ and }\\
h &amp;= 0 \text{ and }\\
i &amp;= 1
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The transformation matrix to reflect around the $y$ axis is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
=
\begin{pmatrix}
-1 &amp; 0 &amp; 0\\
0 &amp; 1 &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;h3 id=&#34;shearing-1&#34;&gt;Shearing&lt;/h3&gt;

&lt;p&gt;Well, I&amp;rsquo;m a bit lazy here &lt;span class=&#34;emoji&#34;&gt;:hugging:&lt;/span&gt;
&lt;br /&gt;
You see the pattern, right? Third line always the same, third column always the
same.&lt;/p&gt;

&lt;p&gt;The transformation matrix to shear along the $x$ direction is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
&amp;=
\begin{pmatrix}
1 &amp; \tan \alpha &amp; 0\\
0 &amp; 1 &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
1 &amp; k_{x} &amp; 0\\
0 &amp; 1 &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
&amp; \text{where } k \text{ is the shearing constant}
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Similarly, the transformation matrix to shear along the $y$ direction is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
&amp;=
\begin{pmatrix}
1 &amp; 0 &amp; 0\\
\tan \beta &amp; 1 &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
1 &amp; 0 &amp; 0\\
k_{y} &amp; 1 &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
&amp; \text{where } k \text{ is the shearing constant}
\end{aligned}
$$
&lt;/div&gt;

&lt;h3 id=&#34;rotating&#34;&gt;Rotating&lt;/h3&gt;

&lt;p&gt;Same pattern, basically we just take the $2 \times 2$ rotation matrix
and add one row and one column whose entries are $0$, $0$ and $1$.&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
=
\begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; 0\\
\sin \theta &amp; \cos \theta &amp; 0\\
0 &amp; 0 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;But you can do the math, if you want
&lt;span class=&#34;emoji&#34;&gt;:stuck_out_tongue_winking_eye:&lt;/span&gt;
&lt;/p&gt;

&lt;h3 id=&#34;translation&#34;&gt;Translation&lt;/h3&gt;

&lt;p&gt;And now it gets interesting, because we can define translations as
$3 \times 3$ matrices multiplication!&lt;/p&gt;

&lt;p&gt;We are looking for $\mathbf{A}$ such that:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} x^{\prime}\\y^{\prime}\\z^{\prime} \end{pmatrix} =
\begin{pmatrix} x+t_{x}\\y+t_{y}\\z \end{pmatrix} =
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
.
\begin{pmatrix} x\\y\\z \end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;We can solve the following system of equation in order to find $\mathbf{A}$:&lt;/p&gt;

&lt;div class=&#34;row row-same-height&#34;&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
x^{\prime} &amp;= x + t_{x} \\
x + t_{x} &amp;= a . x + b . y + c . z\\\\
\Rightarrow
a &amp;= 1 \text{ and }\\
b &amp;= 0 \text{ and }\\
c &amp;= t_{x}
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
y^{\prime} &amp;= y + t_{y}\\
y + t_{y} &amp;= d . x + e . y + f . z\\\\
\Rightarrow
d &amp;= 0 \text{ and }\\
e &amp;= 1 \text{ and }\\
f &amp;= t_{y}
\end{aligned}
$$
&lt;/div&gt;
    &lt;div class=&#34;col-md-4&#34;&gt;
$$
\begin{aligned}
z^{\prime} &amp;= z\\
z &amp;= g . x + h . y + i . z\\\\
\Rightarrow
g &amp;= 0 \text{ and }\\
h &amp;= 0 \text{ and }\\
i &amp;= 1
\end{aligned}
$$
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The $3 \times 3$ translation matrix for the translation
$ \left(t_{x}, t_{y}\right) $ is:&lt;/p&gt;

&lt;div&gt;
$$
\begin{pmatrix} a &amp; b &amp; c\\d &amp; e &amp; f\\g &amp; h &amp; i\end{pmatrix}
=
\begin{pmatrix} 1 &amp; 0 &amp; t_{x}\\0 &amp; 1 &amp; t_{y}\\0 &amp; 0 &amp; 1\end{pmatrix}
$$
&lt;/div&gt;

&lt;h2 id=&#34;matrices-wrap-up&#34;&gt;Matrices wrap-up&lt;/h2&gt;

&lt;p&gt;Obviously, you won&amp;rsquo;t have to go into all of these algebra stuff each
time you want to know what is the matrix you need to apply in order to do
your transformations.&lt;/p&gt;

&lt;p&gt;You can just use the following:&lt;/p&gt;

&lt;h3 id=&#34;reminder&#34;&gt;Reminder&lt;/h3&gt;

&lt;p&gt;Translation matrix:
$\begin{pmatrix}1 &amp;amp; 0 &amp;amp; t_{x}\\0 &amp;amp; 1 &amp;amp; t_{y}\\0 &amp;amp; 0 &amp;amp; 1\end{pmatrix}$&lt;/p&gt;

&lt;p&gt;Scaling matrix:
$\begin{pmatrix}s_{x} &amp;amp; 0 &amp;amp; 0\\0 &amp;amp; s_{y} &amp;amp; 0\\0 &amp;amp; 0 &amp;amp; 1\end{pmatrix}$&lt;/p&gt;

&lt;p&gt;Shear matrix:
$\begin{pmatrix}1 &amp;amp; \tan \alpha &amp;amp; 0\\\tan \beta &amp;amp; 1 &amp;amp; 0\\0 &amp;amp; 0 &amp;amp; 1\end{pmatrix} =
\begin{pmatrix}1 &amp;amp; k_{x} &amp;amp; 0\\k_{y} &amp;amp; 1 &amp;amp; 0\\0 &amp;amp; 0 &amp;amp; 1\end{pmatrix}$&lt;/p&gt;

&lt;p&gt;Rotation matrix:
$\begin{pmatrix}\cos \theta &amp;amp; -\sin \theta &amp;amp; 0\\\sin \theta &amp;amp; \cos \theta &amp;amp; 0\\0 &amp;amp; 0 &amp;amp; 1\end{pmatrix}$&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s neat! Now you can define your matrices easily, plus you know how it
works.&lt;/p&gt;

&lt;p&gt;One last thing: all the transformations we&amp;rsquo;ve seen are &lt;strong&gt;&lt;em&gt;centered around the
origin&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;
How do we apply what we know in order to, for instance, zoom on a
specific point which is &lt;strong&gt;not&lt;/strong&gt; the origin, or rotate an object &lt;strong&gt;in place&lt;/strong&gt;,
around its center?&lt;/p&gt;

&lt;p&gt;The answer is &lt;strong&gt;&lt;em&gt;composition&lt;/em&gt;&lt;/strong&gt;: We must &lt;em&gt;compose&lt;/em&gt; our transformations by using
several other transformations.&lt;/p&gt;

&lt;h3 id=&#34;combination-use-case-pinch-zoom&#34;&gt;Combination use-case: pinch-zoom&lt;/h3&gt;

&lt;p&gt;Imagine you have a shape, like a square for instance, and you want to zoom in
at the center of the square, to mimic a pinch-zoom behaviour
&lt;span class=&#34;emoji&#34;&gt;:mag:&lt;/span&gt;
&lt;br /&gt;
This transformation is composed of the following sequence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;move anchor point to origin: $ \left( -t_{x}, -t_{y} \right) $&lt;/li&gt;
&lt;li&gt;scale by $ \left( s_{x}, s_{y} \right) $&lt;/li&gt;
&lt;li&gt;move back anchor point: $ \left( t_{x}, t_{y} \right) $&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Where $t$ is the anchor point of our scaling transformation (the center of
the square).&lt;/p&gt;

&lt;p&gt;Our transformations are defined by the first translation matrix
$ \mathbf{C} $, the scaling matrix $ \mathbf{B} $, and the last
translation matrix $ \mathbf{A} $.&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{C} =
\begin{pmatrix}
1 &amp; 0 &amp; -t_{x} \\
0 &amp; 1 &amp; -t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
\text{ , }
\mathbf{B} =
\begin{pmatrix}
s_{x} &amp; 0 &amp; 0 \\
0 &amp; s_{y} &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
\text{ and }
\mathbf{A} =
\begin{pmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;Because matrix multiplication is non-commutative, the order matters, so we will
apply them in reverse order (hence the reverse naming order).&lt;br /&gt;
The composition of these transformations gives us the following product:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\mathbf{A} . \mathbf{B} . \mathbf{C}
&amp;=
\begin{pmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
s_{x} &amp; 0 &amp; 0 \\
0 &amp; s_{y} &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
1 &amp; 0 &amp; -t_{x} \\
0 &amp; 1 &amp; -t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
s_{x} &amp; 0 &amp; -s_{x}.t_{x} \\
0 &amp; s_{y} &amp; -s_{y}.t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
\mathbf{A} . \mathbf{B} . \mathbf{C}
&amp;=
\begin{pmatrix}
s_{x} &amp; 0 &amp; -s_{x}.t_{x} + t_{x} \\
0 &amp; s_{y} &amp; -s_{y}.t_{y} + t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Suppose we have the following points representing a square:
$\begin{pmatrix}x_{1} &amp;amp; x_{2} &amp;amp; x_{3} &amp;amp; x_{4}\\y_{1} &amp;amp; y_{2} &amp;amp; y_{3} &amp;amp; y_{4}\\1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1\end{pmatrix} =
\begin{pmatrix}2 &amp;amp; 4 &amp;amp; 4 &amp;amp; 2\\1 &amp;amp; 1 &amp;amp; 3 &amp;amp; 3\\1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1\end{pmatrix}$&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/pinch-zoom-init.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1032x587&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/pinch-zoom-init.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Pinch-zoom four points demo
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Pinch-zoom four points demo&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And we want to apply a 2x zoom focusing on its center.&lt;br /&gt;
The new coordinates will be:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\begin{pmatrix}
x_{1}^{\prime} &amp; x_{2}^{\prime} &amp; x_{3}^{\prime} &amp; x_{4}^{\prime}\\
y_{1}^{\prime} &amp; y_{2}^{\prime} &amp; y_{3}^{\prime} &amp; y_{4}^{\prime}\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}
&amp;=
\begin{pmatrix}
s_{x} &amp; 0 &amp; -s_{x}.t_{x} + t_{x} \\
0 &amp; s_{y} &amp; -s_{y}.t_{y} + t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
x_{1} &amp; x_{2} &amp; x_{3} &amp; x_{4}\\
y_{1} &amp; y_{2} &amp; y_{3} &amp; y_{4}\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
2 &amp; 0 &amp; -2.3 + 3 \\
0 &amp; 2 &amp; -2.2 + 2 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
2 &amp; 4 &amp; 4 &amp; 2\\
1 &amp; 1 &amp; 3 &amp; 3\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
2 &amp; 0 &amp; -3 \\
0 &amp; 2 &amp; -2 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
2 &amp; 4 &amp; 4 &amp; 2\\
1 &amp; 1 &amp; 3 &amp; 3\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}\\\\
\begin{pmatrix}
x_{1}^{\prime} &amp; x_{2}^{\prime} &amp; x_{3}^{\prime} &amp; x_{4}^{\prime}\\
y_{1}^{\prime} &amp; y_{2}^{\prime} &amp; y_{3}^{\prime} &amp; y_{4}^{\prime}\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}
&amp;=
\begin{pmatrix}
1 &amp; 5 &amp; 5 &amp; 1\\
0 &amp; 0 &amp; 4 &amp; 4\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/pinch-zoom.gif&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1214x691&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/pinch-zoom.gif&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Pinch-zoom four points demo
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Pinch-zoom four points demo&lt;/div&gt;
&lt;/div&gt;


&lt;h3 id=&#34;combination-use-case-rotate-image&#34;&gt;Combination use-case: rotate image&lt;/h3&gt;

&lt;p&gt;Now imagine you have an image in a view, the origin is not a the center of the
view, it is probably at the top-left corner (implementations may vary),
but you want to rotate the image at the center of the view
&lt;span class=&#34;emoji&#34;&gt;:upside_down:&lt;/span&gt;
&lt;br /&gt;
This transformation is composed of the following sequence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;move anchor point to origin: $ \left( -t_{x}, -t_{y} \right) $&lt;/li&gt;
&lt;li&gt;rotate by $ \theta $&lt;/li&gt;
&lt;li&gt;move back anchor point: $ \left( t_{x}, t_{y} \right) $&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Where $t$ is the anchor point of our rotation transformation.&lt;/p&gt;

&lt;p&gt;Our transformations are defined by the first translation matrix
$ \mathbf{C} $, the rotation matrix $ \mathbf{B} $, and the last
translation matrix $ \mathbf{A} $.&lt;/p&gt;

&lt;div&gt;
$$
\mathbf{C} =
\begin{pmatrix}
1 &amp; 0 &amp; -t_{x} \\
0 &amp; 1 &amp; -t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
\text{ , }
\mathbf{B} =
\begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; 0 \\
\sin \theta &amp; \cos \theta &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
\text{ and }
\mathbf{A} =
\begin{pmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
$$
&lt;/div&gt;

&lt;p&gt;The composition of these transformations gives us the following product:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\mathbf{A} . \mathbf{B} . \mathbf{C}
&amp;=
\begin{pmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; 0 \\
\sin \theta &amp; \cos \theta &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
1 &amp; 0 &amp; -t_{x} \\
0 &amp; 1 &amp; -t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; -\cos \theta.t_{x} +\sin \theta.t_{y} \\
\sin \theta &amp; \cos \theta &amp; -\sin \theta.t_{x} -\cos \theta.t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}\\\\
\mathbf{A} . \mathbf{B} . \mathbf{C}
&amp;=
\begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; -\cos \theta.t_{x} +\sin \theta.t_{y} + t_{x} \\
\sin \theta &amp; \cos \theta &amp; -\sin \theta.t_{x} -\cos \theta.t_{y} + t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;

&lt;p&gt;Suppose we have the following points representing a square:
$\begin{pmatrix}x_{1} &amp;amp; x_{2} &amp;amp; x_{3} &amp;amp; x_{4}\\y_{1} &amp;amp; y_{2} &amp;amp; y_{3} &amp;amp; y_{4}\\1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1\end{pmatrix} =
\begin{pmatrix}2 &amp;amp; 4 &amp;amp; 4 &amp;amp; 2\\1 &amp;amp; 1 &amp;amp; 3 &amp;amp; 3\\1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1\end{pmatrix}$&lt;/p&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/rotate-image-init.png&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1032x587&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/rotate-image-init.png&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Rotate image (four points demo)
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Rotate image (four points demo)&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And we want to apply a rotation of $ \theta = 90^{\circ} $ focusing on its center.&lt;br /&gt;
The new coordinates will be:&lt;/p&gt;

&lt;div&gt;
$$
\begin{aligned}
\begin{pmatrix}
x_{1}^{\prime} &amp; x_{2}^{\prime} &amp; x_{3}^{\prime} &amp; x_{4}^{\prime}\\
y_{1}^{\prime} &amp; y_{2}^{\prime} &amp; y_{3}^{\prime} &amp; y_{4}^{\prime}\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}
&amp;=
\begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; -\cos \theta.t_{x} +\sin \theta.t_{y} + t_{x} \\
\sin \theta &amp; \cos \theta &amp; -\sin \theta.t_{x} -\cos \theta.t_{y} + t_{y} \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
x_{1} &amp; x_{2} &amp; x_{3} &amp; x_{4}\\
y_{1} &amp; y_{2} &amp; y_{3} &amp; y_{4}\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
0 &amp; -1 &amp; -0.3+1.2+3 \\
1 &amp; 0  &amp; -1.3-0.2+2 \\
0 &amp; 0  &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
2 &amp; 4 &amp; 4 &amp; 2\\
1 &amp; 1 &amp; 3 &amp; 3\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}\\\\
&amp;=
\begin{pmatrix}
0 &amp; -1 &amp; 5 \\
1 &amp; 0 &amp; -1 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
.
\begin{pmatrix}
2 &amp; 4 &amp; 4 &amp; 2\\
1 &amp; 1 &amp; 3 &amp; 3\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}\\\\
\begin{pmatrix}
x_{1}^{\prime} &amp; x_{2}^{\prime} &amp; x_{3}^{\prime} &amp; x_{4}^{\prime}\\
y_{1}^{\prime} &amp; y_{2}^{\prime} &amp; y_{3}^{\prime} &amp; y_{4}^{\prime}\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}
&amp;=
\begin{pmatrix}
4 &amp; 4 &amp; 2 &amp; 2\\
1 &amp; 3 &amp; 3 &amp; 1\\
1 &amp; 1 &amp; 1 &amp; 1
\end{pmatrix}
\end{aligned}
$$
&lt;/div&gt;

&lt;div class=&#34;gallery&#34; itemscope itemtype=&#34;http://schema.org/ImageGallery&#34;&gt;

  &lt;figure itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
  &lt;a href=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/rotate-image.gif&#34; itemprop=&#34;contentUrl&#34; data-size=&#34;1032x587&#34;&gt;
      &lt;img src=&#34;http://i-rant.arnaudbos.com/img/matrices-for-developers/rotate-image.gif&#34; itemprop=&#34;thumbnail&#34;
        
        
        width=&#34;80%&#34;
        height=&#34;142&#34;
        /&gt;
  &lt;/a&gt;

  &lt;figcaption itemprop=&#34;caption description&#34;&gt;
    Rotate image (four points demo)
    &lt;span itemprop=&#34;copyrightHolder&#34;&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div class=&#34;title&#34;&gt;Rotate image (four points demo)&lt;/div&gt;
&lt;/div&gt;


&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;I want to address my warmest thank you to the following people, who helped me
during the review process of this article, by providing helpful feedbacks and
advices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Igor Laborie (&lt;a href=&#34;https://twitter.com/ilaborie&#34;&gt;@ilaborie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hadrien Toma (&lt;a href=&#34;https://twitter.com/HadrienToma&#34;&gt;@HadrienToma&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/arnaudbos/i-rant/tree/develop/static/code/matrices-for-developers&#34;&gt;All the Geogebra files I&amp;rsquo;ve used to generate the graphics and gifs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.khanacademy.org/math/algebra-home/alg-matrices&#34;&gt;Khan Academy algebra course on matrices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cs.utexas.edu/~fussell/courses/cs384g-fall2010/lectures/lecture07-Affine.pdf&#34;&gt;A course on &amp;ldquo;Affine Transformation&amp;rdquo; at The University of Texas at Austin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://web.cse.ohio-state.edu/~whmin/courses/cse5542-2013-spring/6-Transformation_II.pdf&#34;&gt;A course on &amp;ldquo;Composing Transformations&amp;rdquo; at The Ohio State University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://datagenetics.com/blog/august32013/&#34;&gt;A blogpost on &amp;ldquo;Rotating images&amp;rdquo; by Nick Berry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=h11ljFJeaLo&#34;&gt;A Youtube video course on &amp;ldquo;The Rotation Matrix&amp;rdquo; by Michael J. Ruiz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Homogeneous_coordinates&#34;&gt;Wikipedia on Homogeneous coordinates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tomdalling.com/blog/modern-opengl/explaining-homogenous-coordinates-and-projective-geometry/&#34;&gt;A blogpost on &amp;ldquo;Explaining Homogeneous Coordinates &amp;amp; Projective Geometry&amp;rdquo; by Tom Dalling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.songho.ca/math/homogeneous/homogeneous.html&#34;&gt;A blogpost on &amp;ldquo;Homogeneous Coordinates&amp;rdquo; by Song Ho Ahn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Xzu8_Fe3ImI&#34;&gt;A Youtube video course on &amp;ldquo;2D transformations and homogeneous coordinates&amp;rdquo; by Tarun Gehlot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>I blog</title>
      <link>http://i-rant.arnaudbos.com/start-blog/</link>
      <pubDate>Mon, 07 Nov 2016 12:55:28 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/start-blog/</guid>
      <description>

&lt;h2 id=&#34;what-s-this-post-about&#34;&gt;What&amp;rsquo;s this post about?&lt;/h2&gt;

&lt;p&gt;Publishing stuff and things.&lt;/p&gt;

&lt;h5 id=&#34;is-it-any-good&#34;&gt;Is it any good?&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;http://news.ycombinator.com/item?id=3067434&#34;&gt;Yes&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EclipseCon France 2016 — Review</title>
      <link>http://i-rant.arnaudbos.com/eclipsecon-france-2016-review/</link>
      <pubDate>Wed, 13 Jul 2016 12:55:28 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/eclipsecon-france-2016-review/</guid>
      <description>


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/eclipsecon-france-2016-review/eclipsecon.jpg&#34; alt=&#34;Picture taken during the Keynote&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Keynote&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;p&gt;This ear, I&amp;rsquo;ve been given the opportunity to attend the French edition of the EclipseCon. It&amp;rsquo;s been the first time I could attend an event of this nature with Keynotes, workshops, talks and demos on various topics, informal talks with other attendees and speakers.&lt;/p&gt;

&lt;p&gt;Bellow is a feedback on &lt;strong&gt;my&lt;/strong&gt; experience of the EclipseCon France 2016.&lt;/p&gt;

&lt;p&gt;Schedule: &lt;a href=&#34;https://www.eclipsecon.org/france2016/conference/schedule/session/2016-06-07&#34;&gt;https://www.eclipsecon.org/france2016/conference/schedule/session/2016-06-07&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;connecting-low-power-iot-devices-with-lora-mqtt-and-the-things-network&#34;&gt;Connecting low power IoT devices with LoRa, MQTT, and The Things Network&lt;/h2&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/eclipsecon-france-2016-review/iot.png&#34; alt=&#34;Eclipse IoT logo&#34;
            width=&#34;280px&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;br /&gt;
From my point of view, &lt;a href=&#34;http://iot.eclipse.org/&#34;&gt;IoT&lt;/a&gt; really was an important topic this year in Toulouse, most notably because of the presence of &lt;a href=&#34;https://www.thethingsnetwork.org/&#34;&gt;The Things Network&lt;/a&gt;, who&amp;rsquo;s been invited by the Eclipse Foundation to lead a workshop and give the first Keynote of the conference.&lt;/p&gt;

&lt;p&gt;This team, from Amsterdam, wants to federate people and communities anywhere in the world around their worldwide network dedicated to connected devices, based on the LoRa technology.&lt;/p&gt;

&lt;p&gt;So, what is LoRa? And what is The Things Network?&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;lora&#34;&gt;LoRa&lt;/h3&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/eclipsecon-france-2016-review/lora.png&#34; alt=&#34;LoRaWan logo&#34;
            width=&#34;280px&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;Taken from the &lt;a href=&#34;https://www.lora-alliance.org/&#34;&gt;LoRa Alliance&lt;/a&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoRa is a diminutive for LoRaWAN™: Low Power Wide Area Network (LPWAM).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Without going into too much details (that I don&amp;rsquo;t master anyways), here&amp;rsquo;s what I can say:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;LoRa is a free and open wireless specification based on ISM radios bands (&lt;a href=&#34;https://en.wikipedia.org/wiki/ISM_band&#34;&gt;https://en.wikipedia.org/wiki/ISM_band&lt;/a&gt;).&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This technology particularly fits in as a network layer for communication of small, connected devices because it allows for localization and mobility of devices, low consumption, does not need a big or existing previous installation, and communication can go both ways (bi-directional).&lt;/p&gt;

&lt;p&gt;With a single antenna on top of a building in an urban area, or in fields, LoRa allows the connection of thousands of devices without loss, far more than a classic wireless gateway (WiFi, Bluetooth) and energy consumption is kept low and is less costly that a 3G gateway.&lt;/p&gt;

&lt;p&gt;A few examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Power networks: predict consumption and adapt to real needs&lt;/li&gt;
&lt;li&gt;Logistics: accurate delivery and moving targets&lt;/li&gt;
&lt;li&gt;Transportation: emergency calls&lt;/li&gt;
&lt;li&gt;Health: embedded measuring devices&lt;/li&gt;
&lt;li&gt;And a lot more&amp;hellip; all that wirelessly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LoRa competes with the &lt;a href=&#34;https://sigfox.com/&#34;&gt;Sigfox&lt;/a&gt; technology, that you&amp;rsquo;re obviously aware of if you&amp;rsquo;re working/living in Toulouse like I do. Nonetheless, the two have different approaches, as Sigfox&amp;rsquo;s technology is proprietary and implies license costs, whereas the LoRa specification is free and open.&lt;/p&gt;

&lt;p&gt;Some measures made by The Things Network, as well as a few tech characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dense urban environment: 500m to 3km&lt;/li&gt;
&lt;li&gt;Rural environment: 10-50km (up to 92km over lands)&lt;/li&gt;
&lt;li&gt;Up to 10.000 devices per gateway&lt;/li&gt;
&lt;li&gt;Up to 3 years batteries&lt;/li&gt;
&lt;li&gt;Very low consumption (and no &amp;ldquo;handshake&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Free, open license, in both emit and receive&lt;/li&gt;
&lt;li&gt;No previous installation required&lt;/li&gt;
&lt;li&gt;Multi-coverage (multiple gateways can relay the information)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Devices connecting to a LoRa network can be sorted into three categories:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;A) Uplink only, device initiates the communication and server can answer;
B) Device and network are in sync on a shooting window the data exchange;
C) Device constantly listening for updates.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course consumption depends on device category.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;the-things-network&#34;&gt;The Things Network&lt;/h3&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/eclipsecon-france-2016-review/ttn.png&#34; alt=&#34;The Things Network logo&#34;
            width=&#34;280px&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;a href=&#34;https://www.thethingsnetwork.org/&#34;&gt;The Things Network&lt;/a&gt; is a project born in Amsterdam, the goal is to build a worldwide, open distributed network for IoT devices.&lt;/p&gt;

&lt;p&gt;Following a crowdfunding campaign, the team has started to create a Web platform in order to allow connection of devices via brokers.&lt;/p&gt;

&lt;p&gt;All the source code of The Things Network is &lt;a href=&#34;https://github.com/TheThingsNetwork/&#34;&gt;open source and available on Github&lt;/a&gt;, according to their commitment to allow a vast adoption of these technologies.&lt;/p&gt;

&lt;p&gt;In parallel, their business entity sells &lt;a href=&#34;https://shop.thethingsnetwork.com/&#34;&gt;Starter kits&lt;/a&gt; for education purposes as well as gateways, and participates in workshops and trainings to allow people to equip their homes/neighborhoods/towns and initiate a global coverage movement.&lt;/p&gt;

&lt;p&gt;There already are communities around the world, mostly in Europe at this time. Those communities were sometimes initiated by the team members of The Things Network, who travel a lot to advocate for their project and the LoRa technology, and sometimes communities are spontaneously created by local people.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;what-every-java-developer-should-know-about-angularjs&#34;&gt;What every Java developer should know about AngularJS&lt;/h2&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/eclipsecon-france-2016-review/angular.png&#34; alt=&#34;AngularJS logo&#34;
            width=&#34;280px&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;Everything&amp;rsquo;s in the title.&lt;/p&gt;

&lt;p&gt;This workshop was intended to developers who are more familiar with backend technologies and wanted to have an introduction at the most famous front-end framework of the moment: &lt;a href=&#34;https://angularjs.org/&#34;&gt;AngularJS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The was articulated about an introduction to controllers, scopes, services and directives, based on a tiny project example.&lt;/p&gt;

&lt;p&gt;As a full-stack developer I think this workshop was well adapted to its audience, with an iterative process in order to introduce new concepts in turn on the tiny project.&lt;/p&gt;

&lt;p&gt;The speakers chose to have &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; at the basis of their example, in order to keep their audience, more used to classical object architectures than ECMAScript, in their comfort zone. My co-attendees had the occasion to have their feet wet in a project architecture modeled around interfaces and implementations, with generic types and inheritance. On the other hand, they&amp;rsquo;ve had to deal with the poor front-end development tooling of the Eclipse IDE.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s talk about tooling.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;tooling&#34;&gt;Tooling&lt;/h2&gt;

&lt;p&gt;This year we (the attendees) had a lot of choice regarding sessions about the Eclipse tooling. Here are is a feedback on the tools I&amp;rsquo;ve been presented.&lt;/p&gt;

&lt;h3 id=&#34;jsdt-2-0&#34;&gt;JSDT 2.0&lt;/h3&gt;

&lt;p&gt;This talk was dedicated to the new version of the JavaScript Development Tools (JSDT), currently under development.&lt;/p&gt;

&lt;p&gt;The objectives of JSDT 2.0 are to support the tools and methods of the current state of the art of modern JavaScript development.&lt;/p&gt;

&lt;p&gt;At the moment, JSDT 2.0 benefits from a new parser, more powerful and robust than the previous one, which is able to handle the ECMAScript 6 specification.&lt;/p&gt;

&lt;p&gt;The other objectives are centered around the integration of packets managers (npm / bower), task builders (grunt, gulp), support of Node.js, and additional tools for debugging and browsers integrations (Chrome).&lt;/p&gt;

&lt;h3 id=&#34;the-state-of-docker-and-vagrant-tooling-in-eclipse&#34;&gt;The State of Docker and Vagrant Tooling in Eclipse&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s been a few month I got myself interested in &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; and &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; and started to mess with them, especially for development and integration environments. The idea to setup and share with teams/contributors an immutable infrastructure and repeatable deployment processes is very exciting.&lt;/p&gt;

&lt;p&gt;In this talk, I&amp;rsquo;ve been showcased two Eclipse plugins, one for &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; integration and the other one for &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; integration.&lt;/p&gt;

&lt;p&gt;At the moment, the two plugins provide new &amp;ldquo;perspectives&amp;rdquo; to the Eclipse IDE, allowing to do everything (I mean, almost everything) you can do on the command line:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create and manage Vagrant boxes&lt;/li&gt;
&lt;li&gt;Configure your Vagrantfile&lt;/li&gt;
&lt;li&gt;Create and manage virtual machines&lt;/li&gt;
&lt;li&gt;Create and manage Docker images&lt;/li&gt;
&lt;li&gt;List and manage Docker containers&lt;/li&gt;
&lt;li&gt;Edit Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m a little bit disappointed, even though I personally don&amp;rsquo;t have an affinity for IDE integrations of command lines tools (I like my git separated from my IDE for instance).&lt;/p&gt;

&lt;p&gt;Anyway it&amp;rsquo;s worth mentioning that all the developments made on these plugins are the work of developers who are doing it for free, there are not a lot of them, and like everybody else they have to mow their lawn and fix their home on weekends.
So thanks guys, and keep up the good work.&lt;/p&gt;

&lt;h2 id=&#34;continuous-delivery-pipeline-as-code-with-jenkins&#34;&gt;Continuous Delivery: Pipeline As Code With Jenkins&lt;/h2&gt;


&lt;figure  style=&#34;text-align: center;&#34;&gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/eclipsecon-france-2016-review/jenkins.png&#34; alt=&#34;Jenkins CI logo&#34;
            width=&#34;280px&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;I was very enthusiast to attend this talk. I&amp;rsquo;m very interested in the opportunity to manage build jobs in a pipeline-shaped way. I&amp;rsquo;m also interested in &amp;ldquo;Continuous Delivery&amp;rdquo; and in &amp;ldquo;Continuous Deployment&amp;rdquo; for that matter.&lt;/p&gt;

&lt;p&gt;So what was this talk about ? Mainly what I could describe as the ability of orchestration, interruption and resilience of build jobs. Nothing less&amp;hellip;&lt;/p&gt;

&lt;p&gt;Like said in &lt;a href=&#34;http://batmat.github.io/presentations/jenkins-pipeline-as-code/prez.html&#34;&gt;the slides&lt;/a&gt;, what happens when you have fairly complicated build jobs, requiring operator inputs and possibly the ability to run in parallel?&lt;/p&gt;

&lt;p&gt;Apart from creating multiple individual jobs, that you can link or chain later on, leave alone fail-fast and parallelism, there is no idiomatic way to do.&lt;/p&gt;

&lt;p&gt;This is the kind of problems &amp;ldquo;Jenkins Pipeline Plugins&amp;rdquo;, which is in reality, a set of plugins, is try to solve. At the core of it is a DSL, the &amp;ldquo;Pipeline DSL&amp;rdquo;, allowing to chain builds, as steps, and attach to each a set of configuration options, like parallelism for instance.&lt;/p&gt;

&lt;p&gt;It becomes possible, for example, to configure a few dozens look-alike (small variation) jobs shaping the basis (the dependencies of a cascading build job) and trigger the execution of all these builds in parallel, before the execution of the next build job which depends upon them. All of this while specifying that the &lt;strong&gt;complete&lt;/strong&gt; build sequence should stop in case of a failure of any of the base builds (fail-fast).&lt;/p&gt;

&lt;p&gt;For the record, the speaker showcased this example exactly, on a &lt;a href=&#34;https://www.docker.com/products/docker-swarm/&#34;&gt;Docker Swarm&lt;/a&gt; build cluster provided by a cloud provider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;336 CPUs&lt;/li&gt;
&lt;li&gt;1.032 TiB RAM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don&amp;rsquo;t we all have one like that in our basement?&lt;/p&gt;

&lt;p&gt;Anyways, I was really curious about the choice of a DSL, instead of a fully declarative description of the build pipeline thanks to configuration file(s).
It&amp;rsquo;s easy to envision how to describe via simple data structures like maps and collections, the orchestration of jobs and the description of each step.&lt;/p&gt;

&lt;p&gt;I did not get a clear answer except that: most of the contributors being Java developers, a DSL (which really looks like Java by the way) seemed a natural choice.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve fully enjoyed my first time at a conference. The organization was perfect and the quality of the speakers was very satisfying.&lt;/p&gt;

&lt;p&gt;I will be please to come over next year at the EclipseCon France 2017, and I recommend to any developer having the opportunity to attend it, to do so without hesitation.&lt;/p&gt;

&lt;p&gt;All of the Keynotes and talks have been video recorded and are available on the Eclipse Foundation&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/playlist?list=PLy7t4z5SYNaRJff0KBMbubOaj8gevvML4&#34;&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nabaztag/tag internals</title>
      <link>http://i-rant.arnaudbos.com/nabaztagtag-internals/</link>
      <pubDate>Mon, 06 Jun 2016 15:00:36 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/nabaztagtag-internals/</guid>
      <description>


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/Nabaztag.jpg&#34; alt=&#34;Photo of a dismantled Nabaztag/tag&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Nabaztag/tag&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Updated&lt;/strong&gt;: June 15th, 2016&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Created&lt;/strong&gt;: June 6th, 2016&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: Detail what&amp;rsquo;s inside a Nabaztag/tag, with components references when possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;I&amp;rsquo;m obviously not the first one trying to recycle my Nabaztag. Previous dissections have been done by others so I will reuse what they have done and will keep it here as a reference for my own usage.&lt;/p&gt;

&lt;p&gt;Most of the information on this page come from &lt;a href=&#34;http://petertyser.com/nabaztag-nabaztagtag-dissection/&#34;&gt;this guy&lt;/a&gt;, so &lt;em&gt;thank you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Pictures are from multiple sources (links at the bottom of this page) and I&amp;rsquo;ve made my own, mostly because I didn&amp;rsquo;t find pictures detailing the ears mechanism (DC motors, pulleys-belt and IR encoders).&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll notice my Nabaztag/tag&amp;rsquo;s plastic body turned a bit yellowish with the years, I&amp;rsquo;ll try to fix this with the &lt;a href=&#34;https://en.wikipedia.org/wiki/Retr0bright&#34;&gt;Retr0bright chemical mixture&lt;/a&gt; later on.&lt;/p&gt;

&lt;h2 id=&#34;front-view&#34;&gt;Front view&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/1-Front-view.jpg&#34; alt=&#34;Picture of Nabaztag/tag front view&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;




&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/5-Inside-front.jpg&#34; alt=&#34;Picture of Nabaztag/tag opened front view&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;So from this point of view we can see (top/down):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A button at the top;&lt;/li&gt;
&lt;li&gt;Two rotating, magnetic placeholders for the ears;&lt;/li&gt;
&lt;li&gt;4 LEDs with directional cones;&lt;/li&gt;
&lt;li&gt;An RFID reader at the center, in front of the main board;&lt;/li&gt;
&lt;li&gt;A microphone at the base of the rabbit;&lt;/li&gt;
&lt;li&gt;The main board but I don&amp;rsquo;t care about this one.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;back-view&#34;&gt;Back view&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/2-Back-view.jpg&#34; alt=&#34;Picture of Nabaztag/tag back view&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;




&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/6-Inside-back.jpg&#34; alt=&#34;Picture of Nabaztag/tag opened back view&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;At the rear, we can see (top/down):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Two IR encoders to control the rotation of the ears, at the top;&lt;/li&gt;
&lt;li&gt;The WiFi antenna at the center, in green;&lt;/li&gt;
&lt;li&gt;A loudspeaker a the center just under the WiFi antenna;&lt;/li&gt;
&lt;li&gt;The small card at the bottom is the &amp;ldquo;power adapter&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;A scroll wheel;&lt;/li&gt;
&lt;li&gt;A 3.5mm phone connector (headphone jack).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-button&#34;&gt;The button&lt;/h2&gt;

&lt;p&gt;Will be reusable as is, it seems, so I don&amp;rsquo;t have much to say about this one.&lt;/p&gt;

&lt;h2 id=&#34;the-ears&#34;&gt;The ears&lt;/h2&gt;

&lt;p&gt;They are attached to the body via magnets and are really just two pieces of white plastic.&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/4-No-ears.jpg&#34; alt=&#34;Picture of Nabaztag/tag without its ears&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;At some point, Violet or one of its successor, used to sell colored ears (with patterns and all) for fun and profit. I wonder where they did all go. Anyway.&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/9-Ears-motors.jpg&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s ears mechanism&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;This is the internal view of the back of the rabbit once you&amp;rsquo;ve removed the black plastic case covering the ears mechanism.&lt;/p&gt;

&lt;p&gt;You can see it consists of two &amp;ldquo;classic DC motors&amp;rdquo;, wired to the rotating pads of the ears (on top) via pulleys-belts.&lt;/p&gt;

&lt;h3 id=&#34;the-dc-motors&#34;&gt;The DC motors&lt;/h3&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/12-DC-motor.jpg&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s ears DC motors&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;Plagiarizing &lt;a href=&#34;http://www.instructables.com/id/Hack-the-Nabaztag/?ALLSTEPS&#34;&gt;Hack the Nabaztag&lt;/a&gt;, here&amp;rsquo;s a description of the DC motors:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The motor wires are BROWN and RED. If you connect one to GND and one to
PWR, the ears will spin in one direction; if you swap them, they go in
the opposite direction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want the ears to be bidirectional, you will have to implement an
H-bridge - a hardware switch that reverses a motor&amp;rsquo;s polarity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks, this is exactly what we&amp;rsquo;ll do eventually.&lt;/p&gt;

&lt;h3 id=&#34;the-ir-encoders&#34;&gt;The IR encoders&lt;/h3&gt;

&lt;p&gt;
&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/10-IR-encoder.jpg&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s ears IR encoder&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/11-Pulleys-belt.jpg&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s pulleys-belt and cogs mechanism&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;This time plagiarizing from &lt;a href=&#34;https://github.com/Oripy/Rabbity-Pi/wiki/Nabaztag-hardware-investigation&#34;&gt;Rabbity-Pi&lt;/a&gt;, here&amp;rsquo;s a description of the use of the IR encoder:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A IR encoder is used to control the rotation, a wheel with 20 tooth
passes in front of the IR sensor. Actually 3 of those tooth are missing
(in order to detect the absolute position). The Nabaztag is doing a full
rotation of the ears when booting in order to initialise the positioning.&lt;/p&gt;

&lt;p&gt;Numbering each teeth from 0 to 19, ear is vertical when teeth number 3 is
in front of the sensor, and horizontal when it is teeth number 13.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And from &lt;a href=&#34;http://www.instructables.com/id/Hack-the-Nabaztag/?ALLSTEPS&#34;&gt;Hack the Nabaztag&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Each of the little blue chips has a small optical encoder on it: an IR
LED and a receiver that senses it. As the ear turns, a gear&amp;rsquo;s teeth pass
between the LED and receiver, and turn it &amp;lsquo;on&amp;rsquo; and &amp;lsquo;off&amp;rsquo;. The gear is
missing one single tooth, so the encoder knows: when its signal does NOT
get interrupted by the gear&amp;rsquo;s teeth, the ear is pointing forward. On
tooth 3, ears point up; on tooth 13, they are horizontal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m a total electronic beginner and if you too, I&amp;rsquo;ve googled around and found this &lt;a href=&#34;https://youtu.be/Q9d3d-gNii8&#34;&gt;great video on How an Encoder Works&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;leds&#34;&gt;LEDs&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/LEDs.png&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s LEDs and cones&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;On this picture we can see four directional cones to lead the LEDs light onto the translucent case.&lt;/p&gt;

&lt;p&gt;The LEDs are soldered onto the board, and what you cannot see on this picture (and I forgot to take another one, duh) is that there is a fifth LED at the bottom of the main board, whose cone is aimed toward the bottom of the rabbit, to give some sort of &amp;ldquo;ambient light&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to start &amp;ldquo;doing electronics&amp;rdquo; by having to identify components and unsolder them, so I just won&amp;rsquo;t reuse the LEDs and experiment with simpler ones.&lt;/p&gt;

&lt;h2 id=&#34;rfid&#34;&gt;RFID&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/RFID.png&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s RFID reader&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;The RFID reader is also visible on the front picture, right at the center, between the LED cones and in front of the main board.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://petertyser.com/nabaztag-nabaztagtag-dissection/&#34;&gt;Nabaztagtag (Nabaztag v2) Dissection&lt;/a&gt; has more detailed information as he tried identify each component of the RFID reader. I am not going to use the RFID reader at first, and I can&amp;rsquo;t decide which technology (RFID, NFC, Bluetooth Low Energy?) I will use eventually, so I won&amp;rsquo;t try to reuse it either.&lt;/p&gt;

&lt;h2 id=&#34;microphone&#34;&gt;Microphone&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/Microphone.png&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s Microphone&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;




&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/16-Microphone.jpg&#34; alt=&#34;Detailed view of the microphone&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;I do not know if I will make use of the microphone &amp;ldquo;as is&amp;rdquo; yet. Maybe I will have to replace it, be it for compatibility reasons or sound quality.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;http://www.instructables.com/id/RabbitPi-the-Alexa-Enabled-IFTTT-Connected-Ear-Wig/?ALLSTEPS&#34;&gt;RabbitPi&lt;/a&gt;, MisterM has used a &lt;a href=&#34;https://www.raspberrypi.org/products/camera-module/&#34;&gt;Pi camera&lt;/a&gt; in his project to put where the Nabaztag/tag&amp;rsquo;s microphone and Karotz (Nabaztag V3) camera used to stand. And for the microphone, he used a webcam&amp;rsquo;s microphone.&lt;/p&gt;

&lt;p&gt;Although he hacked a Nabaztag V1 which does not have a microphone already, whereas my V2 has one, I have to admit that I&amp;rsquo;m very tempted to do the same thing (with the Pi camera). Plus I will not have to drill a hole, maybe just make it larger.&lt;/p&gt;

&lt;h2 id=&#34;wifi&#34;&gt;WiFi&lt;/h2&gt;

&lt;p&gt;The WiFi capabilities is added via two components as it seems, a wireless module attached to the back of the main board, and a WiFi antenna at the rear of the rabbit.&lt;/p&gt;

&lt;p&gt;
&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/Wireless.png&#34; alt=&#34;Detailed view of the wireless module&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/WiFi-antenna.png&#34; alt=&#34;Detailed view of the WiFi antenna&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;Again, at this point I think I am just not going to use this setup at find a standalone WiFi dongle that fits into the rabbit&amp;rsquo;s body. There are some &lt;a href=&#34;http://hackaday.com/2015/11/28/first-raspberry-pi-zero-hack-piggy-back-wifi/&#34;&gt;funny hacks&lt;/a&gt; out there, and also an &lt;a href=&#34;https://www.kickstarter.com/projects/1991736672/iot-hat-for-raspberry-pi-a-must-have-for-pi-zero/description&#34;&gt;interesting project&lt;/a&gt; to keep an eye on.&lt;/p&gt;

&lt;h2 id=&#34;loudspeaker&#34;&gt;Loudspeaker&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/6-Inside-back.jpg&#34; alt=&#34;Picture of Nabaztag/tag&amp;#39;s loudspeaker&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;The loudspeaker is clearly visible at the center of the rabbit&amp;rsquo;s back. To me it looks like a basic sound speaker, nothing to be afraid of.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;http://www.instructables.com/id/RabbitPi-the-Alexa-Enabled-IFTTT-Connected-Ear-Wig/?ALLSTEPS&#34;&gt;RabbitPi&lt;/a&gt;, MisterM has used a phillips soundspeaker in place of the original one.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not sure I understand why, plus it looks like it needs a battery instead of just being powered by the Nabaztag itself. But maybe I just missed an important information while reading his project.&lt;/p&gt;

&lt;h2 id=&#34;power&#34;&gt;Power&lt;/h2&gt;

&lt;p&gt;
&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/13-Power-adapter-back.jpg&#34; alt=&#34;Detailed back view of the power supply&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/14-Power-adapter-front.jpg&#34; alt=&#34;Detailed front view of the power supply&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a bit lost, here.&lt;/p&gt;

&lt;p&gt;This is the power supply of the Nabaztag/tag, which comes with a cord that I have lost, I mean I think did. And even if I still have it, somewhere, I&amp;rsquo;m not quite sure what to do about it because I&amp;rsquo;m pretty sure this needs work to make the voltage and stuff in line with what the RaspberryPi needs/can sustain.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Oripy/Rabbity-Pi/wiki/Nabaztag-hardware-investigation&#34;&gt;Rabbity-Pi&lt;/a&gt; summarizes my thinking almost accurately:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At first I wasn&amp;rsquo;t interested in re-using the Nabaztag power system but as
it provides a removable connector that may be easily connected to my
electronic board, I may reuse it. At least to power the motors, and maybe
the Raspberry-Pi itself if the voltage and other characteristics are
suitable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.instructables.com/id/RabbitPi-the-Alexa-Enabled-IFTTT-Connected-Ear-Wig/?ALLSTEPS&#34;&gt;RabbitPi&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I had planned to run the motors from a usb power bank so that I&amp;rsquo;d only
need a single power plug, but this turned out not to have enough grunt,
it wouldn&amp;rsquo;t even light up the &amp;ldquo;Working&amp;rdquo; led on the HAT. I decided instead
to use a DC power adaptor to run the HAT and ears, I conveniently had one
of those universal ones with interchangeable tips handy. What I didn&amp;rsquo;t
have was a DC socket to connect the adaptor to the HAT. [&amp;hellip;] I
remembered from the teardown that the Nabaztag&amp;rsquo;s original power lead was
a standard DC plug - therefore I could just re-wire the original power
socket to the HAT - neat! In the end I also re-used the original Nabaztag
power supply, as it provided just the right amount of power.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m too much of a beginner to know at first sight what I can/cannot do with a piece of electronics. My guts tell me that I can reuse this (and &lt;strong&gt;&lt;em&gt;me wants to reuse this&lt;/em&gt;&lt;/strong&gt;), but I will see what I can do with it when I&amp;rsquo;ll really begin messing with eletronics and get my hands dirty on some basic techniques.&lt;/p&gt;

&lt;h2 id=&#34;sound&#34;&gt;Sound&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/nabaztagtag-internals/15-Wheel-and-Jack.jpg&#34; alt=&#34;Detailed front view of the volume wheel and jack entry&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
&lt;/figure&gt;



&lt;h3 id=&#34;scroll-wheel&#34;&gt;Scroll wheel&lt;/h3&gt;

&lt;p&gt;I definitely want to keep this and use it for either sound volume control or other interaction.&lt;/p&gt;

&lt;p&gt;Again according to &lt;a href=&#34;http://www.instructables.com/id/Hack-the-Nabaztag/?ALLSTEPS&#34;&gt;Hack the Nabaztag&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The scroll wheel is a potentiometer: it measures voltage, which changes
as we rub the &amp;lsquo;wiper&amp;rsquo; up and down. This is an analog input, which the
Teensy will convert into a number between 0 and 1023.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He&amp;rsquo;s talking about a a &lt;code&gt;Teensy&lt;/code&gt; because it&amp;rsquo;s the microcontroller he&amp;rsquo;s using. I &lt;em&gt;think&lt;/em&gt; my RaspberryPi also has one or two analog inputs (need to check), and I also think it is possible to add external ones in the mix, so no blocker here, just need to wire everything correctly.&lt;/p&gt;

&lt;h2 id=&#34;closing&#34;&gt;Closing&lt;/h2&gt;

&lt;p&gt;The following are two parts of &lt;a href=&#34;http://www.instructables.com/id/Hack-the-Nabaztag/?ALLSTEPS&#34;&gt;Hack the Nabaztag&lt;/a&gt; that I quote here for reference, I feel like they will prove useful.&lt;/p&gt;

&lt;p&gt;This section is called &amp;ldquo;&lt;strong&gt;Step 10: Wiring it up, for reals.&lt;/strong&gt;&amp;rdquo; and it summarizes some wiring order instructions and voltage information:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At this point, if you&amp;rsquo;ve been working on a breadboard, it&amp;rsquo;s time to take
it all apart and re-solder it permanently. This is going to be a MESS of
wires, so pay close attention to where you route things - there&amp;rsquo;s less
space in that rabbit than you think!&lt;/p&gt;

&lt;p&gt;My recommendation: take your break-apart headers, and solder your wires
to them first, so that they are like breakaway extensions from the
existing wires. Do everything but the H-bridge; that&amp;rsquo;s a special case.
Once you have extension wires on all 5 sets (head, scroll, LEDs, and two
ears), temporarily mount the H-bridge and the Teensy somewhere on your
cardboard block. Route wires as carefully as you can into their final
places, and solder them into the Teensy. Finally, connect all the H
bridge wires to the motors and the Teensy.&lt;/p&gt;

&lt;p&gt;As a review, these are the pins, as I&amp;rsquo;ve placed them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Head button 14 (digital input)&lt;/li&gt;
&lt;li&gt;Scroll wheel 21 (analog input)&lt;/li&gt;
&lt;li&gt;LEDs 2 (output)&lt;/li&gt;
&lt;li&gt;Left motor enable 7 (output)&lt;/li&gt;
&lt;li&gt;Left motor reverse 8 (output)&lt;/li&gt;
&lt;li&gt;Left motor forward 9 (output)&lt;/li&gt;
&lt;li&gt;Right motor enable 10 (output)&lt;/li&gt;
&lt;li&gt;Right motor reverse 11 (output)&lt;/li&gt;
&lt;li&gt;Right motor forward 12 (output)&lt;/li&gt;
&lt;li&gt;Left encoder 18 (analog input) (with resistor &amp;ndash;&amp;gt; GND)&lt;/li&gt;
&lt;li&gt;Right encoder 19 (analog input) (with resistor &amp;ndash;&amp;gt; GND)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The power should be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Head: NONE&lt;/li&gt;
&lt;li&gt;Scroll: 3.3V&lt;/li&gt;
&lt;li&gt;LEDs: 5V&lt;/li&gt;
&lt;li&gt;H-Bridge: 5V&lt;/li&gt;
&lt;li&gt;Encoder BLUE wires (with resistors): 5V&lt;/li&gt;
&lt;li&gt;Encoder YELLOW wires: 3.3V&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip; and you should have 6 wires going to GND.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This part is called &amp;ldquo;&lt;strong&gt;Step 11: Putting the Bunny back together.&lt;/strong&gt;&amp;rdquo;, and its name is pretty self explanatory:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Once you have all the wires soldered and heat-shinked, it&amp;rsquo;s time to wrap
up.&lt;/p&gt;

&lt;p&gt;First, make sure you&amp;rsquo;ve removed the existing power jack from the base of
the black column, then thread your USB micro cable through the white
base. If it doesn&amp;rsquo;t fit, shave some plastic off the cord&amp;rsquo;s head until it
does. Plug it into the Teensy, and you&amp;rsquo;re set for powering and updating
your new Bunny.&lt;/p&gt;

&lt;p&gt;Screw the black column back onto the white base. You don&amp;rsquo;t need the black
ring around the base anymore (though you can put it back if you like).&lt;/p&gt;

&lt;p&gt;Gently wiggle the white case over the electronics and back into place.
This might take a while. Just be patient - press wires out of the way,
shave off more cardboard, add tape where needed - until it all fits
again. It&amp;rsquo;s important to get the alignment right, or the ears will get
stuck against the body. If you run into this problem, place a thin
washer-magnet between the ear and the socket to give the ear some extra
clearance.&lt;/p&gt;

&lt;p&gt;Put the screws in, and you&amp;rsquo;re done - at least, with this part.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;Pictures and information (really, all of it) courtesy of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://petertyser.com/nabaztag-nabaztagtag-dissection/&#34;&gt;Nabaztagtag (Nabaztag v2) Dissection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.techrepublic.com/pictures/cracking-open-the-nabaztag-wi-fi-rabbit/6/&#34;&gt;Cracking open the Nabaztag Wi-Fi rabbit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Oripy/Rabbity-Pi/wiki/Nabaztag-hardware-investigation&#34;&gt;Rabbity-Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Instructables&#34;&gt;Hack the Nabaztag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Instructables&#34;&gt;RabbitPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MR. P — Project outline</title>
      <link>http://i-rant.arnaudbos.com/mr-p-outline/</link>
      <pubDate>Sun, 05 Jun 2016 00:22:34 +0100</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/mr-p-outline/</guid>
      <description>


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/mr-p-outline/nabaztags.png&#34; alt=&#34;Photo of several Nabaztag rabbits&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Nabaztag/tags&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Updated&lt;/strong&gt;: June 15th, 2016&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Created&lt;/strong&gt;: June 5th, 2016&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: Kick-off of &amp;ldquo;Mr. P&amp;rdquo; project for &lt;a href=&#34;https://en.wikipedia.org/wiki/Nabaztag&#34;&gt;Nabaztag/tag&lt;/a&gt; rabbit resurection with a &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Naming&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Nabaztag means &amp;ldquo;rabbit&amp;rdquo; ;&lt;/li&gt;
&lt;li&gt;There&amp;rsquo;s a rabbit whose name is &amp;ldquo;Mr. Rabbit&amp;rdquo; in &lt;a href=&#34;https://en.wikipedia.org/wiki/Fantastic_Mr._Fox_(film)&#34;&gt;Fantastic Mr. Fox&lt;/a&gt; film, which I love ;&lt;/li&gt;
&lt;li&gt;There&amp;rsquo;s also a &amp;ldquo;Mr. Rabbit&amp;rdquo; in the &lt;a href=&#34;https://en.wikipedia.org/wiki/Utopia_(UK_TV_series)&#34;&gt;Utopia&lt;/a&gt; TV series, which I&amp;rsquo;m an absolute fan of ;&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;ll use a &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;nabaztag&#34;&gt;Nabaztag&lt;/h2&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/mr-p-outline/Nabaztag.jpg&#34; alt=&#34;Photo of a dismantled Nabaztag/tag&#34;
            width=&#34;100%&#34;
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Nabaztag/tag&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;Here&amp;rsquo;s a really great introduction of what&amp;rsquo;s a Nabaztag(/tag), found at &lt;a href=&#34;http://www.instructables.com/id/RabbitPi-the-Alexa-Enabled-IFTTT-Connected-Ear-Wig/?ALLSTEPS&#34;&gt;RabbitPi&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The original Nabaztag &amp;quot;first smart rabbit&amp;quot; was released in 2005, billed
as an ambient home assistant (sound familiar Amazon &amp;amp; Google?) - arguably
it was the first &amp;quot;Internet of Things&amp;quot; thing and was in many ways way
ahead of its time, I bought one straightway. It sat on our mantelpiece
reading out daily weather forecasts and occasional notifications but
never had a lot of capability, relying on a WEP wi-fi connection and
proprietary software and servers to provide its text-to-speech (TTS)
services. It&#39;s hard to imagine now but at the time there wasn&#39;t that much
it could connect to, social media was barely a thing, Nokia ruled the
smartphone world and LED lightbulbs were an expensive novelty.

In coming years there followed two further versions, the Nabaztag:Tag and
the Karotz, both offered improved functionality but neither found its
niche in the marketplace, ultimately let down by hardware and software
limitations. The shame was that as soon as the supporting servers were
switched off the previously smart rabbits became little more than
ornaments. Several community projects tried to replace the services of
the &amp;quot;official&amp;quot; servers, and we did use &amp;quot;OpenKarotz&amp;quot; for a while, but this
too seemed to die off a year or two ago, leaving my rabbits silent and
immobile atop my speakers.

Anyway history lesson over! The upshot is that we fondly remember the
presence of the Nabaztag in our living room, and I wanted it back, but as
a proper modern IoT device.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mine is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Nabaztag#Nabaztag.2Ftag&#34;&gt;Nabaztag/tag&lt;/a&gt;, the second version whose most noteworthy additions are a microphone and an RFID reader.&lt;/p&gt;

&lt;p&gt;Without going into too much details, here are the capabilities and internals of this rabbit by itself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Top button ;&lt;/li&gt;
&lt;li&gt;Moving ear motor and ear position sensor (x2 ears) ;&lt;/li&gt;
&lt;li&gt;Microphone ;&lt;/li&gt;
&lt;li&gt;Sound speaker ;&lt;/li&gt;
&lt;li&gt;3.5 jack female output ;&lt;/li&gt;
&lt;li&gt;Volume wheel ;&lt;/li&gt;
&lt;li&gt;LEDs (x5) ;&lt;/li&gt;
&lt;li&gt;RFID sensor ;&lt;/li&gt;
&lt;li&gt;WiFi card ;&lt;/li&gt;
&lt;li&gt;Power adapter.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;raspberry-pi&#34;&gt;Raspberry Pi&lt;/h2&gt;

&lt;p&gt;Mine is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Raspberry_Pi#Specifications&#34;&gt;Model B Generation 1 revision 1.2&lt;/a&gt;:&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/mr-p-outline/Pi-model-B.png&#34; alt=&#34;Schema of a Raspberry Pi board&#34;
            
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Model B&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;I am planning to go for a &lt;a href=&#34;https://www.raspberrypi.org/products/pi-zero/&#34;&gt;Raspberry Pi Zero&lt;/a&gt; to reduce the real estate footprint inside the rabbit case eventually:&lt;/p&gt;


&lt;figure  &gt;
    
        &lt;img src=&#34;http://i-rant.arnaudbos.com/img/mr-p-outline/Pi-zero.png&#34; alt=&#34;Design of a Raspberry Pi Zero&#34;
            
            /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h6&gt;&lt;em&gt;Pi Zero&lt;/em&gt;&lt;/h6&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;But in the mean time, a full sized Model B will be alright, especially for learning purposes.&lt;/p&gt;

&lt;p&gt;The Pi runs &lt;a href=&#34;https://en.wikipedia.org/wiki/Raspbian&#34;&gt;Raspbian Jessie&lt;/a&gt; version 4.4 (2016-05-27), downloaded from &lt;a href=&#34;https://www.raspberrypi.org/downloads/raspbian/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;iot-skills&#34;&gt;IoT skills&lt;/h2&gt;

&lt;p&gt;At this very moment, I know almost nothing about IoT, electronics or robotics, and the only goal of this project is to learn and eventually play with &lt;a href=&#34;https://developer.amazon.com/alexa&#34;&gt;Amazon Alexa&lt;/a&gt; service.&lt;/p&gt;

&lt;p&gt;I also want to make something useful with my Nabaztag, which has became nothing more than a paperweight since almost ten years: I used it a little at the beginning but the use was very limited, and then the service was discontinued.&lt;/p&gt;

&lt;p&gt;My girlfriend at that time (now my wife), who offered it to me, often jokes about how I&amp;rsquo;m &amp;ldquo;not using this thing she bought me&amp;rdquo;. So now is time to prove her wrong and make something not useless out of it, not just some geeky gadget.&lt;/p&gt;

&lt;p&gt;So I am planning to use this project as a long running learning and hacking project for home automation.&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Oripy/Rabbity-Pi&#34;&gt;Rabbity-Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.instructables.com/id/Hack-the-Nabaztag/?ALLSTEPS&#34;&gt;Hack the Nabaztag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.instructables.com/id/RabbitPi-the-Alexa-Enabled-IFTTT-Connected-Ear-Wig/?ALLSTEPS&#34;&gt;RabbitPi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://petertyser.com/nabaztag-nabaztagtag-dissection/&#34;&gt;Nabaztagtag (Nabaztag v2) Dissection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://louterrailloune.com/category/nabaztag/&#34;&gt;http://louterrailloune.com/category/nabaztag/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://i-rant.arnaudbos.com/drafts/architecture-decision-records/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://i-rant.arnaudbos.com/drafts/architecture-decision-records/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>